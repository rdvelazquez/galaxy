{"version":3,"sources":["admin.toolshed.js"],"names":["AdminToolshedRouter","Backbone","Router","extend","initialize","routesHit","history","on","bind","trackPageview","routes","sheds","queue","workflows","status","back","window","navigate","trigger","replace","GalaxyAdminToolshedApp","View","app_config","known_views","Galaxy","admintoolshedapp","admin_toolshed_router","adminRepoQueueView","reDraw","RepoQueueView","adminShedListView","ShedListView","adminShedCategoriesView","tool_shed","CategoryView","category_id","adminShedCategoryView","Category","repository_id","adminRepositoryView","RepoDetails","adminRepoStatusView","repositories","split","RepoStatus","adminWorkflowsView","Workflows","start","pushState","GalaxyApp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,QAAIA,sBAAsBC,SAASC,MAAT,CAAgBC,MAAhB,CAAuB;AAC7CC,oBAAY,sBAAW;AACnB,iBAAKC,SAAL,GAAiB,CAAjB;AACA;AACAJ,qBAASK,OAAT,CAAiBC,EAAjB,CACI,OADJ,EAEI,YAAW;AACP,qBAAKF,SAAL;AACH,aAJL,EAKI,IALJ;AAOA,iBAAKG,IAAL,CAAU,OAAV,EAAmB,KAAKC,aAAxB;AACH,SAZ4C;;AAc7CC,gBAAQ;AACJ,gBAAI,WADA;AAEJC,mBAAO,WAFH;AAGJC,mBAAO,OAHH;AAIJC,uBAAW,WAJP;AAKJ,sCAA0B,QALtB;AAMJC,oBAAQ,QANJ;AAOJ,uCAA2B,YAPvB;AAQJ,mDAAuC,cARnC;AASJ,wDAA4C;AATxC,SAdqC;;AA0B7C;;;;;;AAMAC,cAAM,gBAAW;AACb,gBAAI,KAAKV,SAAL,GAAiB,CAArB,EAAwB;AACpBW,uBAAOV,OAAP,CAAeS,IAAf;AACH,aAFD,MAEO;AACH,qBAAKE,QAAL,CAAc,GAAd,EAAmB,EAAEC,SAAS,IAAX,EAAiBC,SAAS,IAA1B,EAAnB;AACH;AACJ;AAtC4C,KAAvB,CAA1B;;AAyCA,QAAIC,yBAAyBnB,SAASoB,IAAT,CAAclB,MAAd,CAAqB;AAC9CmB,oBAAY;AACRC,yBAAa,CAAC,WAAD,EAAc,OAAd,EAAuB,QAAvB,EAAiC,YAAjC,EAA+C,cAA/C,EAA+D,aAA/D;AADL,SADkC;;AAK9CnB,oBAAY,sBAAW;AACnBoB,mBAAOC,gBAAP,GAA0B,IAA1B;AACA,iBAAKC,qBAAL,GAA6B,IAAI1B,mBAAJ,EAA7B;;AAEA,iBAAK0B,qBAAL,CAA2BnB,EAA3B,CAA8B,aAA9B,EAA6C,YAAM;AAC/C,oBAAIiB,OAAOC,gBAAP,CAAwBE,kBAA5B,EAAgD;AAC5CH,2BAAOC,gBAAP,CAAwBE,kBAAxB,CAA2CC,MAA3C;AACH,iBAFD,MAEO;AACHJ,2BAAOC,gBAAP,CAAwBE,kBAAxB,GAA6C,IAAI,8BAAmBE,aAAvB,EAA7C;AACH;AACJ,aAND;AAOA,iBAAKH,qBAAL,CAA2BnB,EAA3B,CAA8B,iBAA9B,EAAiD,YAAM;AACnD,oBAAIiB,OAAOC,gBAAP,CAAwBK,iBAA5B,EAA+C;AAC3CN,2BAAOC,gBAAP,CAAwBK,iBAAxB,CAA0CF,MAA1C;AACH,iBAFD,MAEO;AACHJ,2BAAOC,gBAAP,CAAwBK,iBAAxB,GAA4C,IAAI,uBAAmBC,YAAvB,EAA5C;AACH;AACJ,aAND;AAOA,iBAAKL,qBAAL,CAA2BnB,EAA3B,CAA8B,kBAA9B,EAAkD,qBAAa;AAC3D,oBAAIiB,OAAOC,gBAAP,CAAwBO,uBAA5B,EAAqD;AACjDR,2BAAOC,gBAAP,CAAwBO,uBAAxB,CAAgDJ,MAAhD,CAAuD;AACnDK,mCAAWA,UAAUd,OAAV,CAAkB,KAAlB,EAAyB,KAAzB;AADwC,qBAAvD;AAGH,iBAJD,MAIO;AACHK,2BAAOC,gBAAP,CAAwBO,uBAAxB,GAAkD,IAAI,yBAAoBE,YAAxB,CAAqC;AACnFD,mCAAWA,UAAUd,OAAV,CAAkB,KAAlB,EAAyB,KAAzB;AADwE,qBAArC,CAAlD;AAGH;AACJ,aAVD;AAWA,iBAAKO,qBAAL,CAA2BnB,EAA3B,CAA8B,oBAA9B,EAAoD,UAAC0B,SAAD,EAAYE,WAAZ,EAA4B;AAC5E,oBAAIX,OAAOC,gBAAP,CAAwBW,qBAA5B,EAAmD;AAC/CZ,2BAAOC,gBAAP,CAAwBW,qBAAxB,CAA8CR,MAA9C,CAAqD;AACjDK,mCAAWA,UAAUd,OAAV,CAAkB,KAAlB,EAAyB,KAAzB,CADsC;AAEjDgB,qCAAaA;AAFoC,qBAArD;AAIH,iBALD,MAKO;AACHX,2BAAOC,gBAAP,CAAwBW,qBAAxB,GAAgD,IAAI,2BAAsBC,QAA1B,CAAmC;AAC/EJ,mCAAWA,UAAUd,OAAV,CAAkB,KAAlB,EAAyB,KAAzB,CADoE;AAE/EgB,qCAAaA;AAFkE,qBAAnC,CAAhD;AAIH;AACJ,aAZD;AAaA,iBAAKT,qBAAL,CAA2BnB,EAA3B,CAA8B,kBAA9B,EAAkD,UAAC0B,SAAD,EAAYK,aAAZ,EAA8B;AAC5E,oBAAId,OAAOC,gBAAP,CAAwBc,mBAA5B,EAAiD;AAC7Cf,2BAAOC,gBAAP,CAAwBc,mBAAxB,CAA4CX,MAA5C,CAAmD;AAC/CK,mCAAWA,UAAUd,OAAV,CAAkB,KAAlB,EAAyB,KAAzB,CADoC;AAE/CmB,uCAAeA;AAFgC,qBAAnD;AAIH,iBALD,MAKO;AACHd,2BAAOC,gBAAP,CAAwBc,mBAAxB,GAA8C,IAAI,yBAAoBC,WAAxB,CAAoC;AAC9EP,mCAAWA,UAAUd,OAAV,CAAkB,KAAlB,EAAyB,KAAzB,CADmE;AAE9EmB,uCAAeA;AAF+D,qBAApC,CAA9C;AAIH;AACJ,aAZD;AAaA,iBAAKZ,qBAAL,CAA2BnB,EAA3B,CAA8B,cAA9B,EAA8C,wBAAgB;AAC1D,oBAAIiB,OAAOC,gBAAP,CAAwBgB,mBAA5B,EAAiD;AAC7CjB,2BAAOC,gBAAP,CAAwBgB,mBAAxB,CAA4Cb,MAA5C,CAAmD;AAC/Cc,sCAAcA,aAAaC,KAAb,CAAmB,GAAnB;AADiC,qBAAnD;AAGH,iBAJD,MAIO;AACHnB,2BAAOC,gBAAP,CAAwBgB,mBAAxB,GAA8C,IAAI,yBAAqBG,UAAzB,CAAoC;AAC9EF,sCAAcA,aAAaC,KAAb,CAAmB,GAAnB;AADgE,qBAApC,CAA9C;AAGH;AACJ,aAVD;AAWA,iBAAKjB,qBAAL,CAA2BnB,EAA3B,CAA8B,iBAA9B,EAAiD,YAAM;AACnD,oBAAIiB,OAAOC,gBAAP,CAAwBoB,kBAA5B,EAAgD;AAC5CrB,2BAAOC,gBAAP,CAAwBoB,kBAAxB,CAA2CjB,MAA3C;AACH,iBAFD,MAEO;AACHJ,2BAAOC,gBAAP,CAAwBoB,kBAAxB,GAA6C,IAAI,wBAAmBC,SAAvB,EAA7C;AACH;AACJ,aAND;;AAQA7C,qBAASK,OAAT,CAAiByC,KAAjB,CAAuB,EAAEC,WAAW,KAAb,EAAvB;AACH;AAhF6C,KAArB,CAA7B;;sBAmFe;AACXC,mBAAW7B;AADA,K","file":"../scripts/admin.toolshed.js","sourcesContent":["import mod_shed_list_view from \"mvc/toolshed/shed-list-view\";\nimport mod_categories_view from \"mvc/toolshed/categories-view\";\nimport mod_repositories_view from \"mvc/toolshed/repositories-view\";\nimport mod_repository_view from \"mvc/toolshed/repository-view\";\nimport mod_repoqueue_view from \"mvc/toolshed/repository-queue-view\";\nimport mod_repo_status_view from \"mvc/toolshed/repo-status-view\";\nimport mod_workflows_view from \"mvc/toolshed/workflows-view\";\nvar AdminToolshedRouter = Backbone.Router.extend({\n    initialize: function() {\n        this.routesHit = 0;\n        // keep count of number of routes handled by the application\n        Backbone.history.on(\n            \"route\",\n            function() {\n                this.routesHit++;\n            },\n            this\n        );\n        this.bind(\"route\", this.trackPageview);\n    },\n\n    routes: {\n        \"\": \"toolsheds\",\n        sheds: \"toolsheds\",\n        queue: \"queue\",\n        workflows: \"workflows\",\n        \"status/r/:repositories\": \"status\",\n        status: \"status\",\n        \"categories/s/:tool_shed\": \"categories\",\n        \"category/s/:tool_shed/c/:cateory_id\": \"repositories\",\n        \"repository/s/:tool_shed/r/:repository_id\": \"repository\"\n    },\n\n    /**\n     * If more than one route has been hit the user did not land on current\n     * page directly so we can go back safely. Otherwise go to the home page.\n     * Use replaceState if available so the navigation doesn't create an\n     * extra history entry\n     */\n    back: function() {\n        if (this.routesHit > 1) {\n            window.history.back();\n        } else {\n            this.navigate(\"#\", { trigger: true, replace: true });\n        }\n    }\n});\n\nvar GalaxyAdminToolshedApp = Backbone.View.extend({\n    app_config: {\n        known_views: [\"toolsheds\", \"queue\", \"status\", \"categories\", \"repositories\", \"repoository\"]\n    },\n\n    initialize: function() {\n        Galaxy.admintoolshedapp = this;\n        this.admin_toolshed_router = new AdminToolshedRouter();\n\n        this.admin_toolshed_router.on(\"route:queue\", () => {\n            if (Galaxy.admintoolshedapp.adminRepoQueueView) {\n                Galaxy.admintoolshedapp.adminRepoQueueView.reDraw();\n            } else {\n                Galaxy.admintoolshedapp.adminRepoQueueView = new mod_repoqueue_view.RepoQueueView();\n            }\n        });\n        this.admin_toolshed_router.on(\"route:toolsheds\", () => {\n            if (Galaxy.admintoolshedapp.adminShedListView) {\n                Galaxy.admintoolshedapp.adminShedListView.reDraw();\n            } else {\n                Galaxy.admintoolshedapp.adminShedListView = new mod_shed_list_view.ShedListView();\n            }\n        });\n        this.admin_toolshed_router.on(\"route:categories\", tool_shed => {\n            if (Galaxy.admintoolshedapp.adminShedCategoriesView) {\n                Galaxy.admintoolshedapp.adminShedCategoriesView.reDraw({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\")\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminShedCategoriesView = new mod_categories_view.CategoryView({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\")\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:repositories\", (tool_shed, category_id) => {\n            if (Galaxy.admintoolshedapp.adminShedCategoryView) {\n                Galaxy.admintoolshedapp.adminShedCategoryView.reDraw({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    category_id: category_id\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminShedCategoryView = new mod_repositories_view.Category({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    category_id: category_id\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:repository\", (tool_shed, repository_id) => {\n            if (Galaxy.admintoolshedapp.adminRepositoryView) {\n                Galaxy.admintoolshedapp.adminRepositoryView.reDraw({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    repository_id: repository_id\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminRepositoryView = new mod_repository_view.RepoDetails({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    repository_id: repository_id\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:status\", repositories => {\n            if (Galaxy.admintoolshedapp.adminRepoStatusView) {\n                Galaxy.admintoolshedapp.adminRepoStatusView.reDraw({\n                    repositories: repositories.split(\"|\")\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminRepoStatusView = new mod_repo_status_view.RepoStatus({\n                    repositories: repositories.split(\"|\")\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:workflows\", () => {\n            if (Galaxy.admintoolshedapp.adminWorkflowsView) {\n                Galaxy.admintoolshedapp.adminWorkflowsView.reDraw();\n            } else {\n                Galaxy.admintoolshedapp.adminWorkflowsView = new mod_workflows_view.Workflows();\n            }\n        });\n\n        Backbone.history.start({ pushState: false });\n    }\n});\n\nexport default {\n    GalaxyApp: GalaxyAdminToolshedApp\n};\n"]}