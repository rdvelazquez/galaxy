{"version":3,"sources":["mvc/job/job-params.js"],"names":["build_messages","self","$el_message","$el","find","status","getQueryString","message","addClass","html","_","escape","View","Backbone","extend","initialize","options","setElement","render","console","log","empty","append"],"mappings":";;;;;;;;;;;;;;;AAEA;AACA,aAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,YAAIC,cAAcD,KAAKE,GAAL,CAASC,IAAT,CAAc,mBAAd,CAAlB;AACA,YAAIC,SAAS,gBAAMC,cAAN,CAAqB,QAArB,CAAb;AACA,YAAIC,UAAU,gBAAMD,cAAN,CAAqB,SAArB,CAAd;;AAEA,YAAIC,WAAWA,YAAY,EAA3B,EAA+B;AAC3BL,wBAAYM,QAAZ,CAAwBH,MAAxB;AACAH,wBAAYO,IAAZ,SAAuBC,EAAEC,MAAF,CAASJ,OAAT,CAAvB;AACH,SAHD,MAGO;AACHL,wBAAYO,IAAZ,CAAiB,EAAjB;AACH;AACJ;;AAED;AAhBA;AAiBA,QAAIG,OAAOC,SAASD,IAAT,CAAcE,MAAd,CAAqB;AAC5BC,oBAAY,oBAASC,OAAT,EAAkB;AAC1B,gBAAIf,OAAO,IAAX;AACA,iBAAKe,OAAL,GAAeA,OAAf;AACA,iBAAKC,UAAL,CAAgB,QAAhB;AACA,iBAAKC,MAAL;AACH,SAN2B;;AAQ5BA,gBAAQ,kBAAW;AACfC,oBAAQC,GAAR,CAAY,IAAZ;AACA,gBAAInB,OAAO,IAAX;AACAA,iBAAKE,GAAL,CAASkB,KAAT,GAAiBC,MAAjB,CAAwB,kBAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AApC2B,KAArB,CAAX;;sBAuCe;AACXV,cAAMA;AADK,K","file":"../../../scripts/mvc/job/job-params.js","sourcesContent":["/** Workflow view */\nimport Utils from \"utils/utils\";\n/** Build messages after user action */\nfunction build_messages(self) {\n    var $el_message = self.$el.find(\".response-message\");\n    var status = Utils.getQueryString(\"status\");\n    var message = Utils.getQueryString(\"message\");\n\n    if (message && message !== \"\") {\n        $el_message.addClass(`${status}message`);\n        $el_message.html(`<p>${_.escape(message)}</p>`);\n    } else {\n        $el_message.html(\"\");\n    }\n}\n\n/** View of the main workflow list page */\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.options = options;\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        console.log(\"HI\");\n        var self = this;\n        self.$el.empty().append(\"<h1>Testing</h1>\");\n        //var self = this,\n        //min_query_length = 3;\n        //$.getJSON( Galaxy.root + 'api/workflows/', function( workflows ) {\n        //var $el_workflow = null;\n        //// Add workflow header\n        //// Add user actions message if any\n        //build_messages( self );\n        //$el_workflow = self.$el.find( '.user-workflows' );\n        //// Add the actions buttons\n        //$el_workflow.append( self._templateActionButtons() );\n        //if( workflows.length > 0) {\n        //$el_workflow.append( self._templateWorkflowTable( self, workflows) );\n        //self.adjust_actiondropdown( $el_workflow );\n        //// Register delete and run workflow events\n        //_.each( workflows, function( wf ) {\n        //self.confirm_delete( self, wf );\n        //});\n        //// Register search workflow event\n        //self.search_workflow( self, self.$el.find( '.search-wf' ), self.$el.find( '.workflow-search tr' ), min_query_length );\n        //}\n        //else {\n        //$el_workflow.append( self._templateNoWorkflow() );\n        //}\n        //});\n    }\n});\n\nexport default {\n    View: View\n};\n"]}