{"version":3,"sources":["mvc/ui/ui-options.js"],"names":["Base","Backbone","View","extend","initialize","options","self","model","Model","visible","data","id","uid","error_text","wait_text","multiple","optional","onchange","set","listenTo","_changeValue","_changeWait","_changeData","_changeVisible","on","get","value","render","$el","empty","removeClass","addClass","append","$message","$","$menu","$options","_template","all_button","ButtonCheck","onclick","prop","_getValue","trigger","update","_templateOptions","_","each","_templateOption","option","tooltip","title","placement","length","_messageShow","hide","css","show","_setValue","first","isArray","new_value","undefined","val","wait","unwait","values","v","selected","push","isEmpty","text","status","html","BaseIcons","pair","attr","type","name","label","Radio","prototype","call","Checkbox","RadioButton","closest","icon"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-options.js","sourcesContent":["/** Base class for options based ui elements **/\nimport Utils from \"utils/utils\";\nimport Buttons from \"mvc/ui/ui-buttons\";\nvar Base = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                visible: true,\n                data: [],\n                id: Utils.uid(),\n                error_text: \"No options available.\",\n                wait_text: \"Please wait...\",\n                multiple: false,\n                optional: false,\n                onchange: function() {}\n            }).set(options);\n        this.listenTo(this.model, \"change:value\", this._changeValue, this);\n        this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n        this.listenTo(this.model, \"change:data\", this._changeData, this);\n        this.listenTo(this.model, \"change:visible\", this._changeVisible, this);\n        this.on(\"change\", () => {\n            self.model.get(\"onchange\")(self.value());\n        });\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.$el\n            .empty()\n            .removeClass()\n            .addClass(\"ui-options\")\n            .append((this.$message = $(\"<div/>\")))\n            .append((this.$menu = $(\"<div/>\").addClass(\"ui-options-menu\")))\n            .append((this.$options = $(this._template())));\n\n        // add select/unselect all button\n        this.all_button = null;\n        if (this.model.get(\"multiple\")) {\n            this.all_button = new Buttons.ButtonCheck({\n                onclick: function() {\n                    self.$(\"input\").prop(\"checked\", self.all_button.value() !== 0);\n                    self.value(self._getValue());\n                    self.trigger(\"change\");\n                }\n            });\n            this.$menu.append(this.all_button.$el);\n        }\n\n        // finalize dom\n        this._changeData();\n        this._changeWait();\n        this._changeVisible();\n    },\n\n    /** Update available options */\n    update: function(options) {\n        this.model.set(\"data\", options);\n    },\n\n    _changeData: function() {\n        var self = this;\n        this.$options.empty();\n        if (this._templateOptions) {\n            this.$options.append(this._templateOptions(this.model.get(\"data\")));\n        } else {\n            _.each(this.model.get(\"data\"), option => {\n                self.$options.append(\n                    $(self._templateOption(option))\n                        .addClass(\"ui-option\")\n                        .tooltip({\n                            title: option.tooltip,\n                            placement: \"bottom\"\n                        })\n                );\n            });\n        }\n        var self = this;\n        this.$(\"input\").on(\"change\", () => {\n            self.value(self._getValue());\n            self.trigger(\"change\");\n        });\n        this._changeValue();\n        this._changeWait();\n    },\n\n    _changeVisible: function() {\n        this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n    },\n\n    _changeWait: function() {\n        if (this.model.get(\"wait\")) {\n            if (this.length() === 0) {\n                this._messageShow(this.model.get(\"wait_text\"), \"info\");\n                this.$options.hide();\n                this.$menu.hide();\n            }\n        } else {\n            if (this.length() === 0) {\n                this._messageShow(this.model.get(\"error_text\"), \"danger\");\n                this.$options.hide();\n                this.$menu.hide();\n            } else {\n                this.$message.hide();\n                this.$options.css(\"display\", \"inline-block\");\n                this.$menu.show();\n            }\n        }\n    },\n\n    _changeValue: function() {\n        this._setValue(this.model.get(\"value\"));\n        if (this._getValue() === null && !this.model.get(\"multiple\") && !this.model.get(\"optional\")) {\n            this._setValue(this.first());\n        }\n        this.all_button &&\n            this.all_button.value($.isArray(this._getValue()) ? this._getValue().length : 0, this.length());\n    },\n\n    /** Return/Set current selection */\n    value: function(new_value) {\n        new_value !== undefined && this.model.set(\"value\", new_value);\n        return this._getValue();\n    },\n\n    /** Return first available option */\n    first: function() {\n        var options = this.$(\"input\").first();\n        return options.length > 0 ? options.val() : null;\n    },\n\n    /** Show a spinner indicating that the select options are currently loaded */\n    wait: function() {\n        this.model.set(\"wait\", true);\n    },\n\n    /** Hide spinner indicating that the request has been completed */\n    unwait: function() {\n        this.model.set(\"wait\", false);\n    },\n\n    /** Returns the number of options */\n    length: function() {\n        return this.$(\".ui-option\").length;\n    },\n\n    /** Set value to dom */\n    _setValue: function(new_value) {\n        var self = this;\n        if (new_value !== undefined) {\n            this.$(\"input\").prop(\"checked\", false);\n            if (new_value !== null) {\n                var values = $.isArray(new_value) ? new_value : [new_value];\n                _.each(values, v => {\n                    self\n                        .$(`input[value=\"${v}\"]`)\n                        .first()\n                        .prop(\"checked\", true);\n                });\n            }\n        }\n    },\n\n    /** Return current selection */\n    _getValue: function() {\n        var selected = [];\n        this.$(\":checked\").each(function() {\n            selected.push($(this).val());\n        });\n        if (Utils.isEmpty(selected)) {\n            return null;\n        }\n        return this.model.get(\"multiple\") ? selected : selected[0];\n    },\n\n    /** Show message instead if options */\n    _messageShow: function(text, status) {\n        this.$message\n            .show()\n            .removeClass()\n            .addClass(`ui-message alert alert-${status}`)\n            .html(text);\n    },\n\n    /** Main template function */\n    _template: function() {\n        return $(\"<div/>\").addClass(\"ui-options-list\");\n    }\n});\n\n/** Iconized **/\nvar BaseIcons = Base.extend({\n    _templateOption: function(pair) {\n        var id = Utils.uid();\n        return $(\"<div/>\")\n            .addClass(\"ui-option\")\n            .append(\n                $(\"<input/>\").attr({\n                    id: id,\n                    type: this.model.get(\"type\"),\n                    name: this.model.id,\n                    value: pair.value\n                })\n            )\n            .append(\n                $(\"<label/>\")\n                    .addClass(\"ui-options-label\")\n                    .attr(\"for\", id)\n                    .html(pair.label)\n            );\n    }\n});\n\n/** Radio button field **/\nvar Radio = {};\nRadio.View = BaseIcons.extend({\n    initialize: function(options) {\n        options.type = \"radio\";\n        BaseIcons.prototype.initialize.call(this, options);\n    }\n});\n\n/** Checkbox options field **/\nvar Checkbox = {};\nCheckbox.View = BaseIcons.extend({\n    initialize: function(options) {\n        options.type = \"checkbox\";\n        options.multiple = true;\n        BaseIcons.prototype.initialize.call(this, options);\n    }\n});\n\n/** Radio button options field styled as classic buttons **/\nvar RadioButton = {};\nRadioButton.View = Base.extend({\n    initialize: function(options) {\n        Base.prototype.initialize.call(this, options);\n    },\n\n    /** Set current value */\n    _setValue: function(new_value) {\n        if (new_value !== undefined) {\n            this.$(\"input\").prop(\"checked\", false);\n            this.$(\"label\").removeClass(\"active\");\n            this.$(`[value=\"${new_value}\"]`)\n                .prop(\"checked\", true)\n                .closest(\"label\")\n                .addClass(\"active\");\n        }\n    },\n\n    /** Template for a single option */\n    _templateOption: function(pair) {\n        var $el = $(\"<label/>\").addClass(\"btn btn-default\");\n        pair.icon &&\n            $el.append(\n                $(\"<i/>\")\n                    .addClass(\"fa\")\n                    .addClass(pair.icon)\n                    .addClass(!pair.label && \"no-padding\")\n            );\n        $el.append(\n            $(\"<input/>\").attr({\n                type: \"radio\",\n                name: this.model.id,\n                value: pair.value\n            })\n        );\n        pair.label && $el.append(pair.label);\n        return $el;\n    },\n\n    /** Main template function */\n    _template: function() {\n        return $(\"<div/>\")\n            .addClass(\"btn-group ui-radiobutton\")\n            .attr(\"data-toggle\", \"buttons\");\n    }\n});\n\nexport default {\n    Base: Base,\n    BaseIcons: BaseIcons,\n    Radio: Radio,\n    RadioButton: RadioButton,\n    Checkbox: Checkbox\n};\n"]}