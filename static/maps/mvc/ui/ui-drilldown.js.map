{"version":3,"sources":["mvc/ui/ui-drilldown.js"],"names":["View","BaseIcons","extend","initialize","options","type","display","multiple","prototype","call","_setValue","new_value","undefined","header_index","self","values","$","isArray","_","each","list","v","_setState","element","header_id","is_expanded","$button","$subgroup","data","show","removeClass","addClass","hide","_templateOptions","attach","$el","find","on","iterate","$tmpl","header","i","level","has_options","length","new_header","slice","value","$group","uid","append","_templateOption","label","name","push","model","get","_template","attr","id"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-drilldown.js","sourcesContent":["/** This class creates/wraps a drill down element. */\nimport Utils from \"utils/utils\";\nimport Options from \"mvc/ui/ui-options\";\nvar View = Options.BaseIcons.extend({\n    initialize: function(options) {\n        options.type = options.display || \"checkbox\";\n        options.multiple = options.type == \"checkbox\";\n        Options.BaseIcons.prototype.initialize.call(this, options);\n    },\n\n    /** Set states for selected values */\n    _setValue: function(new_value) {\n        Options.BaseIcons.prototype._setValue.call(this, new_value);\n        if (new_value !== undefined && new_value !== null && this.header_index) {\n            var self = this;\n            var values = $.isArray(new_value) ? new_value : [new_value];\n            _.each(values, v => {\n                var list = self.header_index[v];\n                _.each(list, element => {\n                    self._setState(element, true);\n                });\n            });\n        }\n    },\n\n    /** Expand/collapse a sub group */\n    _setState: function(header_id, is_expanded) {\n        var $button = this.$(`.button-${header_id}`);\n        var $subgroup = this.$(`.subgroup-${header_id}`);\n        $button.data(\"is_expanded\", is_expanded);\n        if (is_expanded) {\n            $subgroup.show();\n            $button.removeClass(\"fa-plus-square\").addClass(\"fa-minus-square\");\n        } else {\n            $subgroup.hide();\n            $button.removeClass(\"fa-minus-square\").addClass(\"fa-plus-square\");\n        }\n    },\n\n    /** Template to create options tree */\n    _templateOptions: function() {\n        var self = this;\n        this.header_index = {};\n\n        // attach event handler\n        function attach($el, header_id) {\n            var $button = $el.find(`.button-${header_id}`);\n            $button.on(\"click\", () => {\n                self._setState(header_id, !$button.data(\"is_expanded\"));\n            });\n        }\n\n        // recursive function which iterates through options\n        function iterate($tmpl, options, header) {\n            header = header || [];\n            for (var i in options) {\n                var level = options[i];\n                var has_options = level.options && level.options.length > 0;\n                var new_header = header.slice(0);\n                self.header_index[level.value] = new_header.slice(0);\n                var $group = $(\"<div/>\");\n                if (has_options) {\n                    var header_id = Utils.uid();\n                    var $button = $(\"<span/>\")\n                        .addClass(`button-${header_id}`)\n                        .addClass(\"ui-drilldown-button fa fa-plus-square\");\n                    var $subgroup = $(\"<div/>\")\n                        .addClass(`subgroup-${header_id}`)\n                        .addClass(\"ui-drilldown-subgroup\");\n                    $group.append(\n                        $(\"<div/>\")\n                            .append($button)\n                            .append(\n                                self._templateOption({\n                                    label: level.name,\n                                    value: level.value\n                                })\n                            )\n                    );\n                    new_header.push(header_id);\n                    iterate($subgroup, level.options, new_header);\n                    $group.append($subgroup);\n                    attach($group, header_id);\n                } else {\n                    $group.append(\n                        self._templateOption({\n                            label: level.name,\n                            value: level.value\n                        })\n                    );\n                }\n                $tmpl.append($group);\n            }\n        }\n\n        // iterate through options and create dom\n        var $tmpl = $(\"<div/>\");\n        iterate($tmpl, this.model.get(\"data\"));\n        return $tmpl;\n    },\n\n    /** Template for drill down view */\n    _template: function() {\n        return $(\"<div/>\")\n            .addClass(\"ui-options-list drilldown-container\")\n            .attr(\"id\", this.model.id);\n    }\n});\n\nexport default {\n    View: View\n};\n"]}