{"version":3,"sources":["mvc/ui/popup-menu.js"],"names":["PopupMenu","Backbone","View","extend","initialize","$button","options","length","$","data","menu","click","remove","_renderAndShow","event","clickEvent","render","$el","appendTo","css","_getShownPosition","show","_setUpCloseBehavior","addClass","hide","position","html","template","attr","find","each","i","li","option","func","children","call","preventDefault","id","_templateOptions","join","_","map","divider","header","href","target","check","checked","menuWidth","width","x","pageX","Math","min","document","scrollLeft","window","max","top","pageY","left","closePopup","off","parent","err","contents","one","addItem","item","index","splice","removeItem","findIndexByHtml","has","findItemByHtml","toString","create","_create","make_popupmenu","button_element","initial_options","convertedOptions","optionVal","optionKey","newOption","jQuery","type","push","convertLinksToOptions","$parent","selector","elem","$link","text","linkHref","linkTarget","confirmText","confirm","location","fromExistingDom","$buttonElement","$menuElement","menuElementLinkSelector","make_popup_menus","menuSelector","buttonSelectorBuildFn","popupMenusCreated","fromDom"],"mappings":"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","file":"../../../scripts/mvc/ui/popup-menu.js","sourcesContent":["// =============================================================================\n/**\n * view for a popup menu\n */\nvar PopupMenu = Backbone.View.extend({\n    //TODO: maybe better as singleton off the Galaxy obj\n    /** Cache the desired button element and options, set up the button click handler\n     *  NOTE: attaches this view as HTML/jQ data on the button for later use.\n     */\n    initialize: function($button, options) {\n        // default settings\n        this.$button = $button;\n        if (!this.$button.length) {\n            this.$button = $(\"<div/>\");\n        }\n        this.options = options || [];\n        this.$button.data(\"popupmenu\", this);\n\n        // set up button click -> open menu behavior\n        var menu = this;\n        this.$button.click(event => {\n            // if there's already a menu open, remove it\n            $(\".popmenu-wrapper\").remove();\n            menu._renderAndShow(event);\n            return false;\n        });\n    },\n\n    // render the menu, append to the page body at the click position, and set up the 'click-away' handlers, show\n    _renderAndShow: function(clickEvent) {\n        this.render();\n        this.$el\n            .appendTo(\"body\")\n            .css(this._getShownPosition(clickEvent))\n            .show();\n        this._setUpCloseBehavior();\n    },\n\n    // render the menu\n    // this menu doesn't attach itself to the DOM ( see _renderAndShow )\n    render: function() {\n        // render the menu body absolute and hidden, fill with template\n        this.$el\n            .addClass(\"popmenu-wrapper\")\n            .hide()\n            .css({ position: \"absolute\" })\n            .html(this.template(this.$button.attr(\"id\"), this.options));\n\n        // set up behavior on each link/anchor elem\n        if (this.options.length) {\n            var menu = this;\n            //precondition: there should be one option per li\n            this.$el.find(\"li\").each(function(i, li) {\n                var option = menu.options[i];\n\n                // if the option has 'func', call that function when the anchor is clicked\n                if (option.func) {\n                    $(this)\n                        .children(\"a.popupmenu-option\")\n                        .click(event => {\n                            option.func.call(menu, event, option);\n                            // We must preventDefault otherwise clicking \"cancel\"\n                            // on a purge or something still navigates and causes\n                            // the action.\n                            event.preventDefault();\n                            // bubble up so that an option click will call the close behavior\n                        });\n                }\n            });\n        }\n        return this;\n    },\n\n    template: function(id, options) {\n        return ['<ul id=\"', id, '-menu\" class=\"dropdown-menu\">', this._templateOptions(options), \"</ul>\"].join(\"\");\n    },\n\n    _templateOptions: function(options) {\n        if (!options.length) {\n            return \"<li>(no options)</li>\";\n        }\n        return _.map(options, option => {\n            if (option.divider) {\n                return '<li class=\"divider\"></li>';\n            } else if (option.header) {\n                return ['<li class=\"head\"><a href=\"javascript:void(0);\">', option.html, \"</a></li>\"].join(\"\");\n            }\n            var href = option.href || \"javascript:void(0);\";\n            var target = option.target ? ` target=\"${option.target}\"` : \"\";\n\n            var check = option.checked ? '<span class=\"fa fa-check\"></span>' : \"\";\n\n            return [\n                '<li><a class=\"popupmenu-option\" href=\"',\n                href,\n                '\"',\n                target,\n                \">\",\n                check,\n                option.html,\n                \"</a></li>\"\n            ].join(\"\");\n        }).join(\"\");\n    },\n\n    // get the absolute position/offset for the menu\n    _getShownPosition: function(clickEvent) {\n        // display menu horiz. centered on click...\n        var menuWidth = this.$el.width();\n        var x = clickEvent.pageX - menuWidth / 2;\n\n        // adjust to handle horiz. scroll and window dimensions ( draw entirely on visible screen area )\n        x = Math.min(x, $(document).scrollLeft() + $(window).width() - menuWidth - 5);\n        x = Math.max(x, $(document).scrollLeft() + 5);\n        return {\n            top: clickEvent.pageY,\n            left: x\n        };\n    },\n\n    // bind an event handler to all available frames so that when anything is clicked\n    // the menu is removed from the DOM and the event handler unbinds itself\n    _setUpCloseBehavior: function() {\n        var menu = this;\n        //TODO: alternately: focus hack, blocking overlay, jquery.blockui\n\n        // function to close popup and unbind itself\n        function closePopup(event) {\n            $(document).off(\"click.close_popup\");\n            if (window && window.parent !== window) {\n                try {\n                    $(window.parent.document).off(\"click.close_popup\");\n                } catch (err) {}\n            } else {\n                try {\n                    $(\"iframe#galaxy_main\")\n                        .contents()\n                        .off(\"click.close_popup\");\n                } catch (err) {}\n            }\n            menu.remove();\n        }\n\n        $(\"html\").one(\"click.close_popup\", closePopup);\n        if (window && window.parent !== window) {\n            try {\n                $(window.parent.document)\n                    .find(\"html\")\n                    .one(\"click.close_popup\", closePopup);\n            } catch (err) {}\n        } else {\n            try {\n                $(\"iframe#galaxy_main\")\n                    .contents()\n                    .one(\"click.close_popup\", closePopup);\n            } catch (err) {}\n        }\n    },\n\n    // add a menu option/item at the given index\n    addItem: function(item, index) {\n        // append to end if no index\n        index = index >= 0 ? index : this.options.length;\n        this.options.splice(index, 0, item);\n        return this;\n    },\n\n    // remove a menu option/item at the given index\n    removeItem: function(index) {\n        if (index >= 0) {\n            this.options.splice(index, 1);\n        }\n        return this;\n    },\n\n    // search for a menu option by its html\n    findIndexByHtml: function(html) {\n        for (var i = 0; i < this.options.length; i++) {\n            if (_.has(this.options[i], \"html\") && this.options[i].html === html) {\n                return i;\n            }\n        }\n        return null;\n    },\n\n    // search for a menu option by its html\n    findItemByHtml: function(html) {\n        return this.options[this.findIndexByHtml(html)];\n    },\n\n    // string representation\n    toString: function() {\n        return \"PopupMenu\";\n    }\n});\n/** shortcut to new for when you don't need to preserve the ref */\nPopupMenu.create = function _create($button, options) {\n    return new PopupMenu($button, options);\n};\n\n// -----------------------------------------------------------------------------\n// the following class functions are bridges from the original make_popupmenu and make_popup_menus\n// to the newer backbone.js PopupMenu\n\n/** Create a PopupMenu from simple map initial_options activated by clicking button_element.\n *      Converts initial_options to object array used by PopupMenu.\n *  @param {jQuery|DOMElement} button_element element which, when clicked, activates menu\n *  @param {Object} initial_options map of key -> values, where\n *      key is option text, value is fn to call when option is clicked\n *  @returns {PopupMenu} the PopupMenu created\n */\nPopupMenu.make_popupmenu = (button_element, initial_options) => {\n    var convertedOptions = [];\n    _.each(initial_options, (optionVal, optionKey) => {\n        var newOption = { html: optionKey };\n\n        // keys with null values indicate: header\n        if (optionVal === null) {\n            // !optionVal? (null only?)\n            newOption.header = true;\n\n            // keys with function values indicate: a menu option\n        } else if (jQuery.type(optionVal) === \"function\") {\n            newOption.func = optionVal;\n        }\n        //TODO:?? any other special optionVals?\n        // there was no divider option originally\n        convertedOptions.push(newOption);\n    });\n    return new PopupMenu($(button_element), convertedOptions);\n};\n\n/** Find all anchors in $parent (using selector) and covert anchors into a PopupMenu options map.\n *  @param {jQuery} $parent the element that contains the links to convert to options\n *  @param {String} selector jq selector string to find links\n *  @returns {Object[]} the options array to initialize a PopupMenu\n */\n//TODO: lose parent and selector, pass in array of links, use map to return options\nPopupMenu.convertLinksToOptions = ($parent, selector) => {\n    $parent = $($parent);\n    selector = selector || \"a\";\n    var options = [];\n    $parent.find(selector).each((elem, i) => {\n        var option = {};\n        var $link = $(elem);\n\n        // convert link text to the option text (html) and the href into the option func\n        option.html = $link.text();\n        if ($link.attr(\"href\")) {\n            var linkHref = $link.attr(\"href\");\n            var linkTarget = $link.attr(\"target\");\n            var confirmText = $link.attr(\"confirm\");\n\n            option.func = () => {\n                // if there's a \"confirm\" attribute, throw up a confirmation dialog, and\n                //  if the user cancels - do nothing\n                if (confirmText && !confirm(confirmText)) {\n                    return;\n                }\n\n                // if there's no confirm attribute, or the user accepted the confirm dialog:\n                switch (linkTarget) {\n                    // relocate the center panel\n                    case \"_parent\":\n                        window.parent.location = linkHref;\n                        break;\n\n                    // relocate the entire window\n                    case \"_top\":\n                        window.top.location = linkHref;\n                        break;\n\n                    // relocate this panel\n                    default:\n                        window.location = linkHref;\n                }\n            };\n        }\n        options.push(option);\n    });\n    return options;\n};\n\n/** Create a single popupmenu from existing DOM button and anchor elements\n *  @param {jQuery} $buttonElement the element that when clicked will open the menu\n *  @param {jQuery} $menuElement the element that contains the anchors to convert into a menu\n *  @param {String} menuElementLinkSelector jq selector string used to find anchors to be made into menu options\n *  @returns {PopupMenu} the PopupMenu (Backbone View) that can render, control the menu\n */\nPopupMenu.fromExistingDom = ($buttonElement, $menuElement, menuElementLinkSelector) => {\n    $buttonElement = $($buttonElement);\n    $menuElement = $($menuElement);\n    var options = PopupMenu.convertLinksToOptions($menuElement, menuElementLinkSelector);\n    // we're done with the menu (having converted it to an options map)\n    $menuElement.remove();\n    return new PopupMenu($buttonElement, options);\n};\n\n/** Create all popupmenus within a document or a more specific element\n *  @param {DOMElement} parent the DOM element in which to search for popupmenus to build (defaults to document)\n *  @param {String} menuSelector jq selector string to find popupmenu menu elements (defaults to \"div[popupmenu]\")\n *  @param {Function} buttonSelectorBuildFn the function to build the jq button selector.\n *      Will be passed $menuElement, parent.\n *      (Defaults to return '#' + $menuElement.attr( 'popupmenu' ); )\n *  @returns {PopupMenu[]} array of popupmenus created\n */\nPopupMenu.make_popup_menus = (parent, menuSelector, buttonSelectorBuildFn) => {\n    parent = parent || document;\n    // orig. Glx popupmenu menus have a (non-std) attribute 'popupmenu'\n    //  which contains the id of the button that activates the menu\n    menuSelector = menuSelector || \"div[popupmenu]\";\n    // default to (orig. Glx) matching button to menu by using the popupmenu attr of the menu as the id of the button\n    buttonSelectorBuildFn = buttonSelectorBuildFn || (($menuElement, parent) => `#${$menuElement.attr(\"popupmenu\")}`);\n\n    // aggregate and return all PopupMenus\n    var popupMenusCreated = [];\n    $(parent)\n        .find(menuSelector)\n        .each(function() {\n            var $menuElement = $(this);\n\n            var $buttonElement = $(parent).find(buttonSelectorBuildFn($menuElement, parent));\n\n            popupMenusCreated.push(PopupMenu.fromDom($buttonElement, $menuElement));\n            $buttonElement.addClass(\"popup\");\n        });\n    return popupMenusCreated;\n};\n\n// =============================================================================\nexport default PopupMenu;\n"]}