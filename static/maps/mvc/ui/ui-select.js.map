{"version":3,"sources":["mvc/ui/ui-select.js"],"names":["View","Backbone","extend","optionsDefault","css","placeholder","data","value","multiple","minimumInputLength","initialData","initialize","options","merge","setElement","_template","container","console","log","append","$el","select_data","_refresh","_setValue","self","onchange","on","new_value","before","_getValue","undefined","after","text","select2","disabled","enable","disable","add","push","id","del","index","_getIndex","splice","remove","update","key","selected","select_opt","containerCssClass","dropdownAutoWidth","ajax","dropdownCssClass","escapeMarkup","formatResult","formatSelection","initSelection","_","findIndex","length"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-select.js","sourcesContent":["// dependencies\nimport Utils from \"utils/utils\";\n/**\n * A plugin for initializing select2 input items.\n * Make sure the select2 library itself is loaded beforehand.\n * Also the element to which select2 will be appended has to\n * be created before select2 initialization (and passed as option).\n */\nvar View = Backbone.View.extend({\n    // options\n    optionsDefault: {\n        css: \"\",\n        placeholder: \"No data available\",\n        data: [],\n        value: null,\n        multiple: false,\n        minimumInputLength: 0,\n        // example format of initial data: \"id:name,55:anotherrole@role.com,27:role@role.com\"\n        initialData: \"\"\n    },\n\n    // initialize\n    initialize: function(options) {\n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n\n        // create new element\n        this.setElement(this._template(this.options));\n\n        // check if container exists\n        if (!this.options.container) {\n            console.log(\"ui-select::initialize() : container not specified.\");\n            return;\n        }\n\n        // add to dom\n        this.options.container.append(this.$el);\n\n        // link selection dictionary\n        this.select_data = this.options.data;\n\n        // refresh\n        this._refresh();\n\n        if (!this.options.multiple) {\n            // initial value\n            if (this.options.value) {\n                this._setValue(this.options.value);\n            }\n\n            // add change event\n            var self = this;\n            if (this.options.onchange) {\n                this.$el.on(\"change\", () => {\n                    self.options.onchange(self.value());\n                });\n            }\n        }\n    },\n\n    // value\n    value: function(new_value) {\n        // get current id/value\n        var before = this._getValue();\n\n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this._setValue(new_value);\n        }\n\n        // get current id/value\n        var after = this._getValue();\n\n        // fire onchange\n        if (after != before && this.options.onchange) {\n            this.options.onchange(after);\n        }\n\n        // return current value\n        return after;\n    },\n\n    // label\n    text: function() {\n        return this.$el.select2(\"data\").text;\n    },\n\n    // disabled\n    disabled: function() {\n        return !this.$el.select2(\"enable\");\n    },\n\n    // enable\n    enable: function() {\n        this.$el.select2(\"enable\", true);\n    },\n\n    // disable\n    disable: function() {\n        this.$el.select2(\"enable\", false);\n    },\n\n    // add\n    add: function(options) {\n        // add options\n        this.select_data.push({\n            id: options.id,\n            text: options.text\n        });\n\n        // refresh\n        this._refresh();\n    },\n\n    // remove\n    del: function(id) {\n        // search option\n        var index = this._getIndex(id);\n\n        // check if found\n        if (index != -1) {\n            // remove options\n            this.select_data.splice(index, 1);\n\n            // refresh\n            this._refresh();\n        }\n    },\n\n    // remove\n    remove: function() {\n        this.$el.select2(\"destroy\");\n    },\n\n    // update\n    update: function(options) {\n        // copy options\n        this.select_data = [];\n        for (var key in options.data) {\n            this.select_data.push(options.data[key]);\n        }\n\n        // refresh\n        this._refresh();\n    },\n\n    // refresh\n    _refresh: function() {\n        // add select2 data based on type of input\n        if (!this.options.multiple) {\n            var selected = this._getValue();\n            var select_opt = {\n                data: this.select_data,\n                containerCssClass: this.options.css,\n                placeholder: this.options.placeholder,\n                dropdownAutoWidth: true\n            };\n            this.$el.select2(select_opt);\n            // select previous value (if exists)\n            this._setValue(selected);\n        } else {\n            var select_opt = {\n                multiple: this.options.multiple,\n                containerCssClass: this.options.css,\n                placeholder: this.options.placeholder,\n                minimumInputLength: this.options.minimumInputLength,\n                ajax: this.options.ajax,\n                dropdownCssClass: this.options.dropdownCssClass,\n                escapeMarkup: this.options.escapeMarkup,\n                formatResult: this.options.formatResult,\n                formatSelection: this.options.formatSelection,\n                initSelection: this.options.initSelection,\n                initialData: this.options.initialData\n            };\n            this.$el.select2(select_opt);\n        }\n    },\n\n    // get index\n    _getIndex: function(value) {\n        // returns the index of the searched value\n        _.findIndex(this.select_data, { id: value });\n    },\n\n    // get value\n    _getValue: function() {\n        return this.$el.select2(\"val\");\n    },\n\n    // set value\n    _setValue: function(new_value) {\n        var index = this._getIndex(new_value);\n        if (index == -1) {\n            if (this.select_data.length > 0) {\n                new_value = this.select_data[0].id;\n            }\n        }\n        this.$el.select2(\"val\", new_value);\n    },\n\n    // element\n    _template: function(options) {\n        return `<input type=\"hidden\" value=\"${this.options.initialData}\"/>`;\n    }\n});\n\nexport default {\n    View: View\n};\n"]}