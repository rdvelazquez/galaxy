{"version":3,"sources":["mvc/tool/tool-form-composite.js"],"names":["View","Backbone","extend","initialize","options","self","modal","parent","Galaxy","model","Model","deferred","setElement","$","addClass","append","$message","$header","$steps","$el","_configure","render","window","resize","_refresh","step_index","margin","_","reduce","children","memo","child","outerHeight","height","css","forms","steps","links","parms","each","get","step","i","emit","debug","icon","step_type","title","parseInt","step_label","step_name","annotation","step_version","merge","index","fixed_title","escape","help","citations","collapsible","collapsed","_isDataStep","sustain_version","sustain_repeats","sustain_conditionals","narrow","text_enable","text_disable","cls_enable","cls_disable","errors","messages","initial_errors","cls","hide_operations","needs_refresh","always_refresh","visitInputs","inputs","input","name","output_connections","sub_step","j","output_connection","input_step_index","push","connections_by_name","connection","input_name","type","step_linked","output_name","wp_count","wp_inputs","_handleWorkflowParameter","value","callback","re","match","exec","String","wp_name","label","color","style","wp_input","wp_linked","backdrop","post_job_actions","pja","action_arguments","arg","data_resolved","context","is_runtime_value","__class__","is_data_input","indexOf","data_ref","length","is_workflow","default_value","flavor","optional","isEmpty","collapsible_value","collapsible_preview","reset","_renderHeader","_renderMessage","_renderParameters","_renderHistory","_renderUseCachedJob","_renderStep","execute_btn","Button","onclick","_execute","empty","Label","Message","message","status","persistent","fade","step_version_changes","wp_form","onchange","input_list","input_def","_refreshStep","_append","history_form","test_param","cases","extra_user_preferences","user","attributes","preferences","JSON","parse","display_use_cached_job_checkbox","job_options_form","form","execute","postchange","process","current_state","tool_id","id","tool_version","version","data","create","wait","request","url","root","success","update","resolve","error","response","reject","portlet","html","short_str","is_simple_input","hide_label","link","ignore","show_progress","set","wait_text","percentage","setTimeout","promise","field","field_list","new_value","undefined","values","source_step","v","multiple","wp_field","wp_value","split","join","trigger","_refreshHistory","history","currHistoryPanel","_refresh_history","clearTimeout","refresh","numOfUnfinishedShownContents","UPDATE_DELAY","_enabled","_submit","history_form_data","job_def","new_history_name","history_id","replacement_params","parameters","parameters_normalized","batch","validated","job_inputs","job_input_id","input_value","input_id","input_field","highlight","hide","_templateSuccess","isArray","WebhookApp","WebhookView","toolId","toolVersion","input_found","err_data","step_related_errors","error_messages","matchResponse","show","body","_templateError","err_msg","buttons","Close","complete","$container","enabled","lst","startsWith","sanitize","text","stringify"],"mappings":"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","file":"../../../scripts/mvc/tool/tool-form-composite.js","sourcesContent":["import _l from \"utils/localization\";\n/** This is the run workflow tool form view. */\nimport Utils from \"utils/utils\";\nimport Deferred from \"utils/deferred\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport FormData from \"mvc/form/form-data\";\nimport ToolFormBase from \"mvc/tool/tool-form-base\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport Webhooks from \"mvc/webhooks\";\nimport WorkflowIcons from \"mvc/workflow/workflow-icons\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.modal = parent.Galaxy.modal || new Modal.View();\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.deferred = new Deferred();\n        this.setElement(\n            $(\"<div/>\")\n                .addClass(\"ui-form-composite\")\n                .append((this.$message = $(\"<div/>\")))\n                .append((this.$header = $(\"<div/>\")))\n                .append((this.$steps = $(\"<div/>\")))\n        );\n        $(\"body\").append(this.$el);\n        this._configure();\n        this.render();\n        $(window).resize(() => {\n            self._refresh();\n        });\n    },\n\n    /** Refresh height of scrollable div below header, handle scrolling by lazy loading steps */\n    _refresh: function(step_index) {\n        var margin =\n            _.reduce(this.$el.children(), (memo, child) => memo + $(child).outerHeight(), 0) -\n            this.$steps.height() +\n            90;\n        this.$steps.css(\"height\", $(window).height() - margin);\n    },\n\n    /** Configures form/step options for each workflow step */\n    _configure: function() {\n        var self = this;\n        this.forms = [];\n        this.steps = [];\n        this.links = [];\n        this.parms = [];\n        _.each(this.model.get(\"steps\"), (step, i) => {\n            Galaxy.emit.debug(\"tool-form-composite::initialize()\", `${i} : Preparing workflow step.`);\n            var icon = WorkflowIcons[step.step_type];\n            var title = `${parseInt(i + 1)}: ${step.step_label || step.step_name}`;\n            if (step.annotation) {\n                title += ` - ${step.annotation}`;\n            }\n            if (step.step_version) {\n                title += ` (Galaxy Version ${step.step_version})`;\n            }\n            step = Utils.merge(\n                {\n                    index: i,\n                    fixed_title: _.escape(title),\n                    icon: icon || \"\",\n                    help: null,\n                    citations: null,\n                    collapsible: true,\n                    collapsed: i > 0 && !self._isDataStep(step),\n                    sustain_version: true,\n                    sustain_repeats: true,\n                    sustain_conditionals: true,\n                    narrow: true,\n                    text_enable: \"Edit\",\n                    text_disable: \"Undo\",\n                    cls_enable: \"fa fa-edit\",\n                    cls_disable: \"fa fa-undo\",\n                    errors: step.messages,\n                    initial_errors: true,\n                    cls: \"ui-portlet-narrow\",\n                    hide_operations: true,\n                    needs_refresh: false,\n                    always_refresh: step.step_type != \"tool\"\n                },\n                step\n            );\n            self.steps[i] = step;\n            self.links[i] = [];\n            self.parms[i] = {};\n        });\n\n        // build linear index of step input pairs\n        _.each(this.steps, (step, i) => {\n            FormData.visitInputs(step.inputs, (input, name) => {\n                self.parms[i][name] = input;\n            });\n        });\n\n        // iterate through data input modules and collect linked sub steps\n        _.each(this.steps, (step, i) => {\n            _.each(step.output_connections, output_connection => {\n                _.each(self.steps, (sub_step, j) => {\n                    sub_step.step_index === output_connection.input_step_index && self.links[i].push(sub_step);\n                });\n            });\n        });\n\n        // convert all connected data inputs to hidden fields with proper labels,\n        // and track the linked source step\n        _.each(this.steps, (step, i) => {\n            _.each(self.steps, (sub_step, j) => {\n                var connections_by_name = {};\n                _.each(step.output_connections, connection => {\n                    sub_step.step_index === connection.input_step_index &&\n                        (connections_by_name[connection.input_name] = connection);\n                });\n                _.each(self.parms[j], (input, name) => {\n                    var connection = connections_by_name[name];\n                    if (connection) {\n                        input.type = \"hidden\";\n                        input.help = input.step_linked ? `${input.help}, ` : \"\";\n                        input.help += `Output dataset '${connection.output_name}' from step ${parseInt(i) + 1}`;\n                        input.step_linked = input.step_linked || [];\n                        input.step_linked.push({ index: step.index, step_type: step.step_type });\n                    }\n                });\n            });\n        });\n\n        // identify and configure workflow parameters\n        var wp_count = 0;\n        this.wp_inputs = {};\n        function _handleWorkflowParameter(value, callback) {\n            var re = /\\$\\{(.+?)\\}/g;\n            var match;\n            while ((match = re.exec(String(value)))) {\n                var wp_name = match[1];\n                callback(\n                    (self.wp_inputs[wp_name] = self.wp_inputs[wp_name] || {\n                        label: wp_name,\n                        name: wp_name,\n                        type: \"text\",\n                        color: `hsl( ${++wp_count * 100}, 70%, 30% )`,\n                        style: \"ui-form-wp-source\",\n                        links: []\n                    })\n                );\n            }\n        }\n        _.each(this.steps, (step, i) => {\n            _.each(self.parms[i], (input, name) => {\n                _handleWorkflowParameter(input.value, wp_input => {\n                    wp_input.links.push(step);\n                    input.wp_linked = true;\n                    input.type = \"text\";\n                    input.backdrop = true;\n                    input.style = \"ui-form-wp-target\";\n                });\n            });\n            _.each(step.post_job_actions, pja => {\n                _.each(pja.action_arguments, arg => {\n                    _handleWorkflowParameter(arg, () => {});\n                });\n            });\n        });\n\n        // select fields are shown for dynamic fields if all putative data inputs are available,\n        // or if an explicit reference is specified as data_ref and available\n        _.each(this.steps, (step, i) => {\n            if (step.step_type == \"tool\") {\n                var data_resolved = true;\n                FormData.visitInputs(step.inputs, (input, name, context) => {\n                    var is_runtime_value = input.value && input.value.__class__ == \"RuntimeValue\";\n                    var is_data_input = [\"data\", \"data_collection\"].indexOf(input.type) != -1;\n                    var data_ref = context[input.data_ref];\n                    input.step_linked && !self._isDataStep(input.step_linked) && (data_resolved = false);\n                    input.options &&\n                        ((input.options.length == 0 && !data_resolved) || input.wp_linked) &&\n                        (input.is_workflow = true);\n                    data_ref &&\n                        (input.is_workflow =\n                            (data_ref.step_linked && !self._isDataStep(data_ref.step_linked)) || input.wp_linked);\n                    (is_data_input || (input.value && input.value.__class__ == \"RuntimeValue\" && !input.step_linked)) &&\n                        (step.collapsed = false);\n                    is_runtime_value && (input.value = input.default_value);\n                    input.flavor = \"workflow\";\n                    if (!is_runtime_value && !is_data_input && input.type !== \"hidden\" && !input.wp_linked) {\n                        if (input.optional || (!Utils.isEmpty(input.value) && input.value !== \"\")) {\n                            input.collapsible_value = input.value;\n                            input.collapsible_preview = true;\n                        }\n                    }\n                });\n            }\n        });\n    },\n\n    render: function() {\n        var self = this;\n        this.deferred.reset();\n        this._renderHeader();\n        this._renderMessage();\n        this._renderParameters();\n        this._renderHistory();\n        this._renderUseCachedJob();\n        _.each(this.steps, step => {\n            self._renderStep(step);\n        });\n    },\n\n    /** Render header */\n    _renderHeader: function() {\n        var self = this;\n        this.execute_btn = new Ui.Button({\n            icon: \"fa-check\",\n            title: _l(\"Run workflow\"),\n            cls: \"btn btn-primary\",\n            onclick: function() {\n                self._execute();\n            }\n        });\n        this.$header\n            .addClass(\"ui-form-header\")\n            .empty()\n            .append(\n                new Ui.Label({\n                    title: `Workflow: ${this.model.get(\"name\")}`\n                }).$el\n            )\n            .append(this.execute_btn.$el);\n    },\n\n    /** Render message */\n    _renderMessage: function() {\n        this.$message.empty();\n        if (this.model.get(\"has_upgrade_messages\")) {\n            this.$message.append(\n                new Ui.Message({\n                    message:\n                        \"Some tools in this workflow may have changed since it was last saved or some errors were found. The workflow may still run, but any new options will have default values. Please review the messages below to make a decision about whether the changes will affect your analysis.\",\n                    status: \"warning\",\n                    persistent: true,\n                    fade: false\n                }).$el\n            );\n        }\n        var step_version_changes = this.model.get(\"step_version_changes\");\n        if (step_version_changes && step_version_changes.length > 0) {\n            this.$message.append(\n                new Ui.Message({\n                    message:\n                        \"Some tools are being executed with different versions compared to those available when this workflow was last saved because the other versions are not or no longer available on this Galaxy instance. To upgrade your workflow and dismiss this message simply edit the workflow and re-save it.\",\n                    status: \"warning\",\n                    persistent: true,\n                    fade: false\n                }).$el\n            );\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderParameters: function() {\n        var self = this;\n        this.wp_form = null;\n        if (!_.isEmpty(this.wp_inputs)) {\n            this.wp_form = new Form({\n                title: \"<b>Workflow Parameters</b>\",\n                inputs: this.wp_inputs,\n                cls: \"ui-portlet-narrow\",\n                onchange: function() {\n                    _.each(self.wp_form.input_list, (input_def, i) => {\n                        _.each(input_def.links, step => {\n                            self._refreshStep(step);\n                        });\n                    });\n                }\n            });\n            this._append(this.$steps.empty(), this.wp_form.$el);\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderHistory: function() {\n        this.history_form = new Form({\n            cls: \"ui-portlet-narrow\",\n            title: \"<b>History Options</b>\",\n            inputs: [\n                {\n                    type: \"conditional\",\n                    name: \"new_history\",\n                    test_param: {\n                        name: \"check\",\n                        label: \"Send results to a new history\",\n                        type: \"boolean\",\n                        value: \"false\",\n                        help: \"\"\n                    },\n                    cases: [\n                        {\n                            value: \"true\",\n                            inputs: [\n                                {\n                                    name: \"name\",\n                                    label: \"History name\",\n                                    type: \"text\",\n                                    value: this.model.get(\"name\")\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        });\n        this._append(this.$steps, this.history_form.$el);\n    },\n\n    /** Render job caching option */\n    _renderUseCachedJob: function() {\n        var extra_user_preferences = {};\n        if (Galaxy.user.attributes.preferences && \"extra_user_preferences\" in Galaxy.user.attributes.preferences) {\n            extra_user_preferences = JSON.parse(Galaxy.user.attributes.preferences.extra_user_preferences);\n        }\n        var display_use_cached_job_checkbox =\n            \"use_cached_job|use_cached_job_checkbox\" in extra_user_preferences\n                ? extra_user_preferences[\"use_cached_job|use_cached_job_checkbox\"]\n                : false;\n        this.display_use_cached_job_checkbox = display_use_cached_job_checkbox === \"true\";\n        if (this.display_use_cached_job_checkbox) {\n            this.job_options_form = new Form({\n                cls: \"ui-portlet-narrow\",\n                title: \"<b>Job re-use Options</b>\",\n                inputs: [\n                    {\n                        type: \"conditional\",\n                        name: \"use_cached_job\",\n                        test_param: {\n                            name: \"check\",\n                            label: \"BETA: Attempt to reuse jobs with identical parameters?\",\n                            type: \"boolean\",\n                            value: \"false\",\n                            help: \"This may skip executing jobs that you have already run.\"\n                        }\n                    }\n                ]\n            });\n            this._append(this.$steps, this.job_options_form.$el);\n        }\n    },\n\n    /** Render step */\n    _renderStep: function(step) {\n        var self = this;\n        var form = null;\n        this.deferred.execute(promise => {\n            self.$steps.addClass(\"ui-steps\");\n            if (step.step_type == \"tool\") {\n                step.postchange = function(process, form) {\n                    var self = this;\n                    var current_state = {\n                        tool_id: step.id,\n                        tool_version: step.version,\n                        inputs: $.extend(true, {}, form.data.create())\n                    };\n                    form.wait(true);\n                    Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Sending current state.\", current_state);\n                    Utils.request({\n                        type: \"POST\",\n                        url: `${Galaxy.root}api/tools/${step.id}/build`,\n                        data: current_state,\n                        success: function(data) {\n                            form.update(data);\n                            form.wait(false);\n                            Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Received new model.\", data);\n                            process.resolve();\n                        },\n                        error: function(response) {\n                            Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Refresh request failed.\", response);\n                            process.reject();\n                        }\n                    });\n                };\n                form = new ToolFormBase(step);\n                if (step.post_job_actions && step.post_job_actions.length) {\n                    form.portlet.append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-form-element-disabled\")\n                            .append(\n                                $(\"<div/>\")\n                                    .addClass(\"ui-form-title\")\n                                    .html(\"<b>Job Post Actions</b>\")\n                            )\n                            .append(\n                                $(\"<div/>\")\n                                    .addClass(\"ui-form-preview\")\n                                    .html(\n                                        _.reduce(\n                                            step.post_job_actions,\n                                            (memo, value) => `${memo} ${value.short_str}`,\n                                            \"\"\n                                        )\n                                    )\n                            )\n                    );\n                }\n            } else {\n                var is_simple_input = [\"data_input\", \"data_collection_input\"].indexOf(step.step_type) != -1;\n                _.each(step.inputs, input => {\n                    input.flavor = \"module\";\n                    input.hide_label = is_simple_input;\n                });\n                form = new Form(\n                    Utils.merge(\n                        {\n                            title: step.fixed_title,\n                            onchange: function() {\n                                _.each(self.links[step.index], link => {\n                                    self._refreshStep(link);\n                                });\n                            },\n                            inputs:\n                                step.inputs && step.inputs.length > 0\n                                    ? step.inputs\n                                    : [\n                                          {\n                                              type: \"hidden\",\n                                              name: \"No options available.\",\n                                              ignore: null\n                                          }\n                                      ]\n                        },\n                        step\n                    )\n                );\n            }\n            self.forms[step.index] = form;\n            self._append(self.$steps, form.$el);\n            self._refresh();\n            step.needs_refresh && self._refreshStep(step);\n            form.portlet[!self.show_progress ? \"enable\" : \"disable\"]();\n            self.show_progress &&\n                self.execute_btn.model.set({\n                    wait: true,\n                    wait_text: \"Preparing...\",\n                    percentage: (step.index + 1) * 100.0 / self.steps.length\n                });\n            Galaxy.emit.debug(\"tool-form-composite::initialize()\", `${step.index} : Workflow step state ready.`, step);\n            setTimeout(() => {\n                promise.resolve();\n            }, 0);\n        });\n    },\n\n    /** Refreshes step values from source step values */\n    _refreshStep: function(step) {\n        var self = this;\n        var form = this.forms[step.index];\n        if (form) {\n            _.each(self.parms[step.index], (input, name) => {\n                if (input.step_linked || input.wp_linked) {\n                    var field = form.field_list[form.data.match(name)];\n                    if (field) {\n                        var new_value = undefined;\n                        if (input.step_linked) {\n                            new_value = { values: [] };\n                            _.each(input.step_linked, source_step => {\n                                if (self._isDataStep(source_step)) {\n                                    var value = self.forms[source_step.index].data.create().input;\n                                    value &&\n                                        _.each(value.values, v => {\n                                            new_value.values.push(v);\n                                        });\n                                }\n                            });\n                            if (!input.multiple && new_value.values.length > 0) {\n                                new_value = {\n                                    values: [new_value.values[0]]\n                                };\n                            }\n                        } else if (input.wp_linked) {\n                            new_value = input.value;\n                            var re = /\\$\\{(.+?)\\}/g;\n                            var match;\n                            while ((match = re.exec(input.value))) {\n                                var wp_field = self.wp_form.field_list[self.wp_form.data.match(match[1])];\n                                var wp_value = wp_field && wp_field.value();\n                                if (wp_value) {\n                                    new_value = new_value.split(match[0]).join(wp_value);\n                                }\n                            }\n                        }\n                        if (new_value !== undefined) {\n                            field.value(new_value);\n                        }\n                    }\n                }\n            });\n            form.trigger(\"change\");\n        } else {\n            step.needs_refresh = true;\n        }\n    },\n\n    /** Refresh the history after job submission while form is shown */\n    _refreshHistory: function() {\n        var self = this;\n        var history = parent.Galaxy && parent.Galaxy.currHistoryPanel && parent.Galaxy.currHistoryPanel.model;\n        this._refresh_history && clearTimeout(this._refresh_history);\n        if (history) {\n            history.refresh().success(() => {\n                if (history.numOfUnfinishedShownContents() === 0) {\n                    self._refresh_history = setTimeout(() => {\n                        self._refreshHistory();\n                    }, history.UPDATE_DELAY);\n                }\n            });\n        }\n    },\n\n    /** Build remaining steps */\n    _execute: function() {\n        var self = this;\n        this.show_progress = true;\n        this._enabled(false);\n        this.deferred.execute(promise => {\n            setTimeout(() => {\n                promise.resolve();\n                self._submit();\n            }, 0);\n        });\n    },\n\n    /** Validate and submit workflow */\n    _submit: function() {\n        var self = this;\n        var history_form_data = this.history_form.data.create();\n        var job_def = {\n            new_history_name: history_form_data[\"new_history|name\"] ? history_form_data[\"new_history|name\"] : null,\n            history_id: !history_form_data[\"new_history|name\"] ? this.model.get(\"history_id\") : null,\n            replacement_params: this.wp_form ? this.wp_form.data.create() : {},\n            parameters: {},\n            // Tool form will submit flat maps for each parameter\n            // (e.g. \"repeat_0|cond|param\": \"foo\" instead of nested\n            // data structures).\n            parameters_normalized: true,\n            // Tool form always wants a list of invocations back\n            // so that inputs can be batched.\n            batch: true\n        };\n        if (this.display_use_cached_job_checkbox) {\n            job_def[\"use_cached_job\"] = this.job_options_form.data.create()[\"use_cached_job|check\"] === \"true\";\n        }\n        var validated = true;\n        for (var i in this.forms) {\n            var form = this.forms[i];\n            var job_inputs = form.data.create();\n            var step = self.steps[i];\n            var step_index = step.step_index;\n            form.trigger(\"reset\");\n            for (var job_input_id in job_inputs) {\n                var input_value = job_inputs[job_input_id];\n                var input_id = form.data.match(job_input_id);\n                var input_field = form.field_list[input_id];\n                var input_def = form.input_list[input_id];\n                if (!input_def.step_linked) {\n                    if (this._isDataStep(step)) {\n                        validated = input_value && input_value.values && input_value.values.length > 0;\n                    } else {\n                        validated =\n                            input_def.optional ||\n                            (input_def.is_workflow && input_value !== \"\") ||\n                            (!input_def.is_workflow && input_value !== null);\n                    }\n                    if (!validated) {\n                        form.highlight(input_id);\n                        break;\n                    }\n                    job_def.parameters[step_index] = job_def.parameters[step_index] || {};\n                    job_def.parameters[step_index][job_input_id] = job_inputs[job_input_id];\n                }\n            }\n            if (!validated) {\n                break;\n            }\n        }\n        if (!validated) {\n            self._enabled(true);\n            Galaxy.emit.debug(\"tool-form-composite::submit()\", \"Validation failed.\", job_def);\n        } else {\n            Galaxy.emit.debug(\"tool-form-composite::submit()\", \"Validation complete.\", job_def);\n            Utils.request({\n                type: \"POST\",\n                url: `${Galaxy.root}api/workflows/${this.model.id}/invocations`,\n                data: job_def,\n                success: function(response) {\n                    Galaxy.emit.debug(\"tool-form-composite::submit\", \"Submission successful.\", response);\n                    self.$el.children().hide();\n                    self.$el.append(self._templateSuccess(response));\n\n                    // Show Webhook if job is running\n                    if ($.isArray(response) && response.length > 0) {\n                        self.$el.append($(\"<div/>\", { id: \"webhook-view\" }));\n                        var WebhookApp = new Webhooks.WebhookView({\n                            type: \"workflow\",\n                            toolId: job_def.tool_id,\n                            toolVersion: job_def.tool_version\n                        });\n                    }\n\n                    self._refreshHistory();\n                },\n                error: function(response) {\n                    Galaxy.emit.debug(\"tool-form-composite::submit\", \"Submission failed.\", response);\n                    var input_found = false;\n                    if (response && response.err_data) {\n                        for (var i in self.forms) {\n                            var form = self.forms[i];\n                            var step_related_errors = response.err_data[form.model.get(\"step_index\")];\n                            if (step_related_errors) {\n                                var error_messages = form.data.matchResponse(step_related_errors);\n                                for (var input_id in error_messages) {\n                                    form.highlight(input_id, error_messages[input_id]);\n                                    input_found = true;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (!input_found) {\n                        self.modal.show({\n                            title: _l(\"Workflow submission failed\"),\n                            body: self._templateError(job_def, response && response.err_msg),\n                            buttons: {\n                                Close: function() {\n                                    self.modal.hide();\n                                }\n                            }\n                        });\n                    }\n                },\n                complete: function() {\n                    self._enabled(true);\n                }\n            });\n        }\n    },\n\n    /** Append new dom to body */\n    _append: function($container, $el) {\n        $container.append(\"<p/>\").append($el);\n    },\n\n    /** Set enabled/disabled state */\n    _enabled: function(enabled) {\n        this.execute_btn.model.set({\n            wait: !enabled,\n            wait_text: \"Sending...\",\n            percentage: -1\n        });\n        this.wp_form && this.wp_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        this.history_form && this.history_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        _.each(this.forms, form => {\n            form && form.portlet[enabled ? \"enable\" : \"disable\"]();\n        });\n    },\n\n    /** Is data input module/step */\n    _isDataStep: function(steps) {\n        var lst = $.isArray(steps) ? steps : [steps];\n        for (var i = 0; i < lst.length; i++) {\n            var step = lst[i];\n            if (!step || !step.step_type || !step.step_type.startsWith(\"data\")) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    /** Templates */\n    _templateSuccess: function(response) {\n        if ($.isArray(response) && response.length > 0) {\n            return $(\"<div/>\")\n                .addClass(\"donemessagelarge\")\n                .append(\n                    $(\"<p/>\").html(\n                        `Successfully invoked workflow <b>${Utils.sanitize(this.model.get(\"name\"))}</b>${\n                            response.length > 1 ? ` <b>${response.length} times</b>` : \"\"\n                        }.`\n                    )\n                )\n                .append(\n                    $(\"<p/>\")\n                        .append(\"<b/>\")\n                        .text(\n                            \"You can check the status of queued jobs and view the resulting data by refreshing the History pane. When the job has been run the status will change from 'running' to 'finished' if completed successfully or 'error' if problems were encountered.\"\n                        )\n                );\n        } else {\n            return this._templateError(response, \"Invalid success response. No invocations found.\");\n        }\n    },\n\n    _templateError: function(response, err_msg) {\n        return $(\"<div/>\")\n            .addClass(\"errormessagelarge\")\n            .append(\n                $(\"<p/>\").text(\n                    `The server could not complete the request. Please contact the Galaxy Team if this error persists. ${JSON.stringify(\n                        err_msg\n                    ) || \"\"}`\n                )\n            )\n            .append($(\"<pre/>\").text(JSON.stringify(response, null, 4)));\n    }\n});\nexport default {\n    View: View\n};\n"]}