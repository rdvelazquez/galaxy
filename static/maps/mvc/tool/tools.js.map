{"version":3,"sources":["mvc/tool/tools.js"],"names":["_","VisibilityMixin","hidden","show","set","hide","toggle","get","is_visible","attributes","ToolParameter","Backbone","Model","extend","defaults","name","label","type","value","html","num_samples","initialize","options","unescape","copy","toJSON","set_value","ToolParameterCollection","Collection","model","DataToolParameter","IntegerToolParameter","parseInt","get_samples","d3","scale","linear","domain","ticks","FloatToolParameter","parseFloat","SelectToolParameter","map","option","subModelTypes","integer","float","data","select","Tool","id","description","target","inputs","outputs","urlRoot","Galaxy","root","p_class","p","rval","prototype","call","i","remove_inputs","types","tool","incompatible_inputs","filter","indexOf","input","remove","only_samplable_inputs","valid_inputs","each","push","apply_search_results","results","set_input_value","find","set_input_values","inputs_dict","self","keys","input_name","run","_run","rerun","target_dataset","regions","action","target_dataset_id","get_inputs_dict","input_dict","additional_params","payload","tool_id","run_deferred","$","Deferred","ss_deferred","ServerStateDeferred","ajax_settings","url","JSON","stringify","dataType","contentType","interval","success_fn","response","when","go","then","resolve","DatasetCollection","result","ToolView","View","ToolCollection","ToolSectionLabel","ToolSection","elems","open","clear_search_results","elt","all_hidden","cur_label","ToolSearch","search_hint_string","min_chars_for_search","clear_btn_url","visible","query","clear_key","on","do_search","length","q","timer","clearTimeout","setTimeout","ga","clear_search","ToolPanel","tool_search","tools","layout","parse","parse_elt","elt_dict","model_class","panel_elt","BaseView","update_visible","$el","ToolLinkView","tagName","render","$link","append","templates","tool_link","formStyle","e","preventDefault","upload","router","version","ToolSectionLabelView","className","text","ToolSectionView","update_open","panel_section","section_body","tool_view","label_view","events","children","slideDown","slideUp","ToolSearchView","click","is","css","tooltip","focus_and_select","focus","clear","val","query_changed","evData","which","ToolPanelView","handle_search_results","search_view","section_title_view","attr","split","trigger","ToolFormView","tool_form","IntegratedToolMenuAndView","tool_panel_view","collection","tool_form_view","show_tool","fetch","done","width","template","join","variable"],"mappings":"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","file":"../../../scripts/mvc/tool/tools.js","sourcesContent":["/**\n * Model, view, and controller objects for Galaxy tools and tool panel.\n */\n\nimport * as _ from \"libs/underscore\";\nimport util from \"viz/trackster/util\";\nimport data from \"mvc/dataset/data\";\nimport ToolForm from \"mvc/tool/tool-form\";\n\n/**\n * Mixin for tracking model visibility.\n */\nvar VisibilityMixin = {\n    hidden: false,\n\n    show: function() {\n        this.set(\"hidden\", false);\n    },\n\n    hide: function() {\n        this.set(\"hidden\", true);\n    },\n\n    toggle: function() {\n        this.set(\"hidden\", !this.get(\"hidden\"));\n    },\n\n    is_visible: function() {\n        return !this.attributes.hidden;\n    }\n};\n\n/**\n * A tool parameter.\n */\nvar ToolParameter = Backbone.Model.extend({\n    defaults: {\n        name: null,\n        label: null,\n        type: null,\n        value: null,\n        html: null,\n        num_samples: 5\n    },\n\n    initialize: function(options) {\n        this.attributes.html = unescape(this.attributes.html);\n    },\n\n    copy: function() {\n        return new ToolParameter(this.toJSON());\n    },\n\n    set_value: function(value) {\n        this.set(\"value\", value || \"\");\n    }\n});\n\nvar ToolParameterCollection = Backbone.Collection.extend({\n    model: ToolParameter\n});\n\n/**\n * A data tool parameter.\n */\nvar DataToolParameter = ToolParameter.extend({});\n\n/**\n * An integer tool parameter.\n */\nvar IntegerToolParameter = ToolParameter.extend({\n    set_value: function(value) {\n        this.set(\"value\", parseInt(value, 10));\n    },\n\n    /**\n     * Returns samples from a tool input.\n     */\n    get_samples: function() {\n        return d3.scale\n            .linear()\n            .domain([this.get(\"min\"), this.get(\"max\")])\n            .ticks(this.get(\"num_samples\"));\n    }\n});\n\nvar FloatToolParameter = IntegerToolParameter.extend({\n    set_value: function(value) {\n        this.set(\"value\", parseFloat(value));\n    }\n});\n\n/**\n * A select tool parameter.\n */\nvar SelectToolParameter = ToolParameter.extend({\n    /**\n     * Returns tool options.\n     */\n    get_samples: function() {\n        return _.map(this.get(\"options\"), option => option[0]);\n    }\n});\n\n// Set up dictionary of parameter types.\nToolParameter.subModelTypes = {\n    integer: IntegerToolParameter,\n    float: FloatToolParameter,\n    data: DataToolParameter,\n    select: SelectToolParameter\n};\n\n/**\n * A Galaxy tool.\n */\nvar Tool = Backbone.Model.extend({\n    // Default attributes.\n    defaults: {\n        id: null,\n        name: null,\n        description: null,\n        target: null,\n        inputs: [],\n        outputs: []\n    },\n\n    urlRoot: `${Galaxy.root}api/tools`,\n\n    initialize: function(options) {\n        // Set parameters.\n        this.set(\n            \"inputs\",\n            new ToolParameterCollection(\n                _.map(options.inputs, p => {\n                    var p_class = ToolParameter.subModelTypes[p.type] || ToolParameter;\n                    return new p_class(p);\n                })\n            )\n        );\n    },\n\n    /**\n     *\n     */\n    toJSON: function() {\n        var rval = Backbone.Model.prototype.toJSON.call(this);\n\n        // Convert inputs to JSON manually.\n        rval.inputs = this.get(\"inputs\").map(i => i.toJSON());\n        return rval;\n    },\n\n    /**\n     * Removes inputs of a particular type; this is useful because not all inputs can be handled by\n     * client and server yet.\n     */\n    remove_inputs: function(types) {\n        var tool = this;\n\n        var incompatible_inputs = tool.get(\"inputs\").filter(input => types.indexOf(input.get(\"type\")) !== -1);\n\n        tool.get(\"inputs\").remove(incompatible_inputs);\n    },\n\n    /**\n     * Returns object copy, optionally including only inputs that can be sampled.\n     */\n    copy: function(only_samplable_inputs) {\n        var copy = new Tool(this.toJSON());\n\n        // Return only samplable inputs if flag is set.\n        if (only_samplable_inputs) {\n            var valid_inputs = new Backbone.Collection();\n            copy.get(\"inputs\").each(input => {\n                if (input.get_samples()) {\n                    valid_inputs.push(input);\n                }\n            });\n            copy.set(\"inputs\", valid_inputs);\n        }\n\n        return copy;\n    },\n\n    apply_search_results: function(results) {\n        _.indexOf(results, this.attributes.id) !== -1 ? this.show() : this.hide();\n        return this.is_visible();\n    },\n\n    /**\n     * Set a tool input's value.\n     */\n    set_input_value: function(name, value) {\n        this.get(\"inputs\")\n            .find(input => input.get(\"name\") === name)\n            .set(\"value\", value);\n    },\n\n    /**\n     * Set many input values at once.\n     */\n    set_input_values: function(inputs_dict) {\n        var self = this;\n        _.each(_.keys(inputs_dict), input_name => {\n            self.set_input_value(input_name, inputs_dict[input_name]);\n        });\n    },\n\n    /**\n     * Run tool; returns a Deferred that resolves to the tool's output(s).\n     */\n    run: function() {\n        return this._run();\n    },\n\n    /**\n     * Rerun tool using regions and a target dataset.\n     */\n    rerun: function(target_dataset, regions) {\n        return this._run({\n            action: \"rerun\",\n            target_dataset_id: target_dataset.id,\n            regions: regions\n        });\n    },\n\n    /**\n     * Returns input dict for tool's inputs.\n     */\n    get_inputs_dict: function() {\n        var input_dict = {};\n        this.get(\"inputs\").each(input => {\n            input_dict[input.get(\"name\")] = input.get(\"value\");\n        });\n        return input_dict;\n    },\n\n    /**\n     * Run tool; returns a Deferred that resolves to the tool's output(s).\n     * NOTE: this method is a helper method and should not be called directly.\n     */\n    _run: function(additional_params) {\n        // Create payload.\n        var payload = _.extend(\n            {\n                tool_id: this.id,\n                inputs: this.get_inputs_dict()\n            },\n            additional_params\n        );\n\n        // Because job may require indexing datasets, use server-side\n        // deferred to ensure that job is run. Also use deferred that\n        // resolves to outputs from tool.\n        var run_deferred = $.Deferred();\n\n        var ss_deferred = new util.ServerStateDeferred({\n            ajax_settings: {\n                url: this.urlRoot,\n                data: JSON.stringify(payload),\n                dataType: \"json\",\n                contentType: \"application/json\",\n                type: \"POST\"\n            },\n            interval: 2000,\n            success_fn: function(response) {\n                return response !== \"pending\";\n            }\n        });\n\n        // Run job and resolve run_deferred to tool outputs.\n        $.when(ss_deferred.go()).then(result => {\n            run_deferred.resolve(new data.DatasetCollection(result));\n        });\n        return run_deferred;\n    }\n});\n_.extend(Tool.prototype, VisibilityMixin);\n\n/**\n * Tool view.\n */\nvar ToolView = Backbone.View.extend({});\n\n/**\n * Wrap collection of tools for fast access/manipulation.\n */\nvar ToolCollection = Backbone.Collection.extend({\n    model: Tool\n});\n\n/**\n * Label or section header in tool panel.\n */\nvar ToolSectionLabel = Backbone.Model.extend(VisibilityMixin);\n\n/**\n * Section of tool panel with elements (labels and tools).\n */\nvar ToolSection = Backbone.Model.extend({\n    defaults: {\n        elems: [],\n        open: false\n    },\n\n    clear_search_results: function() {\n        _.each(this.attributes.elems, elt => {\n            elt.show();\n        });\n\n        this.show();\n        this.set(\"open\", false);\n    },\n\n    apply_search_results: function(results) {\n        var all_hidden = true;\n        var cur_label;\n        _.each(this.attributes.elems, elt => {\n            if (elt instanceof ToolSectionLabel) {\n                cur_label = elt;\n                cur_label.hide();\n            } else if (elt instanceof Tool) {\n                if (elt.apply_search_results(results)) {\n                    all_hidden = false;\n                    if (cur_label) {\n                        cur_label.show();\n                    }\n                }\n            }\n        });\n\n        if (all_hidden) {\n            this.hide();\n        } else {\n            this.show();\n            this.set(\"open\", true);\n        }\n    }\n});\n_.extend(ToolSection.prototype, VisibilityMixin);\n\n/**\n * Tool search that updates results when query is changed. Result value of null\n * indicates that query was not run; if not null, results are from search using\n * query.\n */\nvar ToolSearch = Backbone.Model.extend({\n    defaults: {\n        search_hint_string: \"search tools\",\n        min_chars_for_search: 3,\n        clear_btn_url: \"\",\n        visible: true,\n        query: \"\",\n        results: null,\n        // ESC (27) will clear the input field and tool search filters\n        clear_key: 27\n    },\n\n    urlRoot: `${Galaxy.root}api/tools`,\n\n    initialize: function() {\n        this.on(\"change:query\", this.do_search);\n    },\n\n    /**\n     * Do the search and update the results.\n     */\n    do_search: function() {\n        var query = this.attributes.query;\n\n        // If query is too short, do not search.\n        if (query.length < this.attributes.min_chars_for_search) {\n            this.set(\"results\", null);\n            return;\n        }\n\n        // Do search via AJAX.\n        var q = query;\n        // Stop previous ajax-request\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        // Start a new ajax-request in X ms\n        $(\"#search-clear-btn\").hide();\n        $(\"#search-spinner\").show();\n        var self = this;\n        this.timer = setTimeout(() => {\n            // log the search to analytics if present\n            if (typeof ga !== \"undefined\") {\n                ga(\"send\", \"pageview\", `${Galaxy.root}?q=${q}`);\n            }\n            $.get(\n                self.urlRoot,\n                { q: q },\n                data => {\n                    self.set(\"results\", data);\n                    $(\"#search-spinner\").hide();\n                    $(\"#search-clear-btn\").show();\n                },\n                \"json\"\n            );\n        }, 400);\n    },\n\n    clear_search: function() {\n        this.set(\"query\", \"\");\n        this.set(\"results\", null);\n    }\n});\n_.extend(ToolSearch.prototype, VisibilityMixin);\n\n/**\n * Tool Panel.\n */\nvar ToolPanel = Backbone.Model.extend({\n    initialize: function(options) {\n        this.attributes.tool_search = options.tool_search;\n        this.attributes.tool_search.on(\"change:results\", this.apply_search_results, this);\n        this.attributes.tools = options.tools;\n        this.attributes.layout = new Backbone.Collection(this.parse(options.layout));\n    },\n\n    /**\n     * Parse tool panel dictionary and return collection of tool panel elements.\n     */\n    parse: function(response) {\n        // Recursive function to parse tool panel elements.\n        var self = this;\n\n        var // Helper to recursively parse tool panel.\n        parse_elt = elt_dict => {\n            var type = elt_dict.model_class;\n            // There are many types of tools; for now, anything that ends in 'Tool'\n            // is treated as a generic tool.\n            if (type.indexOf(\"Tool\") === type.length - 4) {\n                return self.attributes.tools.get(elt_dict.id);\n            } else if (type === \"ToolSection\") {\n                // Parse elements.\n                var elems = _.map(elt_dict.elems, parse_elt);\n                elt_dict.elems = elems;\n                return new ToolSection(elt_dict);\n            } else if (type === \"ToolSectionLabel\") {\n                return new ToolSectionLabel(elt_dict);\n            }\n        };\n\n        return _.map(response, parse_elt);\n    },\n\n    clear_search_results: function() {\n        this.get(\"layout\").each(panel_elt => {\n            if (panel_elt instanceof ToolSection) {\n                panel_elt.clear_search_results();\n            } else {\n                // Label or tool, so just show.\n                panel_elt.show();\n            }\n        });\n    },\n\n    apply_search_results: function() {\n        var results = this.get(\"tool_search\").get(\"results\");\n        if (results === null) {\n            this.clear_search_results();\n            return;\n        }\n\n        var cur_label = null;\n        this.get(\"layout\").each(panel_elt => {\n            if (panel_elt instanceof ToolSectionLabel) {\n                cur_label = panel_elt;\n                cur_label.hide();\n            } else if (panel_elt instanceof Tool) {\n                if (panel_elt.apply_search_results(results)) {\n                    if (cur_label) {\n                        cur_label.show();\n                    }\n                }\n            } else {\n                // Starting new section, so clear current label.\n                cur_label = null;\n                panel_elt.apply_search_results(results);\n            }\n        });\n    }\n});\n\n/**\n * View classes for Galaxy tools and tool panel.\n *\n * Views use the templates defined below for rendering. Views update as needed\n * based on (a) model/collection events and (b) user interactions; in this sense,\n * they are controllers are well and the HTML is the real view in the MVC architecture.\n */\n\n/**\n * Base view that handles visibility based on model's hidden attribute.\n */\nvar BaseView = Backbone.View.extend({\n    initialize: function() {\n        this.model.on(\"change:hidden\", this.update_visible, this);\n        this.update_visible();\n    },\n    update_visible: function() {\n        this.model.attributes.hidden ? this.$el.hide() : this.$el.show();\n    }\n});\n\n/**\n * Link to a tool.\n */\nvar ToolLinkView = BaseView.extend({\n    tagName: \"div\",\n\n    render: function() {\n        // create element\n        var $link = $(\"<div/>\");\n        $link.append(templates.tool_link(this.model.toJSON()));\n\n        var formStyle = this.model.get(\"form_style\", null);\n        // open upload dialog for upload tool\n        if (this.model.id === \"upload1\") {\n            $link.find(\"a\").on(\"click\", e => {\n                e.preventDefault();\n                Galaxy.upload.show();\n            });\n        } else if (formStyle === \"regular\") {\n            // regular tools\n            var self = this;\n            $link.find(\"a\").on(\"click\", e => {\n                e.preventDefault();\n                Galaxy.router.push(\"/\", {\n                    tool_id: self.model.id,\n                    version: self.model.get(\"version\")\n                });\n            });\n        }\n\n        // add element\n        this.$el.append($link);\n        return this;\n    }\n});\n\n/**\n * Panel label/section header.\n */\nvar ToolSectionLabelView = BaseView.extend({\n    tagName: \"div\",\n    className: \"toolPanelLabel\",\n\n    render: function() {\n        this.$el.append($(\"<span/>\").text(this.model.attributes.text));\n        return this;\n    }\n});\n\n/**\n * Panel section.\n */\nvar ToolSectionView = BaseView.extend({\n    tagName: \"div\",\n    className: \"toolSectionWrapper\",\n\n    initialize: function() {\n        BaseView.prototype.initialize.call(this);\n        this.model.on(\"change:open\", this.update_open, this);\n    },\n\n    render: function() {\n        // Build using template.\n        this.$el.append(templates.panel_section(this.model.toJSON()));\n\n        // Add tools to section.\n        var section_body = this.$el.find(\".toolSectionBody\");\n        _.each(this.model.attributes.elems, elt => {\n            if (elt instanceof Tool) {\n                var tool_view = new ToolLinkView({\n                    model: elt,\n                    className: \"toolTitle\"\n                });\n                tool_view.render();\n                section_body.append(tool_view.$el);\n            } else if (elt instanceof ToolSectionLabel) {\n                var label_view = new ToolSectionLabelView({\n                    model: elt\n                });\n                label_view.render();\n                section_body.append(label_view.$el);\n            } else {\n                // TODO: handle nested section bodies?\n            }\n        });\n        return this;\n    },\n\n    events: {\n        \"click .toolSectionTitle > a\": \"toggle\"\n    },\n\n    /**\n     * Toggle visibility of tool section.\n     */\n    toggle: function() {\n        this.model.set(\"open\", !this.model.attributes.open);\n    },\n\n    /**\n     * Update whether section is open or close.\n     */\n    update_open: function() {\n        this.model.attributes.open\n            ? this.$el.children(\".toolSectionBody\").slideDown(\"fast\")\n            : this.$el.children(\".toolSectionBody\").slideUp(\"fast\");\n    }\n});\n\nvar ToolSearchView = Backbone.View.extend({\n    tagName: \"div\",\n    id: \"tool-search\",\n    className: \"bar\",\n\n    events: {\n        click: \"focus_and_select\",\n        \"keyup :input\": \"query_changed\",\n        \"change :input\": \"query_changed\",\n        \"click #search-clear-btn\": \"clear\"\n    },\n\n    render: function() {\n        this.$el.append(templates.tool_search(this.model.toJSON()));\n        if (!this.model.is_visible()) {\n            this.$el.hide();\n        }\n\n        // Adjust top for issue 2907 depending on whether the messagebox is visible.\n        if ($(\"#messagebox\").is(\":visible\")) {\n            this.$el.css(\"top\", \"95px\");\n        }\n\n        this.$el.find(\"[title]\").tooltip();\n        return this;\n    },\n\n    focus_and_select: function() {\n        this.$el\n            .find(\":input\")\n            .focus()\n            .select();\n    },\n\n    clear: function() {\n        this.model.clear_search();\n        this.$el.find(\":input\").val(\"\");\n        this.focus_and_select();\n        return false;\n    },\n\n    query_changed: function(evData) {\n        // check for the 'clear key' (ESC) first\n        if (this.model.attributes.clear_key && this.model.attributes.clear_key === evData.which) {\n            this.clear();\n            return false;\n        }\n        this.model.set(\"query\", this.$el.find(\":input\").val());\n    }\n});\n\n/**\n * Tool panel view. Events triggered include:\n * tool_link_click(click event, tool_model)\n */\nvar ToolPanelView = Backbone.View.extend({\n    tagName: \"div\",\n    className: \"toolMenu\",\n\n    /**\n     * Set up view.\n     */\n    initialize: function() {\n        this.model.get(\"tool_search\").on(\"change:results\", this.handle_search_results, this);\n    },\n\n    render: function() {\n        var self = this;\n\n        // Render search.\n        var search_view = new ToolSearchView({\n            model: this.model.get(\"tool_search\")\n        });\n        search_view.render();\n        self.$el.append(search_view.$el);\n\n        // Render panel.\n        this.model.get(\"layout\").each(panel_elt => {\n            if (panel_elt instanceof ToolSection) {\n                var section_title_view = new ToolSectionView({\n                    model: panel_elt\n                });\n                section_title_view.render();\n                self.$el.append(section_title_view.$el);\n            } else if (panel_elt instanceof Tool) {\n                var tool_view = new ToolLinkView({\n                    model: panel_elt,\n                    className: \"toolTitleNoSection\"\n                });\n                tool_view.render();\n                self.$el.append(tool_view.$el);\n            } else if (panel_elt instanceof ToolSectionLabel) {\n                var label_view = new ToolSectionLabelView({\n                    model: panel_elt\n                });\n                label_view.render();\n                self.$el.append(label_view.$el);\n            }\n        });\n\n        // Setup tool link click eventing.\n        self.$el.find(\"a.tool-link\").click(function(e) {\n            // Tool id is always the first class.\n            var tool_id = $(this)\n                .attr(\"class\")\n                .split(/\\s+/)[0];\n\n            var tool = self.model.get(\"tools\").get(tool_id);\n\n            self.trigger(\"tool_link_click\", e, tool);\n        });\n\n        return this;\n    },\n\n    handle_search_results: function() {\n        var results = this.model.get(\"tool_search\").get(\"results\");\n        if (results && results.length === 0) {\n            $(\"#search-no-results\").show();\n        } else {\n            $(\"#search-no-results\").hide();\n        }\n    }\n});\n\n/**\n * View for working with a tool: setting parameters and inputs and executing the tool.\n */\nvar ToolFormView = Backbone.View.extend({\n    className: \"toolForm\",\n\n    render: function() {\n        this.$el.children().remove();\n        this.$el.append(templates.tool_form(this.model.toJSON()));\n    }\n});\n\n/**\n * Integrated tool menu + tool execution.\n */\nvar IntegratedToolMenuAndView = Backbone.View.extend({\n    className: \"toolMenuAndView\",\n\n    initialize: function() {\n        this.tool_panel_view = new ToolPanelView({\n            collection: this.collection\n        });\n        this.tool_form_view = new ToolFormView();\n    },\n\n    render: function() {\n        // Render and append tool panel.\n        this.tool_panel_view.render();\n        this.tool_panel_view.$el.css(\"float\", \"left\");\n        this.$el.append(this.tool_panel_view.$el);\n\n        // Append tool form view.\n        this.tool_form_view.$el.hide();\n        this.$el.append(this.tool_form_view.$el);\n\n        // On tool link click, show tool.\n        var self = this;\n        this.tool_panel_view.on(\"tool_link_click\", (e, tool) => {\n            // Prevents click from activating link:\n            e.preventDefault();\n            // Show tool that was clicked on:\n            self.show_tool(tool);\n        });\n    },\n\n    /**\n     * Fetch and display tool.\n     */\n    show_tool: function(tool) {\n        var self = this;\n        tool.fetch().done(() => {\n            self.tool_form_view.model = tool;\n            self.tool_form_view.render();\n            self.tool_form_view.$el.show();\n            $(\"#left\").width(\"650px\");\n        });\n    }\n});\n\n// TODO: move into relevant views\nvar templates = {\n    // the search bar at the top of the tool panel\n    tool_search: _.template(\n        [\n            '<input id=\"tool-search-query\" class=\"search-query parent-width\" name=\"query\" ',\n            'placeholder=\"<%- search_hint_string %>\" autocomplete=\"off\" type=\"text\" />',\n            '<a id=\"search-clear-btn\" title=\"clear search (esc)\"> </a>',\n            //TODO: replace with icon\n            '<span id=\"search-spinner\" class=\"search-spinner fa fa-spinner fa-spin\"></span>'\n        ].join(\"\")\n    ),\n\n    // the category level container in the tool panel (e.g. 'Get Data', 'Text Manipulation')\n    panel_section: _.template(\n        [\n            '<div class=\"toolSectionTitle\" id=\"title_<%- id %>\">',\n            '<a href=\"javascript:void(0)\"><span><%- name %></span></a>',\n            \"</div>\",\n            '<div id=\"<%- id %>\" class=\"toolSectionBody\" style=\"display: none;\">',\n            '<div class=\"toolSectionBg\"></div>',\n            \"<div>\"\n        ].join(\"\")\n    ),\n\n    // a single tool's link in the tool panel; will load the tool form in the center panel\n    tool_link: _.template(\n        [\n            '<a class=\"<%- id %> tool-link\" href=\"<%= link %>\" target=\"<%- target %>\" minsizehint=\"<%- min_width %>\">',\n            '<span class=\"labels\">',\n            \"<% _.each( labels, function( label ){ %>\",\n            '<span class=\"label label-default label-<%- label %>\">',\n            \"<%- label %>\",\n            \"</span>\",\n            \"<% }); %>\",\n            \"</span>\",\n            '<span class=\"tool-old-link\">',\n            \"<%- name %>\",\n            \"</span>\",\n            \" <%- description %>\",\n            \"</a>\"\n        ].join(\"\")\n    ),\n\n    // the tool form for entering tool parameters, viewing help and executing the tool\n    // loaded when a tool link is clicked in the tool panel\n    tool_form: _.template(\n        [\n            '<div class=\"toolFormTitle\"><%- tool.name %> (version <%- tool.version %>)</div>',\n            '<div class=\"toolFormBody\">',\n            \"<% _.each( tool.inputs, function( input ){ %>\",\n            '<div class=\"form-row\">',\n            '<label for=\"<%- input.name %>\"><%- input.label %>:</label>',\n            '<div class=\"form-row-input\">',\n            \"<%= input.html %>\",\n            \"</div>\",\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n            \"<%- input.help %>\",\n            \"</div>\",\n            '<div style=\"clear: both;\"></div>',\n            \"</div>\",\n            \"<% }); %>\",\n            \"</div>\",\n            '<div class=\"form-row form-actions\">',\n            '<input type=\"submit\" class=\"btn btn-primary\" name=\"runtool_btn\" value=\"Execute\" />',\n            \"</div>\",\n            '<div class=\"toolHelp\">',\n            '<div class=\"toolHelpBody\"><% tool.help %></div>',\n            \"</div>\"\n            // TODO: we need scoping here because 'help' is the dom for the help menu in the masthead\n            // which implies a leaky variable that I can't find\n        ].join(\"\"),\n        { variable: \"tool\" }\n    )\n};\n\n// Exports\nexport default {\n    ToolParameter: ToolParameter,\n    IntegerToolParameter: IntegerToolParameter,\n    SelectToolParameter: SelectToolParameter,\n    Tool: Tool,\n    ToolCollection: ToolCollection,\n    ToolSearch: ToolSearch,\n    ToolPanel: ToolPanel,\n    ToolPanelView: ToolPanelView,\n    ToolFormView: ToolFormView\n};\n"]}