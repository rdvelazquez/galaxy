{"version":3,"sources":["mvc/webhooks.js"],"names":["Webhooks","Backbone","Collection","extend","url","Galaxy","root","WebhookView","View","el","initialize","options","toolId","toolVersion","$el","attr","webhooks","fetch","success","type","data","reset","filterType","length","render","weightedRandomPick","model","webhook","toJSON","html","id","appendScriptStyle","load","async","undefined","callback","models","filter","itype","item","get","indexOf","weights","pluck","sum","reduce","a","b","normalizedWeightsMap","Map","forEach","weight","index","set","parseFloat","toFixed","table","i","push","at","Math","floor","random"],"mappings":"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","file":"../../scripts/mvc/webhooks.js","sourcesContent":["import Utils from \"utils/utils\";\n\nconst Webhooks = Backbone.Collection.extend({\n    url: function() {\n        return `${Galaxy.root}api/webhooks`;\n    }\n});\n\nconst WebhookView = Backbone.View.extend({\n    el: \"#webhook-view\",\n\n    initialize: function(options) {\n        const toolId = options.toolId || \"\";\n        const toolVersion = options.toolVersion || \"\";\n\n        this.$el.attr(\"tool_id\", toolId);\n        this.$el.attr(\"tool_version\", toolVersion);\n\n        const webhooks = new Webhooks();\n        webhooks.fetch({\n            success: data => {\n                if (options.type) {\n                    data.reset(filterType(data, options.type));\n                }\n                if (data.length > 0) {\n                    this.render(weightedRandomPick(data));\n                }\n            }\n        });\n    },\n\n    render: function(model) {\n        const webhook = model.toJSON();\n        this.$el.html(`<div id=\"${webhook.id}\"></div>`);\n        Utils.appendScriptStyle(webhook);\n        return this;\n    }\n});\n\nconst load = options => {\n    const webhooks = new Webhooks();\n    webhooks.fetch({\n        async: options.async !== undefined ? options.async : true,\n        success: data => {\n            if (options.type) {\n                data.reset(filterType(data, options.type));\n            }\n            options.callback(data);\n        }\n    });\n};\n\nfunction filterType(data, type) {\n    return data.models.filter(item => {\n        let itype = item.get(\"type\");\n        if (itype) {\n            return itype.indexOf(type) !== -1;\n        } else {\n            return false;\n        }\n    });\n}\n\nfunction weightedRandomPick(data) {\n    const weights = data.pluck(\"weight\");\n    const sum = weights.reduce((a, b) => a + b);\n\n    const normalizedWeightsMap = new Map();\n    weights.forEach((weight, index) => {\n        normalizedWeightsMap.set(index, parseFloat((weight / sum).toFixed(2)));\n    });\n\n    const table = [];\n    for (const [index, weight] of normalizedWeightsMap) {\n        for (let i = 0; i < weight * 100; i++) {\n            table.push(index);\n        }\n    }\n\n    return data.at(table[Math.floor(Math.random() * table.length)]);\n}\n\nexport default {\n    WebhookView: WebhookView,\n    load: load\n};\n"]}