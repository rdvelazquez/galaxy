{"version":3,"sources":["mvc/toolshed/repository-view.js"],"names":["ToolShedRepositoryView","Backbone","View","extend","el","initialize","params","self","options","_","defaults","model","RepositoryCollection","listenTo","render","shed","tool_shed","replace","url","repository_id","tool_shed_url","category","fetch","repo_details_template","templateRepoDetails","models","repository","get","queue","queueLength","changesets","Object","keys","metadata","sort","a","b","parseInt","split","ordered_metadata","unordered_metadata","forEach","key","current_changeset","length","current_metadata","tools","repository_dependencies_template","templateRepoDependencies","repository_dependency_template","templateRepoDependency","tps_template_global_select","templateGlobalSectionSelect","tps_template_tool_select","templateToolSectionSelect","tps_select_options","templatePanelSelectOptions","tool_dependencies","shed_tool_conf","templateShedToolConf","shed_tool_confs","panel_section_dict","api_url","Galaxy","root","$el","html","checkInstalled","bindEvents","$","css","that","on","find","text","reDraw","tpsSelection","form","ev","preventDefault","repositories","JSON","stringify","attr","val","tool_shed_repository_ids","install_tool_dependencies","install_repository_dependencies","install_resolver_dependencies","tps","panelSelect","tool_panel_section","changeset","prepareInstall","repository_metadata","each","substr","addToQueue","new_value","default_tps","removeAttr","jstree","guid","clean","name","desc","tsr_id","data","cls","toolform","deepeach","inputs","input","type","indexOf","info","textify","extensions","modal","modal_title","show","closing_events","title","body","buttons","Close","hide","owner","already_installed","queued","repoQueued","index","installed","deleted","uninstalled","changeset_match","changeset_revision","installed_changeset_revision","prop","tool_panel_section_id","new_tool_panel_section","element_name","tool_guid","action","empty","localStorage","queue_key","queueKey","queued_repos","parse","hasOwnProperty","shed_url","new_tps","post","iri_parameters","doInstall","controller_url","new_route","join","console","log","history","navigate","trigger","template","templateToolDependency","templateGlobalSectionCreate","templateToolSectionCreate","RepoDetails"],"mappings":"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","file":"../../../scripts/mvc/toolshed/repository-view.js","sourcesContent":["import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport jstree from \"libs/jquery/jstree\";\nimport Utils from \"utils/utils\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport FormView from \"mvc/form/form-view\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar ToolShedRepositoryView = Backbone.View.extend({\n    el: \"#center\",\n\n    initialize: function(params) {\n        var self = this;\n        this.options = _.defaults(this.options || {}, this.defaults);\n        this.model = new toolshed_model.RepositoryCollection();\n        this.listenTo(this.model, \"sync\", this.render);\n        var shed = params.tool_shed.replace(/\\//g, \"%2f\");\n        this.model.url += `?tool_shed_url=${shed}&repository_id=${params.repository_id}`;\n        this.model.tool_shed_url = params.tool_shed.replace(/%2f/g, \"/\");\n        this.model.tool_shed = shed;\n        this.model.category = params.repository_id;\n        this.model.fetch();\n    },\n\n    render: function(options) {\n        var repo_details_template = this.templateRepoDetails;\n        var models = this.model.models[0];\n        this.options = {\n            repository: models.get(\"repository\"),\n            tool_shed: this.model.tool_shed,\n            queue: toolshed_util.queueLength()\n        };\n        var changesets = Object.keys(this.options.repository.metadata).sort(function(a, b) {\n            return parseInt(a.split(\":\")[0] - b.split(\":\")[0]);\n        });\n        var ordered_metadata = {};\n        var unordered_metadata = this.options.repository.metadata;\n        changesets.forEach(function(key) {\n            ordered_metadata[key] = unordered_metadata[key];\n        });\n        this.options.repository.metadata = ordered_metadata;\n        this.options.current_changeset = this.options.current_changeset || changesets[changesets.length - 1];\n        this.options.current_metadata = this.options.repository.metadata[this.options.current_changeset];\n        this.options.current_metadata.tool_shed_url = this.model.tool_shed_url;\n        this.options.tools = this.options.current_metadata.tools;\n        this.options.repository_dependencies_template = this.templateRepoDependencies;\n        this.options.repository_dependency_template = this.templateRepoDependency;\n        this.options.tps_template_global_select = this.templateGlobalSectionSelect;\n        this.options.tps_template_tool_select = this.templateToolSectionSelect;\n        this.options.tps_select_options = this.templatePanelSelectOptions;\n        this.options.tool_dependencies = models.get(\"tool_dependencies\");\n        this.options.shed_tool_conf = this.templateShedToolConf({\n            shed_tool_confs: models.get(\"shed_conf\")\n        });\n        this.options.panel_section_dict = models.get(\"panel_section_dict\");\n        this.options.api_url = `${Galaxy.root}api/tool_shed_repositories/install?async=True`;\n        this.options = _.extend(this.options, options);\n        this.$el.html(repo_details_template(this.options));\n        this.checkInstalled(this.options.current_metadata);\n        this.bindEvents();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\"#changeset\").on(\"change\", () => {\n            that.options.current_changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .text();\n            that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n            that.checkInstalled(that.options.current_metadata);\n            that.reDraw(that.options);\n        });\n        $(\"#tool_panel_section_select\").on(\"change\", () => {\n            that.tpsSelection();\n        });\n        $(\"#install_repository\").on(\"click\", ev => {\n            var form = $(\"#repository_installation\");\n            ev.preventDefault();\n            var params = {};\n            params.repositories = JSON.stringify([\n                [\n                    $(\"#install_repository\").attr(\"data-tsrid\"),\n                    $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .val()\n                ]\n            ]);\n            params.tool_shed_repository_ids = JSON.stringify([$(\"#install_repository\").attr(\"data-tsrid\")]);\n            params.tool_shed_url = that.model.tool_shed_url;\n            params.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n            params.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n            params.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n            var tps = that.panelSelect(params);\n            params.tool_panel_section = JSON.stringify(that.panelSelect(params));\n            params.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                .find(\"option:selected\")\n                .val();\n            params.changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .val();\n            var url = $(\"#repository_installation\").attr(\"action\");\n            that.prepareInstall(params, url);\n        });\n        $(\"#queue_install\").on(\"click\", ev => {\n            that.options.current_changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .text();\n            that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n            var changeset = that.options.current_changeset;\n            var repository_metadata = {};\n            _.each(Object.keys(that.options.current_metadata), key => {\n                if (!repository_metadata[key]) {\n                    repository_metadata[key] = that.options.current_metadata[key];\n                }\n            });\n            repository_metadata.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n            repository_metadata.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n            repository_metadata.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n            repository_metadata.tool_panel_section = JSON.stringify(that.panelSelect({}));\n            repository_metadata.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                .find(\"option:selected\")\n                .val();\n            repository_metadata.tool_shed_url = that.model.tool_shed_url;\n            if (repository_metadata.tool_shed_url.substr(-1) == \"/\") {\n                repository_metadata.tool_shed_url = repository_metadata.tool_shed_url.substr(\n                    0,\n                    repository_metadata.tool_shed_url.length - 1\n                );\n            }\n            toolshed_util.addToQueue(repository_metadata);\n            that.checkInstalled(repository_metadata);\n        });\n        $(\".tool_panel_section_picker\").on(\"change\", function() {\n            var new_value = $(this)\n                .find(\"option:selected\")\n                .val();\n            var default_tps = $(\"#tool_panel_section_select\")\n                .find(\"option:selected\")\n                .val();\n            if (new_value == default_tps) {\n                $(this).attr(\"default\", \"active\");\n            } else {\n                $(this).removeAttr(\"default\");\n            }\n        });\n        $(() => {\n            $(\"#repository_dependencies\").jstree();\n        });\n        $(\".tool_form\").on(\"click\", function() {\n            var guid = $(this).attr(\"data-guid\");\n            var clean = $(this).attr(\"data-clean\");\n            var name = $(this).attr(\"data-name\");\n            var desc = $(this).attr(\"data-desc\");\n            var tool_shed_url = that.model.tool_shed_url;\n            var tsr_id = $(\"#repository_details\").attr(\"data-tsrid\");\n            var changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .val();\n            var api_url = `${Galaxy.root}api/tool_shed/tool_json`;\n            var params = {\n                guid: guid,\n                tool_shed_url: tool_shed_url,\n                tsr_id: tsr_id,\n                changeset: changeset\n            };\n            $.get(api_url, params, data => {\n                data.cls = \"ui-portlet-plain\";\n                var toolform = new FormView(data);\n                Utils.deepeach(data.inputs, input => {\n                    if (input.type) {\n                        if ([\"data\", \"data_collection\"].indexOf(input.type) != -1) {\n                            input.type = \"hidden\";\n                            input.info = `Data input '${input.name}' (${Utils.textify(input.extensions)})`;\n                        }\n                    }\n                });\n                var modal = new Modal.View();\n                var modal_title = `<u>${name}</u> ${desc}`;\n                modal.show({\n                    closing_events: true,\n                    title: modal_title,\n                    body: toolform.$el,\n                    buttons: {\n                        Close: function() {\n                            modal.hide();\n                        }\n                    }\n                });\n            });\n        });\n    },\n\n    checkInstalled: function(metadata) {\n        var that = this;\n        var params = { name: metadata.name, owner: metadata.owner };\n        var already_installed = false;\n        var queued = that.repoQueued(metadata);\n        $.get(`${Galaxy.root}api/tool_shed_repositories`, params, data => {\n            for (var index = 0; index < data.length; index++) {\n                var repository = data[index];\n                var installed = !repository.deleted && !repository.uninstalled;\n                var changeset_match =\n                    repository.changeset_revision == metadata.changeset_revision ||\n                    repository.installed_changeset_revision == metadata.changeset_revision;\n                if (\n                    repository.name == metadata.repository.name &&\n                    repository.owner == metadata.repository.owner &&\n                    installed &&\n                    changeset_match\n                ) {\n                    already_installed = true;\n                }\n                if (already_installed) {\n                    $(\"#install_repository\").prop(\"disabled\", true);\n                    $(\"#install_repository\").val(\"This revision is already installed\");\n                } else {\n                    $(\"#install_repository\").prop(\"disabled\", false);\n                    $(\"#install_repository\").val(\"Install this revision\");\n                }\n            }\n            if (that.repoQueued(metadata) || already_installed) {\n                $(\"#queue_install\").hide();\n                $(\"#queue_install\").val(\"This revision is already in the queue\");\n            } else {\n                $(\"#queue_install\").show();\n                $(\"#queue_install\").val(\"Install this revision later\");\n            }\n        });\n    },\n\n    panelSelect: function(params) {\n        var tool_panel_section = {};\n        if ($(\"#tool_panel_section_select\").length) {\n            params.tool_panel_section_id = $(\"#tool_panel_section_select\")\n                .find(\"option:selected\")\n                .val();\n        } else {\n            params.new_tool_panel_section = $(\"#new_tool_panel_section\").val();\n        }\n        $(\".tool_panel_section_picker\").each(function() {\n            var element_name = $(this).attr(\"name\");\n            var tool_guid = $(this).attr(\"data-toolguid\");\n            if (element_name === \"tool_panel_section_id\") {\n                tool_panel_section[tool_guid] = {\n                    tool_panel_section: $(this)\n                        .find(\"option:selected\")\n                        .val(),\n                    action: \"append\"\n                };\n            } else {\n                tool_panel_section[tool_guid] = {\n                    tool_panel_section: $(this).val(),\n                    action: \"create\"\n                };\n            }\n        });\n        return tool_panel_section;\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.render(options);\n    },\n\n    repoQueued: function(metadata) {\n        var that = this;\n        if (!localStorage.repositories) {\n            return;\n        }\n        var queue_key = that.queueKey(metadata);\n        var queued_repos;\n        if (localStorage.repositories) {\n            queued_repos = JSON.parse(localStorage.repositories);\n        }\n        if (queued_repos && queued_repos.hasOwnProperty(queue_key)) {\n            return true;\n        }\n        return false;\n    },\n\n    queueKey: function(metadata) {\n        var shed_url = this.model.tool_shed_url;\n        // Make sure there is never a trailing slash on the shed URL.\n        if (shed_url.substr(-1) == \"/\") {\n            shed_url = shed_url.substr(0, shed_url.length - 1);\n        }\n        return `${shed_url}|${metadata.repository_id}|${metadata.changeset_revision}`;\n    },\n\n    tpsSelection: function() {\n        new_tps = $(\"#tool_panel_section_select\")\n            .find(\"option:selected\")\n            .val();\n        $('.tool_panel_section_picker[default=\"active\"]').each(function() {\n            $(this).val(new_tps);\n        });\n    },\n\n    prepareInstall: function(params, api_url) {\n        var that = this;\n        $.post(api_url, params, data => {\n            var iri_parameters = JSON.parse(data);\n            that.doInstall(iri_parameters);\n        });\n    },\n\n    doInstall: function(params) {\n        var controller_url = `${Galaxy.root}admin_toolshed/install_repositories`;\n        var repositories = params.repositories;\n        var new_route = `status/r/${repositories.join(\"|\")}`;\n        $.post(controller_url, params, data => {\n            console.log(\"Initializing repository installation succeeded\");\n        });\n        Backbone.history.navigate(new_route, {\n            trigger: true,\n            replace: true\n        });\n    },\n\n    templateRepoDetails: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\">Repository information for <strong><%= repository.name %></strong> from <strong><%= repository.owner %></strong></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"unified-panel-body\" id=\"repository_details\" data-tsrid=\"<%= repository.id %>\">',\n            '<form id=\"repository_installation\" name=\"install_repository\" method=\"post\" action=\"<%= api_url %>\">',\n            '<input type=\"hidden\" id=\"repositories\" name=\"<%= repository.id %>\" value=\"ID\" />',\n            '<input type=\"hidden\" id=\"tool_shed_url\" name=\"tool_shed_url\" value=\"<%= tool_shed %>\" />',\n            '<div class=\"toolForm\">',\n            '<div class=\"toolFormTitle\">Changeset</div>',\n            '<div class=\"toolFormBody changeset\">',\n            '<select id=\"changeset\" name=\"changeset\" style=\"margin: 5px;\">',\n            \"<% _.each(Object.keys(repository.metadata), function(changeset) { %>\",\n            '<% if (changeset == current_changeset) { var selected = \"selected \"; } else { var selected = \"\"; } %>',\n            '<option <%= selected %>value=\"<%= changeset.split(\":\")[1] %>\"><%= changeset %></option>',\n            \"<% }); %>\",\n            \"</select>\",\n            '<input class=\"btn btn-primary preview-button\" data-tsrid=\"<%= current_metadata.repository.id %>\" type=\"submit\" id=\"install_repository\" name=\"install_repository\" value=\"Install this revision now\" />',\n            '<input class=\"btn btn-primary preview-button\" type=\"button\" id=\"queue_install\" name=\"queue_install\" value=\"Install this revision later\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">Please select a revision and review the settings below before installing.</div>',\n            \"</div>\",\n            \"</div>\",\n            \"<%= shed_tool_conf %>\",\n            \"<% if (current_metadata.has_repository_dependencies) { %>\",\n            '<div class=\"toolFormTitle\">Repository dependencies for <strong id=\"current_changeset\"><%= current_changeset %></strong></div>',\n            '<div class=\"toolFormBody\">',\n            '<p id=\"install_repository_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_repository_dependencies\" />',\n            '<label for=\"install_repository_dependencies\">Install repository dependencies</label>',\n            \"</p>\",\n            \"<% current_metadata.repository_dependency_template = repository_dependency_template; %>\",\n            '<div class=\"tables container-table\" id=\"repository_dependencies\">',\n            '<div class=\"expandLink\">',\n            '<a class=\"toggle_folder\" data_target=\"repository_dependencies_table\">',\n            \"Repository dependencies &ndash; <em>installation of these additional repositories is required</em>\",\n            \"</a>\",\n            \"</div>\",\n            \"<%= repository_dependencies_template(current_metadata) %>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<% if (current_metadata.includes_tool_dependencies) { %>\",\n            '<div class=\"toolFormTitle\">Tool dependencies</div>',\n            '<div class=\"toolFormBody\">',\n            '<p id=\"install_resolver_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_resolver_dependencies\" />',\n            '<label for=\"install_resolver_dependencies\">Install resolver dependencies</label>',\n            \"</p>\",\n            '<p id=\"install_tool_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_tool_dependencies\" />',\n            '<label for=\"install_tool_dependencies\">Install tool dependencies</label>',\n            \"</p>\",\n            '<div class=\"tables container-table\" id=\"tool_dependencies\">',\n            '<div class=\"expandLink\">',\n            '<a class=\"toggle_folder\" data_target=\"tool_dependencies_table\">',\n            \"Tool dependencies &ndash; <em>repository tools require handling of these dependencies</em>\",\n            \"</a>\",\n            \"</div>\",\n            '<table class=\"tables container-table\" id=\"tool_dependencies_table\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            \"<thead>\",\n            '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n            '<th style=\"padding-left: 40px;\">Name</th>',\n            \"<th>Version</th>\",\n            \"<th>Type</th>\",\n            \"</tr>\",\n            \"</thead>\",\n            '<tbody id=\"tool_deps\">',\n            \"<% _.each(tool_dependencies[current_changeset], function(dependency) { %>\",\n            '<tr class=\"datasetRow tool_dependency_row\" style=\"display: table-row;\">',\n            '<td style=\"padding-left: 40px;\">',\n            \"<%= dependency.name %></td>\",\n            \"<td><%= dependency.version %></td>\",\n            \"<td><%= dependency.type %></td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<% if (current_metadata.includes_tools_for_display_in_tool_panel) { %>\",\n            '<div class=\"toolFormTitle\">Tools &ndash; <em>click the name to preview the tool and use the pop-up menu to inspect all metadata</em></div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"tables container-table\" id=\"tools_toggle\">',\n            '<table class=\"tables container-table\" id=\"valid_tools\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            \"<thead>\",\n            '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n            '<th style=\"padding-left: 40px;\">Name</th>',\n            \"<th>Description</th>\",\n            \"<th>Version</th>\",\n            \"<th><%= tps_template_global_select({tps: panel_section_dict, tps_select_options: tps_select_options}) %></tr>\",\n            \"</thead>\",\n            '<tbody id=\"tools_in_repo\">',\n            \"<% _.each(current_metadata.tools, function(tool) { %>\",\n            '<tr id=\"libraryItem-<%= tool.clean %>\" class=\"tool_row\" style=\"display: table-row;\" style=\"width: 15%\">',\n            '<td style=\"padding-left: 40px;\">',\n            '<div id=\"tool-<%= tool.clean %>\" class=\"menubutton split popup\" style=\"float: left;\">',\n            '<a class=\"tool_form view-info\" data-toggle=\"modal\" data-target=\"toolform_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" data-guid=\"<%= tool.guid %>\" data-name=\"<%= tool.name %>\" data-desc=\"<%= tool.description %>\"><%= tool.name %></a>',\n            \"</div>\",\n            \"</td>\",\n            \"<td><%= tool.description %></td>\",\n            '<td style=\"width: 15%\"><%= tool.version %></td>',\n            '<td style=\"width: 35%\" id=\"tool_tps_<%= tool.clean %>\">',\n            \"<%= tps_template_tool_select({tool: tool, tps: panel_section_dict, tps_select_options: tps_select_options}) %>\",\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"</form>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateRepoDependencies: _.template(\n        [\n            '<div class=\"toolFormTitle\">Repository Dependencies</div>',\n            '<div class=\"toolFormBody tables container-table\" id=\"repository_dependencies\">',\n            \"<ul>\",\n            \"<li>Repository installation requires the following\",\n            \"<% if (has_repository_dependencies) { %>\",\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n            \"<%= repository_dependency_template(dependency) %>\",\n            \"<% }); %>\",\n            \"<% } %>\",\n            \"</li>\",\n            \"</ul>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateRepoDependency: _.template(\n        [\n            '<li id=\"metadata_<%= id %>\" class=\"datasetRow repository_dependency_row\">',\n            \"Repository <b><%= repository.name %></b> revision <b><%= changeset_revision %></b> owned by <b><%= repository.owner %></b>\",\n            \"<% if (has_repository_dependencies) { %>\",\n            '<ul class=\"child_dependencies\">',\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n            \"<%= repository_dependency_template(dependency) %>\",\n            \"<% }); %>\",\n            \"</ul>\",\n            \"<% } %>\",\n            \"</li>\"\n        ].join(\"\")\n    ),\n\n    templateShedToolConf: _.template(\n        [\n            '<div class=\"toolFormTitle\">Shed tool configuration file:</div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"form-row\">',\n            '<select name=\"shed_tool_conf\">',\n            \"<% _.each(shed_tool_confs.options, function(conf) { %>\",\n            '<option value=\"<%= conf.value %>\"><%= conf.label %></option>',\n            \"<% }); %>\",\n            \"</select>\",\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">Select the file whose <b>tool_path</b> setting you want used for installing repositories.</div>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolDependency: _.template(\n        [\n            \"<% if (has_repository_dependencies) { %>\",\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% if (dependency.includes_tool_dependencies) { %>\",\n            \"<% dependency.tool_dependency_template = tool_dependency_template %>\",\n            \"<%= tool_dependency_template(dependency) %>\",\n            \"<% } %>\",\n            \"<% }); %>\",\n            \"<% } %>\"\n        ].join(\"\")\n    ),\n\n    templateGlobalSectionCreate: _.template(\n        [\n            '<div id=\"tool_panel_section\">',\n            '<div class=\"form-row\" id=\"new_tps\">',\n            '<input id=\"new_tool_panel_section\" name=\"new_tool_panel_section\" type=\"textfield\" value=\"\" size=\"40\"/>',\n            '<input class=\"btn btn-primary\" type=\"button\" id=\"select_existing\" value=\"Select existing\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n            \"Add a new tool panel section to contain the installed tools (optional).\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateGlobalSectionSelect: _.template(\n        [\n            '<div id=\"tool_panel_section\">',\n            '<div class=\"toolFormTitle\">Tool Panel Section</div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"tab-pane\" id=\"select_tps\">',\n            '<select name=\"<%= name %>\" id=\"<%= tps.id %>\">',\n            \"<%= tps_select_options({sections: tps.sections}) %>\",\n            \"</select>\",\n            '<input class=\"btn btn-primary\" type=\"button\" id=\"create_new\" value=\"Create new\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n            \"Select an existing tool panel section to contain the installed tools (optional).\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolSectionCreate: _.template(\n        [\n            '<div id=\"new_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"form-row\">',\n            '<input data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" size=\"40\" name=\"new_tool_panel_section\" id=\"new_tool_panel_section_<%= tool.clean %>\" type=\"text\">',\n            '<input id=\"per_tool_select_<%= tool.clean %>\" class=\"btn btn-primary\" data-toolguid=\"<%= tool.guid %>\" value=\"Select existing\" id=\"select_existing_<%= tool.clean %>\" type=\"button\">',\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolSectionSelect: _.template(\n        [\n            '<div id=\"select_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"tps_creator\">',\n            '<select default=\"active\" style=\"width: 30em;\" data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" name=\"tool_panel_section_id\" id=\"tool_panel_section_select_<%= tool.clean %>\">',\n            \"<%= tps_select_options({sections: tps.sections}) %>\",\n            \"</select>\",\n            '<input id=\"per_tool_create_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"btn btn-primary create-tps-button\" data-toolguid=\"<%= tool.guid %>\" value=\"Create new\" id=\"create_new_<%= tool.clean %>\" type=\"button\">',\n            '<div style=\"clear: both;\" class=\"toolParamHelp\"></div>',\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templatePanelSelectOptions: _.template(\n        [\n            \"<% _.each(sections, function(section) { %>\",\n            '<option value=\"<%= section.id %>\"><%= section.name %></option>',\n            \"<% }); %>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    RepoDetails: ToolShedRepositoryView\n};\n"]}