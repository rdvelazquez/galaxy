{"version":3,"sources":["mvc/lazy/lazy-limited.js"],"names":["Backbone","View","extend","initialize","options","self","$container","collection","new_content","max","content_list","$message","$","addClass","append","listenTo","_reset","_refresh","_remove","_done","done","_","size","each","content","remove","hide","model","model_id","id","i","models","view"],"mappings":";;;;;;sBAEeA,SAASC,IAAT,CAAcC,MAAd,CAAqB;AAChCC,oBAAY,oBAASC,OAAT,EAAkB;AAC1B,gBAAIC,OAAO,IAAX;AACA,iBAAKC,UAAL,GAAkBF,QAAQE,UAA1B;AACA,iBAAKC,UAAL,GAAkBH,QAAQG,UAA1B;AACA,iBAAKC,WAAL,GAAmBJ,QAAQI,WAA3B;AACA,iBAAKC,GAAL,GAAWL,QAAQK,GAAR,IAAe,EAA1B;AACA,iBAAKC,YAAL,GAAoB,EAApB;AACA,iBAAKC,QAAL,GAAgBC,EAAE,QAAF,EACXC,QADW,CACF,gBADE,EAEXC,MAFW,wBAEiB,KAAKL,GAFtB,2BAAhB;AAGA,iBAAKH,UAAL,CAAgBQ,MAAhB,CAAuB,KAAKH,QAA5B;AACA,iBAAKI,QAAL,CAAc,KAAKR,UAAnB,EAA+B,OAA/B,EAAwC,KAAKS,MAA7C,EAAqD,IAArD;AACA,iBAAKD,QAAL,CAAc,KAAKR,UAAnB,EAA+B,KAA/B,EAAsC,KAAKU,QAA3C,EAAqD,IAArD;AACA,iBAAKF,QAAL,CAAc,KAAKR,UAAnB,EAA+B,QAA/B,EAAyC,KAAKW,OAA9C,EAAuD,IAAvD;AACH,SAf+B;;AAiBhC;AACAC,eAAO,iBAAW;AACd,gBAAIC,OAAOC,EAAEC,IAAF,CAAO,KAAKZ,YAAZ,IAA4B,KAAKD,GAA5C;AACA,iBAAKE,QAAL,CAAcS,OAAO,MAAP,GAAgB,MAA9B;AACA,mBAAOA,IAAP;AACH,SAtB+B;;AAwBhC;AACAJ,gBAAQ,kBAAW;AACfK,cAAEE,IAAF,CAAO,KAAKb,YAAZ,EAA0B,mBAAW;AACjCc,wBAAQC,MAAR;AACH,aAFD;AAGA,iBAAKf,YAAL,GAAoB,EAApB;AACA,iBAAKC,QAAL,CAAce,IAAd;AACH,SA/B+B;;AAiChC;AACAR,iBAAS,iBAASS,KAAT,EAAgB;AACrB,gBAAIC,WAAWD,MAAME,EAArB;AACA,gBAAIL,UAAU,KAAKd,YAAL,CAAkBkB,QAAlB,CAAd;AACA,gBAAIJ,OAAJ,EAAa;AACTA,wBAAQC,MAAR;AACA,uBAAO,KAAKf,YAAL,CAAkBkB,QAAlB,CAAP;AACH;AACD,iBAAKX,QAAL;AACH,SA1C+B;;AA4ChC;AACAA,kBAAU,oBAAW;AACjB,gBAAI,CAAC,KAAKE,KAAL,EAAL,EAAmB;AACf,qBAAK,IAAIW,CAAT,IAAc,KAAKvB,UAAL,CAAgBwB,MAA9B,EAAsC;AAClC,wBAAIJ,QAAQ,KAAKpB,UAAL,CAAgBwB,MAAhB,CAAuBD,CAAvB,CAAZ;AACA,wBAAIE,OAAO,KAAKtB,YAAL,CAAkBiB,MAAME,EAAxB,CAAX;AACA,wBAAI,CAAC,KAAKnB,YAAL,CAAkBiB,MAAME,EAAxB,CAAL,EAAkC;AAC9B,4BAAIL,UAAU,KAAKhB,WAAL,CAAiBmB,KAAjB,CAAd;AACA,6BAAKjB,YAAL,CAAkBiB,MAAME,EAAxB,IAA8BL,OAA9B;AACA,4BAAI,KAAKL,KAAL,EAAJ,EAAkB;AACd;AACH;AACJ;AACJ;AACJ;AACJ;AA3D+B,KAArB,C","file":"../../../scripts/mvc/lazy/lazy-limited.js","sourcesContent":["/** Contains helpers to limit/lazy load views for backbone views */\n\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.$container = options.$container;\n        this.collection = options.collection;\n        this.new_content = options.new_content;\n        this.max = options.max || 50;\n        this.content_list = {};\n        this.$message = $(\"<div/>\")\n            .addClass(\"ui-limitloader\")\n            .append(`...only the first ${this.max} entries are visible.`);\n        this.$container.append(this.$message);\n        this.listenTo(this.collection, \"reset\", this._reset, this);\n        this.listenTo(this.collection, \"add\", this._refresh, this);\n        this.listenTo(this.collection, \"remove\", this._remove, this);\n    },\n\n    /** Checks if the limit has been reached */\n    _done: function() {\n        var done = _.size(this.content_list) > this.max;\n        this.$message[done ? \"show\" : \"hide\"]();\n        return done;\n    },\n\n    /** Remove all content */\n    _reset: function() {\n        _.each(this.content_list, content => {\n            content.remove();\n        });\n        this.content_list = {};\n        this.$message.hide();\n    },\n\n    /** Remove content */\n    _remove: function(model) {\n        var model_id = model.id;\n        var content = this.content_list[model_id];\n        if (content) {\n            content.remove();\n            delete this.content_list[model_id];\n        }\n        this._refresh();\n    },\n\n    /** Refreshes container content by adding new views if visible */\n    _refresh: function() {\n        if (!this._done()) {\n            for (var i in this.collection.models) {\n                var model = this.collection.models[i];\n                var view = this.content_list[model.id];\n                if (!this.content_list[model.id]) {\n                    var content = this.new_content(model);\n                    this.content_list[model.id] = content;\n                    if (this._done()) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n});\n"]}