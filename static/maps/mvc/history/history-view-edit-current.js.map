{"version":3,"sources":["mvc/history/history-view-edit-current.js"],"names":["HistoryViewPrefs","SessionStorageModel","extend","defaults","tagsEditorShown","annotationEditorShown","scrollPosition","toString","JSON","stringify","toJSON","storageKey","_super","HistoryViewEdit","CurrentHistoryView","className","prototype","HDCAViewClass","foldoutStyle","emptyMsg","join","initialize","attributes","preferences","_","id","pick","keys","call","panelStack","currentContentId","_setUpListeners","panel","on","set","loadCurrentHistory","loadHistory","url","Galaxy","root","switchToHistory","historyId","user","isAnonymous","trigger","$","when","createNewHistory","setModel","model","render","log","checkForUpdates","_setUpModelListeners","listenTo","arguments","once","_setUpCollectionListeners","collection","newState","oldState","get","storage","includeHidden","removeItemView","_setUpBehaviors","$where","$el","_debouncedScrollCaptureHandler","debounce","scrollCapture","is","scrollTop","$scrollContainer","off","_buildNewRender","$newRender","find","prependTo","_renderQuotaMessage","$whereTo","templates","quotaMsg","_renderTags","tagsEditor","toggle","hidden","_renderAnnotation","annotationEditor","_swapNewRender","delay","pos","scrollTo","_attachItems","_setCurrentContentById","addItemView","options","view","length","_collapseDrilldownPanel","_setUpItemViewListeners","v","drilldown","_expandDrilldownPanel","setCurrentContent","removeClass","addClass","viewFromModelId","push","$controls","add","$list","hide","parentName","delegateEvents","appendTo","pop","show","events","clone","ev","upload","$toolMenu","parent","click","listenToGalaxy","galaxy","data","pathToMatch","fullpath","hdaId","useToURLRegexMap","display","edit","report_error","rerun","show_params","regex","use","result","match","connectToQuotaMeter","quotaMeter","showQuotaMessage","hideQuotaMessage","isOverQuota","clearMessages","$target","isUndefined","currentTarget","$messages","children","not","fadeOut","fxSpeed","remove","$msg","slideDown","slideUp","unhideHidden","self","confirm","contents","_filterAndUpdate","visible","deleted","purged","done","renderItems","jQuery","deleteHidden","quotaMsgTemplate","wrapTemplate"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;AAEA,QAAIA,mBAAmB,kBAASC,mBAAT,CAA6BC,MAA7B;AACnB,4CAAyC;AACrCC,kBAAU;AACN;AACAC,6BAAiB,KAFX;AAGN;AACAC,mCAAuB,KAJjB;AAKN;AACA;AACA;AACA;AACA;AACAC,4BAAgB;AAVV,SAD2B;AAarCC,kBAAU,oBAAW;AACjB,yCAA2BC,KAAKC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAA3B;AACH;AAfoC,KADtB,CAAvB;;AAoBA;AACAV,qBAAiBW,UAAjB,GAA8B,SAASA,UAAT,GAAsB;AAChD,eAAO,eAAP;AACH,KAFD;;AAIA;;;;AAIA,QAAIC,SAAS,0BAAkBC,eAA/B;AACA;AACA;;;;;;;AAOA,QAAIC,qBAAqBF,OAAOV,MAAP;AACrB,8CAA2C;AACvCa,mBAAcH,OAAOI,SAAP,CAAiBD,SAA/B,2BADuC;;AAGvC;AACAE,uBAAeL,OAAOI,SAAP,CAAiBC,aAAjB,CAA+Bf,MAA/B,CAAsC;AACjDgB,0BAAc;AADmC,SAAtC,CAJwB;;AAQvCC,kBAAU,CACN,4BAAG,uBAAH,CADM,EAEN,IAFM,EAGN,4BAAG,UAAH,CAHM,EAIN,qDAJM,EAKN,4BAAG,oBAAH,CALM,EAMN,MANM,EAON,4BAAG,MAAH,CAPM,EAQN,qDARM,EASN,4BAAG,kCAAH,CATM,EAUN,MAVM,EAWRC,IAXQ,CAWH,EAXG,CAR6B;;AAqBvC;AACA;AACAC,oBAAY,oBAASC,UAAT,EAAqB;AAC7BA,yBAAaA,cAAc,EAA3B;;AAEA;AACA;AACA,iBAAKC,WAAL,GAAmB,IAAIvB,gBAAJ,CACfwB,EAAEtB,MAAF,CACI;AACIuB,oBAAIzB,iBAAiBW,UAAjB;AADR,aADJ,EAIIa,EAAEE,IAAF,CAAOJ,UAAP,EAAmBE,EAAEG,IAAF,CAAO3B,iBAAiBgB,SAAjB,CAA2Bb,QAAlC,CAAnB,CAJJ,CADe,CAAnB;;AASAS,mBAAOI,SAAP,CAAiBK,UAAjB,CAA4BO,IAA5B,CAAiC,IAAjC,EAAuCN,UAAvC;;AAEA;AACA,iBAAKO,UAAL,GAAkB,EAAlB;;AAEA;AACA,iBAAKC,gBAAL,GAAwBR,WAAWQ,gBAAX,IAA+B,IAAvD;AACA;AACH,SA7CsC;;AA+CvC;AACAC,yBAAiB,2BAAW;AACxBnB,mBAAOI,SAAP,CAAiBe,eAAjB,CAAiCH,IAAjC,CAAsC,IAAtC;;AAEA,gBAAII,QAAQ,IAAZ;AACA;AACA,iBAAKC,EAAL,CAAQ,WAAR,EAAqB,YAAM;AACvBD,sBAAMT,WAAN,CAAkBW,GAAlB,CAAsB,gBAAtB,EAAwC,CAAxC;AACH,aAFD;AAGH,SAxDsC;;AA0DvC;AACA;AACA;AACAC,4BAAoB,8BAAW;AAC3B,mBAAO,KAAKC,WAAL,CAAiB,IAAjB,EAAuB;AAC1BC,qBAAQC,OAAOC,IAAf;AAD0B,aAAvB,CAAP;AAGH,SAjEsC;;AAmEvC;AACAC,yBAAiB,yBAASC,SAAT,EAAoBnB,UAApB,EAAgC;AAC7C,gBAAIgB,OAAOI,IAAP,CAAYC,WAAZ,EAAJ,EAA+B;AAC3B,qBAAKC,OAAL,CAAa,OAAb,EAAsB,4BAAG,2CAAH,CAAtB,EAAuE,4BAAG,gBAAH,CAAvE;AACA,uBAAOC,EAAEC,IAAF,EAAP;AACH;AACD,mBAAO,KAAKV,WAAL,CAAiBK,SAAjB,EAA4B;AAC/BJ,qBAAQC,OAAOC,IAAf,kCAAgDE;AADjB,aAA5B,CAAP;AAGH,SA5EsC;;AA8EvC;AACAM,0BAAkB,0BAASzB,UAAT,EAAqB;AACnC,gBAAIgB,OAAOI,IAAP,CAAYC,WAAZ,EAAJ,EAA+B;AAC3B,qBAAKC,OAAL,CAAa,OAAb,EAAsB,4BAAG,2CAAH,CAAtB,EAAuE,4BAAG,gBAAH,CAAvE;AACA,uBAAOC,EAAEC,IAAF,EAAP;AACH;AACD,mBAAO,KAAKV,WAAL,CAAiB,IAAjB,EAAuB;AAC1BC,qBAAQC,OAAOC,IAAf;AAD0B,aAAvB,CAAP;AAGH,SAvFsC;;AAyFvC;AACAS,kBAAU,kBAASC,KAAT,EAAgB3B,UAAhB,EAA4B4B,MAA5B,EAAoC;AAC1CtC,mBAAOI,SAAP,CAAiBgC,QAAjB,CAA0BpB,IAA1B,CAA+B,IAA/B,EAAqCqB,KAArC,EAA4C3B,UAA5C,EAAwD4B,MAAxD;AACA,gBAAI,KAAKD,KAAL,IAAc,KAAKA,KAAL,CAAWxB,EAA7B,EAAiC;AAC7B,qBAAK0B,GAAL,CAAS,sBAAT;AACA,qBAAKF,KAAL,CAAWG,eAAX;AACH;AACD,mBAAO,IAAP;AACH,SAjGsC;;AAmGvC;AACA;AACAC,8BAAsB,gCAAW;AAC7BzC,mBAAOI,SAAP,CAAiBqC,oBAAjB,CAAsCzB,IAAtC,CAA2C,IAA3C;AACA;AACA,mBAAO,KAAK0B,QAAL,CAAc,KAAKL,KAAnB,EAA0B;AAC7B,gDAAgC,qCAAW;AACvC,yBAAKL,OAAL,CAAa,qBAAb,EAAoC,IAApC,EAA0C,KAAKK,KAA/C,EAAsDM,SAAtD;AACH,iBAH4B;AAI7B,6BAAa,oBAAW;AACpB,yBAAKC,IAAL,CAAU,cAAV,EAA0B,YAAW;AACjC,6BAAKP,KAAL,CAAWG,eAAX;AACH,qBAFD;AAGH;AAR4B,aAA1B,CAAP;AAUH,SAlHsC;;AAoHvC;AACAK,mCAA2B,qCAAW;AAClC7C,mBAAOI,SAAP,CAAiByC,yBAAjB,CAA2C7B,IAA3C,CAAgD,IAAhD;AACA;AACA;AACA,iBAAK0B,QAAL,CAAc,KAAKI,UAAnB,EAA+B,aAA/B,EAA8C,UAAST,KAAT,EAAgBU,QAAhB,EAA0BC,QAA1B,EAAoC;AAC9E,oBAAI,CAACX,MAAMY,GAAN,CAAU,SAAV,CAAD,IAAyB,CAAC,KAAKH,UAAL,CAAgBI,OAAhB,CAAwBC,aAAxB,EAA9B,EAAuE;AACnE,yBAAKC,cAAL,CAAoBf,KAApB;AACH;AACJ,aAJD;AAKH,SA9HsC;;AAgIvC;AACA;AACAgB,yBAAiB,yBAASC,MAAT,EAAiB;AAC9BA,qBAASA,UAAU,KAAKC,GAAxB;AACA;AACA;AACA;AACA,gBAAInC,QAAQ,IAAZ;AACApB,mBAAOI,SAAP,CAAiBiD,eAAjB,CAAiCrC,IAAjC,CAAsCI,KAAtC,EAA6CkC,MAA7C;;AAEA;AACA,gBAAI,CAAC,KAAKE,8BAAV,EAA0C;AACtC,qBAAKA,8BAAL,GAAsC5C,EAAE6C,QAAF,CAAW,SAASC,aAAT,GAAyB;AACtE;AACA,wBAAItC,MAAMmC,GAAN,CAAUI,EAAV,CAAa,UAAb,CAAJ,EAA8B;AAC1BvC,8BAAMT,WAAN,CAAkBW,GAAlB,CAAsB,gBAAtB,EAAwCW,EAAE,IAAF,EAAQ2B,SAAR,EAAxC;AACH;AACJ,iBALqC,EAKnC,EALmC,CAAtC;AAMH;;AAEDxC,kBACKyC,gBADL,CACsBP,MADtB,EAEKQ,GAFL,CAES,QAFT,EAEmB,KAAKN,8BAFxB,EAGKnC,EAHL,CAGQ,QAHR,EAGkB,KAAKmC,8BAHvB;AAIA,mBAAOpC,KAAP;AACH,SAzJsC;;AA2JvC;AACA2C,yBAAiB,2BAAW;AACxB,gBAAI,CAAC,KAAK1B,KAAV,EAAiB;AACb,uBAAOJ,GAAP;AACH;AACD,gBAAI+B,aAAahE,OAAOI,SAAP,CAAiB2D,eAAjB,CAAiC/C,IAAjC,CAAsC,IAAtC,CAAjB;AACAgD,uBAAWC,IAAX,CAAgB,SAAhB,EAA2BC,SAA3B,CAAqCF,WAAWC,IAAX,CAAgB,aAAhB,CAArC;AACA,iBAAKE,mBAAL,CAAyBH,UAAzB;AACA,mBAAOA,UAAP;AACH,SApKsC;;AAsKvC;AACAG,6BAAqB,6BAASC,QAAT,EAAmB;AACpCA,uBAAWA,YAAY,KAAKb,GAA5B;AACA,mBAAOtB,EAAE,KAAKoC,SAAL,CAAeC,QAAf,CAAwB,EAAxB,EAA4B,IAA5B,CAAF,EAAqCJ,SAArC,CAA+CE,SAASH,IAAT,CAAc,WAAd,CAA/C,CAAP;AACH,SA1KsC;;AA4KvC;AACAM,qBAAa,qBAASjB,MAAT,EAAiB;AAC1B,gBAAIlC,QAAQ,IAAZ;AACA;AACApB,mBAAOI,SAAP,CAAiBmE,WAAjB,CAA6BvD,IAA7B,CAAkCI,KAAlC,EAAyCkC,MAAzC;AACA,gBAAIlC,MAAMT,WAAN,CAAkBsC,GAAlB,CAAsB,iBAAtB,CAAJ,EAA8C;AAC1C7B,sBAAMoD,UAAN,CAAiBC,MAAjB,CAAwB,IAAxB;AACH;AACD;AACArD,kBAAMsB,QAAN,CAAetB,MAAMoD,UAArB,EAAiC,wDAAjC,EAA2F,sBAAc;AACrGpD,sBAAMT,WAAN,CAAkBW,GAAlB,CAAsB,iBAAtB,EAAyCkD,WAAWE,MAApD;AACH,aAFD;AAGH,SAxLsC;;AA0LvC;AACAC,2BAAmB,2BAASrB,MAAT,EAAiB;AAChC,gBAAIlC,QAAQ,IAAZ;AACA;AACApB,mBAAOI,SAAP,CAAiBuE,iBAAjB,CAAmC3D,IAAnC,CAAwCI,KAAxC,EAA+CkC,MAA/C;AACA,gBAAIlC,MAAMT,WAAN,CAAkBsC,GAAlB,CAAsB,uBAAtB,CAAJ,EAAoD;AAChD7B,sBAAMwD,gBAAN,CAAuBH,MAAvB,CAA8B,IAA9B;AACH;AACD;AACArD,kBAAMsB,QAAN,CACItB,MAAMwD,gBADV,EAEI,wDAFJ,EAGI,4BAAoB;AAChBxD,sBAAMT,WAAN,CAAkBW,GAAlB,CAAsB,uBAAtB,EAA+CsD,iBAAiBF,MAAhE;AACH,aALL;AAOH,SA1MsC;;AA4MvC;AACAG,wBAAgB,wBAASb,UAAT,EAAqB;AACjChE,mBAAOI,SAAP,CAAiByE,cAAjB,CAAgC7D,IAAhC,CAAqC,IAArC,EAA2CgD,UAA3C;AACA,gBAAI5C,QAAQ,IAAZ;AACAR,cAAEkE,KAAF,CAAQ,YAAM;AACV,oBAAIC,MAAM3D,MAAMT,WAAN,CAAkBsC,GAAlB,CAAsB,gBAAtB,CAAV;AACA,oBAAI8B,GAAJ,EAAS;AACL3D,0BAAM4D,QAAN,CAAeD,GAAf,EAAoB,CAApB;AACH;AACJ,aALD,EAKG,EALH;AAMA;;AAEA,mBAAO,IAAP;AACH,SAzNsC;;AA2NvC;AACA;AACAE,sBAAc,sBAASb,QAAT,EAAmB;AAC7BpE,mBAAOI,SAAP,CAAiB6E,YAAjB,CAA8BjE,IAA9B,CAAmC,IAAnC,EAAyCoD,QAAzC;AACA,gBAAIhD,QAAQ,IAAZ;AACA,gBAAIA,MAAMF,gBAAV,EAA4B;AACxBE,sBAAM8D,sBAAN,CAA6B9D,MAAMF,gBAAnC;AACH;AACD,mBAAO,IAAP;AACH,SApOsC;;AAsOvC;AACAiE,qBAAa,qBAAS9C,KAAT,EAAgBS,UAAhB,EAA4BsC,OAA5B,EAAqC;AAC9C,gBAAIC,OAAOrF,OAAOI,SAAP,CAAiB+E,WAAjB,CAA6BnE,IAA7B,CAAkC,IAAlC,EAAwCqB,KAAxC,EAA+CS,UAA/C,EAA2DsC,OAA3D,CAAX;AACA,gBAAI,CAACC,IAAL,EAAW;AACP,uBAAOA,IAAP;AACH;AACD,gBAAI,KAAKpE,UAAL,CAAgBqE,MAApB,EAA4B;AACxB,uBAAO,KAAKC,uBAAL,EAAP;AACH;AACD,mBAAOF,IAAP;AACH,SAhPsC;;AAkPvC;AACA;AACAG,iCAAyB,iCAASH,IAAT,EAAe;AACpC,gBAAIjE,QAAQ,IAAZ;AACApB,mBAAOI,SAAP,CAAiBoF,uBAAjB,CAAyCxE,IAAzC,CAA8CI,KAA9C,EAAqDiE,IAArD;AACA;AACA,mBAAOjE,MAAMsB,QAAN,CAAe2C,IAAf,EAAqB;AACxB,sCAAsB,2BAASI,CAAT,EAAYC,SAAZ,EAAuB;AACzC,yBAAKC,qBAAL,CAA2BD,SAA3B;AACH,iBAHuB;AAIxB,uCAAuB,4BAASD,CAAT,EAAYC,SAAZ,EAAuB;AAC1C,yBAAKH,uBAAL,CAA6BG,SAA7B;AACH;AANuB,aAArB,CAAP;AAQH,SAhQsC;;AAkQvC;AACAE,2BAAmB,2BAASP,IAAT,EAAe;AAC9B,iBAAKpD,CAAL,CAAO,kCAAP,EAA2C4D,WAA3C,CAAuD,iBAAvD;AACA,gBAAIR,IAAJ,EAAU;AACNA,qBAAK9B,GAAL,CAASuC,QAAT,CAAkB,iBAAlB;AACA,qBAAK5E,gBAAL,GAAwBmE,KAAKhD,KAAL,CAAWxB,EAAnC;AACH,aAHD,MAGO;AACH,qBAAKK,gBAAL,GAAwB,IAAxB;AACH;AACJ,SA3QsC;;AA6QvC;AACAgE,gCAAwB,gCAASrE,EAAT,EAAa;AACjC,gBAAIwE,OAAO,KAAKU,eAAL,CAAqBlF,EAArB,KAA4B,IAAvC;AACA,iBAAK+E,iBAAL,CAAuBP,IAAvB;AACH,SAjRsC;;AAmRvC;AACAM,+BAAuB,+BAASD,SAAT,EAAoB;AACvC,iBAAKzE,UAAL,CAAgB+E,IAAhB,CAAqBN,SAArB;AACA;AACA,iBAAKO,SAAL,GACKC,GADL,CACS,KAAKC,KAAL,EADT,EAEKC,IAFL;AAGAV,sBAAUW,UAAV,GAAuB,KAAKhE,KAAL,CAAWY,GAAX,CAAe,MAAf,CAAvB;AACAyC,sBACKY,cADL,GAEKhE,MAFL,GAGKiB,GAHL,CAGSgD,QAHT,CAGkB,KAAKhD,GAHvB;AAIH,SA/RsC;;AAiSvC;AACAgC,iCAAyB,iCAASG,SAAT,EAAoB;AACzC,iBAAKzE,UAAL,CAAgBuF,GAAhB;AACA;AACA,iBAAKP,SAAL,GACKC,GADL,CACS,KAAKC,KAAL,EADT,EAEKM,IAFL;AAGH,SAxSsC;;AA0SvC;AACA;AACAC,gBAAQ9F,EAAEtB,MAAF,CAASsB,EAAE+F,KAAF,CAAQ3G,OAAOI,SAAP,CAAiBsG,MAAzB,CAAT,EAA2C;AAC/C;AACA,oCAAwB,2BAASE,EAAT,EAAa;AACjClF,uBAAOmF,MAAP,CAAcJ,IAAd,CAAmBG,EAAnB;AACH,aAJ8C;AAK/C,oCAAwB,0BAASA,EAAT,EAAa;AACjC,oBAAIE,YAAY7E,EAAE,oBAAF,CAAhB;AACA6E,0BAAUC,MAAV,GAAmBnD,SAAnB,CAA6B,CAA7B;AACAkD,0BAAU7C,IAAV,CAAe,2BAAf,EAA4C+C,KAA5C;AACH;AAT8C,SAA3C,CA5S+B;;AAwTvC;AACAC,wBAAgB,wBAASC,MAAT,EAAiB;AAC7B,iBAAKxE,QAAL,CAAcwE,MAAd,EAAsB;AAClB;AACA;AACA;AACA;AACA,qCAAqB,yBAASC,IAAT,EAAe;AAChC,wBAAIC,cAAcD,KAAKE,QAAvB;AACA,wBAAIC,QAAQ,IAAZ;AACA,wBAAIC,mBAAmB;AACnBC,iCAAS,gCADU;AAEnBC,8BAAM,6BAFa;AAGnBC,sCAAc,iCAHK;AAInBC,+BAAO,oCAJY;AAKnBC,qCAAa;AACb;AACA;AAPmB,qBAAvB;AASAhH,sBAAEqD,IAAF,CAAOsD,gBAAP,EAAyB,UAACM,KAAD,EAAQC,GAAR,EAAgB;AACrC;AACAR,gCAAQ1G,EAAEmH,MAAF,CAASX,YAAYY,KAAZ,CAAkBH,KAAlB,CAAT,EAAmC,CAAnC,CAAR;AACA,+BAAOP,KAAP;AACH,qBAJD;AAKA;AACA,yBAAKpC,sBAAL,CAA4BoC,qBAAmBA,KAAnB,GAA6B,IAAzD;AACH,iBAxBiB;AAyBlB;AACA,qCAAqB,yBAASjC,IAAT,EAAe;AAChC,yBAAKH,sBAAL;AACH;AA5BiB,aAAtB;AA8BH,SAxVsC;;AA0VvC;AACA;AACA+C,6BAAqB,6BAASC,UAAT,EAAqB;AACtC,gBAAI,CAACA,UAAL,EAAiB;AACb,uBAAO,IAAP;AACH;AACD;AACA,iBAAKxF,QAAL,CAAcwF,UAAd,EAA0B,YAA1B,EAAwC,KAAKC,gBAA7C;AACA,iBAAKzF,QAAL,CAAcwF,UAAd,EAA0B,aAA1B,EAAyC,KAAKE,gBAA9C;;AAEA;AACA,iBAAK/G,EAAL,CAAQ,2BAAR,EAAqC,YAAW;AAC5C,oBAAI6G,cAAcA,WAAWG,WAAX,EAAlB,EAA4C;AACxC,yBAAKF,gBAAL;AACH;AACJ,aAJD;AAKA,mBAAO,IAAP;AACH,SA3WsC;;AA6WvC;AACAG,uBAAe,uBAAS1B,EAAT,EAAa;AACxB,gBAAI2B,UAAU,CAAC3H,EAAE4H,WAAF,CAAc5B,EAAd,CAAD,GAAqB3E,EAAE2E,GAAG6B,aAAL,CAArB,GAA2C,KAAKC,SAAL,GAAiBC,QAAjB,CAA0B,oBAA1B,CAAzD;AACAJ,sBAAUA,QAAQK,GAAR,CAAY,gBAAZ,CAAV;AACAL,oBAAQM,OAAR,CAAgB,KAAKC,OAArB,EAA8B,YAAW;AACrC7G,kBAAE,IAAF,EAAQ8G,MAAR;AACH,aAFD;AAGA,mBAAO,IAAP;AACH,SArXsC;;AAuXvC;;AAEAZ,0BAAkB,4BAAW;AACzB,gBAAIa,OAAO,KAAK/G,CAAL,CAAO,gBAAP,CAAX;AACA,gBAAI+G,KAAKrF,EAAL,CAAQ,SAAR,CAAJ,EAAwB;AACpBqF,qBAAKC,SAAL,CAAe,KAAKH,OAApB;AACH;AACJ,SA9XsC;;AAgYvC;;AAEAV,0BAAkB,4BAAW;AACzB,gBAAIY,OAAO,KAAK/G,CAAL,CAAO,gBAAP,CAAX;AACA,gBAAI,CAAC+G,KAAKrF,EAAL,CAAQ,SAAR,CAAL,EAAyB;AACrBqF,qBAAKE,OAAL,CAAa,KAAKJ,OAAlB;AACH;AACJ,SAvYsC;;AAyYvC;AACA;AACA;AACAK,sBAAc,wBAAW;AACrB,gBAAIC,OAAO,IAAX;AACA,gBAAIC,QAAQ,4BAAG,oCAAH,CAAR,CAAJ,EAAuD;AACnD;AACA,uBAAOD,KAAK/G,KAAL,CAAWiH,QAAX,CACFC,gBADE,CACe,EAAEC,SAAS,KAAX,EAAkBC,SAAS,EAA3B,EAA+BC,QAAQ,EAAvC,EADf,EAC4D,EAAEF,SAAS,IAAX,EAD5D,EAEFG,IAFE,CAEG,YAAM;AACR;AACA,wBAAI,CAACP,KAAK/G,KAAL,CAAWiH,QAAX,CAAoBnG,aAAzB,EAAwC;AACpCiG,6BAAKQ,WAAL;AACH;AACJ,iBAPE,CAAP;AAQH;AACD,mBAAOC,OAAO3H,IAAP,EAAP;AACH,SA1ZsC;;AA4ZvC;AACA4H,sBAAc,wBAAW;AACrB,gBAAIV,OAAO,IAAX;AACA,gBAAIC,QAAQ,4BAAG,oCAAH,CAAR,CAAJ,EAAuD;AACnD,uBAAOD,KAAK/G,KAAL,CAAWiH,QAAX,CAAoBC,gBAApB;AACH;AACA,kBAAEC,SAAS,KAAX,EAAkBC,SAAS,EAA3B,EAA+BC,QAAQ,EAAvC,EAFG;AAGH;AACA,kBAAED,SAAS,IAAX,EAAiBD,SAAS,IAA1B,EAJG,CAAP;AAMH;AACD,mBAAOK,OAAO3H,IAAP,EAAP;AACH,SAxasC;;AA0avC;AACAvC,kBAAU,oBAAW;AACjB,4CAA6B,KAAK0C,KAAL,GAAa,KAAKA,KAAL,CAAWY,GAAX,CAAe,MAAf,CAAb,GAAsC,EAAnE;AACH;AA7asC,KADtB,CAAzB;;AAkbA;AACA/C,uBAAmBE,SAAnB,CAA6BiE,SAA7B,GAA0C,YAAM;AAC5C,YAAI0F,mBAAmB,kBAASC,YAAT,CACnB,CACI,0CADJ,EAEI,4BAAG,8BAAH,CAFJ,EAGI,IAHJ,EAII,4BAAG,kFAAH,CAJJ,EAKI,GALJ,EAMI,QANJ,CADmB,EASnB,SATmB,CAAvB;AAWA,eAAOpJ,EAAEtB,MAAF,CAASsB,EAAE+F,KAAF,CAAQ3G,OAAOI,SAAP,CAAiBiE,SAAzB,CAAT,EAA8C;AACjDC,sBAAUyF;AADuC,SAA9C,CAAP;AAGH,KAfwC,EAAzC;;AAiBA;sBACe;AACX7J,4BAAoBA;AADT,K","file":"../../../scripts/mvc/history/history-view-edit-current.js","sourcesContent":["import HISTORY_MODEL from \"mvc/history/history-model\";\nimport HISTORY_VIEW_EDIT from \"mvc/history/history-view-edit\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n// ============================================================================\n/** session storage for history panel preferences (and to maintain state)\n */\nvar HistoryViewPrefs = BASE_MVC.SessionStorageModel.extend(\n    /** @lends HistoryViewPrefs.prototype */ {\n        defaults: {\n            /** should the tags editor be shown or hidden initially? */\n            tagsEditorShown: false,\n            /** should the annotation editor be shown or hidden initially? */\n            annotationEditorShown: false,\n            ///** what is the currently focused content (dataset or collection) in the current history?\n            // *      (the history panel will highlight and scroll to the focused content view)\n            // */\n            //focusedContentId : null\n            /** Current scroll position */\n            scrollPosition: 0\n        },\n        toString: function() {\n            return `HistoryViewPrefs(${JSON.stringify(this.toJSON())})`;\n        }\n    }\n);\n\n/** key string to store panel prefs (made accessible on class so you can access sessionStorage directly) */\nHistoryViewPrefs.storageKey = function storageKey() {\n    return \"history-panel\";\n};\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HISTORY_VIEW_EDIT.HistoryViewEdit;\n// used in root/index.mako\n/** @class View/Controller for the user's current history model as used in the history\n *      panel (current right hand panel) of the analysis page.\n *\n *  The only history panel that:\n *      will poll for updates.\n *      displays datasets in reverse hid order.\n */\nvar CurrentHistoryView = _super.extend(\n    /** @lends CurrentHistoryView.prototype */ {\n        className: `${_super.prototype.className} current-history-panel`,\n\n        /** override to use drilldown (and not foldout) for how collections are displayed */\n        HDCAViewClass: _super.prototype.HDCAViewClass.extend({\n            foldoutStyle: \"drilldown\"\n        }),\n\n        emptyMsg: [\n            _l(\"This history is empty\"),\n            \". \",\n            _l(\"You can \"),\n            '<a class=\"uploader-link\" href=\"javascript:void(0)\">',\n            _l(\"load your own data\"),\n            \"</a>\",\n            _l(\" or \"),\n            '<a class=\"get-data-link\" href=\"javascript:void(0)\">',\n            _l(\"get data from an external source\"),\n            \"</a>\"\n        ].join(\"\"),\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events */\n        initialize: function(attributes) {\n            attributes = attributes || {};\n\n            // ---- persistent preferences\n            /** maintain state / preferences over page loads */\n            this.preferences = new HistoryViewPrefs(\n                _.extend(\n                    {\n                        id: HistoryViewPrefs.storageKey()\n                    },\n                    _.pick(attributes, _.keys(HistoryViewPrefs.prototype.defaults))\n                )\n            );\n\n            _super.prototype.initialize.call(this, attributes);\n\n            /** sub-views that will overlay this panel (collections) */\n            this.panelStack = [];\n\n            /** id of currently focused content */\n            this.currentContentId = attributes.currentContentId || null;\n            //NOTE: purposely not sent to localstorage since panel recreation roughly lines up with a reset of this value\n        },\n\n        /** Override to cache the current scroll position with a listener */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n\n            var panel = this;\n            // reset scroll position when there's a new history\n            this.on(\"new-model\", () => {\n                panel.preferences.set(\"scrollPosition\", 0);\n            });\n        },\n\n        // ------------------------------------------------------------------------ loading history/item models\n        // TODO: next three more appropriate moved to the app level\n        /** (re-)loads the user's current history & contents w/ details */\n        loadCurrentHistory: function() {\n            return this.loadHistory(null, {\n                url: `${Galaxy.root}history/current_history_json`\n            });\n        },\n\n        /** loads a history & contents w/ details and makes them the current history */\n        switchToHistory: function(historyId, attributes) {\n            if (Galaxy.user.isAnonymous()) {\n                this.trigger(\"error\", _l(\"You must be logged in to switch histories\"), _l(\"Anonymous user\"));\n                return $.when();\n            }\n            return this.loadHistory(historyId, {\n                url: `${Galaxy.root}history/set_as_current?id=${historyId}`\n            });\n        },\n\n        /** creates a new history on the server and sets it as the user's current history */\n        createNewHistory: function(attributes) {\n            if (Galaxy.user.isAnonymous()) {\n                this.trigger(\"error\", _l(\"You must be logged in to create histories\"), _l(\"Anonymous user\"));\n                return $.when();\n            }\n            return this.loadHistory(null, {\n                url: `${Galaxy.root}history/create_new_current`\n            });\n        },\n\n        /** release/free/shutdown old models and set up panel for new models */\n        setModel: function(model, attributes, render) {\n            _super.prototype.setModel.call(this, model, attributes, render);\n            if (this.model && this.model.id) {\n                this.log(\"checking for updates\");\n                this.model.checkForUpdates();\n            }\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ history/content event listening\n        /** listening for history events */\n        _setUpModelListeners: function() {\n            _super.prototype._setUpModelListeners.call(this);\n            // re-broadcast any model change events so that listeners don't have to re-bind to each history\n            return this.listenTo(this.model, {\n                \"change:nice_size change:size\": function() {\n                    this.trigger(\"history-size-change\", this, this.model, arguments);\n                },\n                \"change:id\": function() {\n                    this.once(\"loading-done\", function() {\n                        this.model.checkForUpdates();\n                    });\n                }\n            });\n        },\n\n        /** listening for collection events */\n        _setUpCollectionListeners: function() {\n            _super.prototype._setUpCollectionListeners.call(this);\n            // if a hidden item is created (gen. by a workflow), moves thru the updater to the ready state,\n            //  then: remove it from the collection if the panel is set to NOT show hidden datasets\n            this.listenTo(this.collection, \"state:ready\", function(model, newState, oldState) {\n                if (!model.get(\"visible\") && !this.collection.storage.includeHidden()) {\n                    this.removeItemView(model);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ panel rendering\n        /** override to add a handler to capture the scroll position when the parent scrolls */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            // console.log( '_setUpBehaviors', this.$scrollContainer( $where ).get(0), this.$list( $where ) );\n            // we need to call this in _setUpBehaviors which is called after render since the $el\n            // may not be attached to $el.parent and $scrollContainer() may not work\n            var panel = this;\n            _super.prototype._setUpBehaviors.call(panel, $where);\n\n            // cache the handler to remove and re-add so we don't pile up the handlers\n            if (!this._debouncedScrollCaptureHandler) {\n                this._debouncedScrollCaptureHandler = _.debounce(function scrollCapture() {\n                    // cache the scroll position (only if visible)\n                    if (panel.$el.is(\":visible\")) {\n                        panel.preferences.set(\"scrollPosition\", $(this).scrollTop());\n                    }\n                }, 40);\n            }\n\n            panel\n                .$scrollContainer($where)\n                .off(\"scroll\", this._debouncedScrollCaptureHandler)\n                .on(\"scroll\", this._debouncedScrollCaptureHandler);\n            return panel;\n        },\n\n        /** In this override, handle null models and move the search input to the top */\n        _buildNewRender: function() {\n            if (!this.model) {\n                return $();\n            }\n            var $newRender = _super.prototype._buildNewRender.call(this);\n            $newRender.find(\".search\").prependTo($newRender.find(\"> .controls\"));\n            this._renderQuotaMessage($newRender);\n            return $newRender;\n        },\n\n        /** render the message displayed when a user is over quota and can't run jobs */\n        _renderQuotaMessage: function($whereTo) {\n            $whereTo = $whereTo || this.$el;\n            return $(this.templates.quotaMsg({}, this)).prependTo($whereTo.find(\".messages\"));\n        },\n\n        /** In this override, get and set current panel preferences when editor is used */\n        _renderTags: function($where) {\n            var panel = this;\n            // render tags and show/hide based on preferences\n            _super.prototype._renderTags.call(panel, $where);\n            if (panel.preferences.get(\"tagsEditorShown\")) {\n                panel.tagsEditor.toggle(true);\n            }\n            // store preference when shown or hidden\n            panel.listenTo(panel.tagsEditor, \"hiddenUntilActivated:shown hiddenUntilActivated:hidden\", tagsEditor => {\n                panel.preferences.set(\"tagsEditorShown\", tagsEditor.hidden);\n            });\n        },\n\n        /** In this override, get and set current panel preferences when editor is used */\n        _renderAnnotation: function($where) {\n            var panel = this;\n            // render annotation and show/hide based on preferences\n            _super.prototype._renderAnnotation.call(panel, $where);\n            if (panel.preferences.get(\"annotationEditorShown\")) {\n                panel.annotationEditor.toggle(true);\n            }\n            // store preference when shown or hidden\n            panel.listenTo(\n                panel.annotationEditor,\n                \"hiddenUntilActivated:shown hiddenUntilActivated:hidden\",\n                annotationEditor => {\n                    panel.preferences.set(\"annotationEditorShown\", annotationEditor.hidden);\n                }\n            );\n        },\n\n        /** Override to scroll to cached position (in prefs) after swapping */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            var panel = this;\n            _.delay(() => {\n                var pos = panel.preferences.get(\"scrollPosition\");\n                if (pos) {\n                    panel.scrollTo(pos, 0);\n                }\n            }, 10);\n            //TODO: is this enough of a delay on larger histories?\n\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** Override to add the current-content highlight class to currentContentId's view */\n        _attachItems: function($whereTo) {\n            _super.prototype._attachItems.call(this, $whereTo);\n            var panel = this;\n            if (panel.currentContentId) {\n                panel._setCurrentContentById(panel.currentContentId);\n            }\n            return this;\n        },\n\n        /** Override to remove any drill down panels */\n        addItemView: function(model, collection, options) {\n            var view = _super.prototype.addItemView.call(this, model, collection, options);\n            if (!view) {\n                return view;\n            }\n            if (this.panelStack.length) {\n                return this._collapseDrilldownPanel();\n            }\n            return view;\n        },\n\n        // ------------------------------------------------------------------------ collection sub-views\n        /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            _super.prototype._setUpItemViewListeners.call(panel, view);\n            // use pub-sub to: handle drilldown expansion and collapse\n            return panel.listenTo(view, {\n                \"expanded:drilldown\": function(v, drilldown) {\n                    this._expandDrilldownPanel(drilldown);\n                },\n                \"collapsed:drilldown\": function(v, drilldown) {\n                    this._collapseDrilldownPanel(drilldown);\n                }\n            });\n        },\n\n        /** display 'current content': add a visible highlight and store the id of a content item */\n        setCurrentContent: function(view) {\n            this.$(\".history-content.current-content\").removeClass(\"current-content\");\n            if (view) {\n                view.$el.addClass(\"current-content\");\n                this.currentContentId = view.model.id;\n            } else {\n                this.currentContentId = null;\n            }\n        },\n\n        /** find the view with the id and then call setCurrentContent on it */\n        _setCurrentContentById: function(id) {\n            var view = this.viewFromModelId(id) || null;\n            this.setCurrentContent(view);\n        },\n\n        /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n        _expandDrilldownPanel: function(drilldown) {\n            this.panelStack.push(drilldown);\n            // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n            this.$controls()\n                .add(this.$list())\n                .hide();\n            drilldown.parentName = this.model.get(\"name\");\n            drilldown\n                .delegateEvents()\n                .render()\n                .$el.appendTo(this.$el);\n        },\n\n        /** Handle drilldown close by freeing the panel and re-rendering this panel */\n        _collapseDrilldownPanel: function(drilldown) {\n            this.panelStack.pop();\n            //TODO: MEM: free the panel\n            this.$controls()\n                .add(this.$list())\n                .show();\n        },\n\n        // ........................................................................ panel events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            // the two links in the empty message\n            \"click .uploader-link\": function(ev) {\n                Galaxy.upload.show(ev);\n            },\n            \"click .get-data-link\": function(ev) {\n                var $toolMenu = $(\".toolMenuContainer\");\n                $toolMenu.parent().scrollTop(0);\n                $toolMenu.find('span:contains(\"Get Data\")').click();\n            }\n        }),\n\n        // ........................................................................ external objects/MVC\n        listenToGalaxy: function(galaxy) {\n            this.listenTo(galaxy, {\n                // when the galaxy_main iframe is loaded with a new page,\n                // compare the url to the following list and if there's a match\n                // pull the id from url and indicate in the history view that\n                // the dataset with that id is the 'current'ly active dataset\n                \"center-frame:load\": function(data) {\n                    var pathToMatch = data.fullpath;\n                    var hdaId = null;\n                    var useToURLRegexMap = {\n                        display: /datasets\\/([a-f0-9]+)\\/display/,\n                        edit: /datasets\\/([a-f0-9]+)\\/edit/,\n                        report_error: /dataset\\/errors\\?id=([a-f0-9]+)/,\n                        rerun: /tool_runner\\/rerun\\?id=([a-f0-9]+)/,\n                        show_params: /datasets\\/([a-f0-9]+)\\/show_params/\n                        // no great way to do this here? (leave it in the dataset event handlers above?)\n                        // 'visualization' : 'visualization',\n                    };\n                    _.find(useToURLRegexMap, (regex, use) => {\n                        // grab the more specific match result (1), save, and use it as the find flag\n                        hdaId = _.result(pathToMatch.match(regex), 1);\n                        return hdaId;\n                    });\n                    // need to type mangle to go from web route to history contents\n                    this._setCurrentContentById(hdaId ? `dataset-${hdaId}` : null);\n                },\n                // when the center panel is given a new view, clear the current indicator\n                \"center-panel:load\": function(view) {\n                    this._setCurrentContentById();\n                }\n            });\n        },\n\n        //TODO: remove quota meter from panel and remove this\n        /** add listeners to an external quota meter (mvc/user/user-quotameter.js) */\n        connectToQuotaMeter: function(quotaMeter) {\n            if (!quotaMeter) {\n                return this;\n            }\n            // show/hide the 'over quota message' in the history when the meter tells it to\n            this.listenTo(quotaMeter, \"quota:over\", this.showQuotaMessage);\n            this.listenTo(quotaMeter, \"quota:under\", this.hideQuotaMessage);\n\n            // having to add this to handle re-render of hview while overquota (the above do not fire)\n            this.on(\"rendered rendered:initial\", function() {\n                if (quotaMeter && quotaMeter.isOverQuota()) {\n                    this.showQuotaMessage();\n                }\n            });\n            return this;\n        },\n\n        /** Override to preserve the quota message */\n        clearMessages: function(ev) {\n            var $target = !_.isUndefined(ev) ? $(ev.currentTarget) : this.$messages().children('[class$=\"message\"]');\n            $target = $target.not(\".quota-message\");\n            $target.fadeOut(this.fxSpeed, function() {\n                $(this).remove();\n            });\n            return this;\n        },\n\n        /** Show the over quota message (which happens to be in the history panel).\n         */\n        showQuotaMessage: function() {\n            var $msg = this.$(\".quota-message\");\n            if ($msg.is(\":hidden\")) {\n                $msg.slideDown(this.fxSpeed);\n            }\n        },\n\n        /** Hide the over quota message (which happens to be in the history panel).\n         */\n        hideQuotaMessage: function() {\n            var $msg = this.$(\".quota-message\");\n            if (!$msg.is(\":hidden\")) {\n                $msg.slideUp(this.fxSpeed);\n            }\n        },\n\n        // ........................................................................ options menu\n        //TODO: remove to batch\n        /** unhide any hidden datasets */\n        unhideHidden: function() {\n            var self = this;\n            if (confirm(_l(\"Really unhide all hidden datasets?\"))) {\n                // get all hidden, regardless of deleted/purged\n                return self.model.contents\n                    ._filterAndUpdate({ visible: false, deleted: \"\", purged: \"\" }, { visible: true })\n                    .done(() => {\n                        // TODO: would be better to render these as they're unhidden instead of all at once\n                        if (!self.model.contents.includeHidden) {\n                            self.renderItems();\n                        }\n                    });\n            }\n            return jQuery.when();\n        },\n\n        /** delete any hidden datasets */\n        deleteHidden: function() {\n            var self = this;\n            if (confirm(_l(\"Really delete all hidden datasets?\"))) {\n                return self.model.contents._filterAndUpdate(\n                    // get all hidden, regardless of deleted/purged\n                    { visible: false, deleted: \"\", purged: \"\" },\n                    // both delete *and* unhide them\n                    { deleted: true, visible: true }\n                );\n            }\n            return jQuery.when();\n        },\n\n        /** Return a string rep of the history */\n        toString: function() {\n            return `CurrentHistoryView(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nCurrentHistoryView.prototype.templates = (() => {\n    var quotaMsgTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"quota-message errormessage\">',\n            _l(\"You are over your disk quota\"),\n            \". \",\n            _l(\"Tool execution is on hold until your disk usage drops below your allocated quota\"),\n            \".\",\n            \"</div>\"\n        ],\n        \"history\"\n    );\n    return _.extend(_.clone(_super.prototype.templates), {\n        quotaMsg: quotaMsgTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    CurrentHistoryView: CurrentHistoryView\n};\n"]}