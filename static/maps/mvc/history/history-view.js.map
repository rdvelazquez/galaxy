{"version":3,"sources":["mvc/history/history-view.js"],"names":["_super","ModelListPanel","HistoryView","extend","_logNamespace","HDAViewClass","HDAListItemView","HDCAViewClass","HDCAListItemView","collectionClass","HistoryContents","modelCollectionKey","tagName","className","prototype","emptyMsg","noneFoundMsg","searchPlaceholder","initialize","attributes","call","linkTarget","_createDefaultCollection","history","model","freeModel","stopPolling","_setUpListeners","on","error","xhr","options","msg","details","errorHandler","view","_renderSelectButton","scrollTo","loadHistory","historyId","contentsOptions","_","silent","info","setModel","History","id","trigger","fetchWithContents","always","render","refreshContents","refresh","$","when","_setUpCollectionListeners","listenTo","collection","_toggleContentsLoadingIndicator","$emptyMessage","hide","_showLoadingIndicator","speed","callback","$indicator","$el","html","text","slideDown","isUndefined","fxSpeed","_hideLoadingIndicator","slideUp","remove","_buildNewRender","$newRender","$where","multiselectActions","length","views","hideSelectors","find","$existing","title","classes","faIcon","prependTo","_renderEmptyMessage","$whereTo","$emptyMsg","empty","get","active","append","show","searchFor","contents","haveSearchDetails","$scrollContainer","$list","renderItems","models","_filterCollection","_renderPagination","_renderSomeItems","toggle","$paginationControls","shouldPaginate","templates","pagination","current","currentPage","last","getLastPage","tooltip","map","_createItemView","m","push","_renderItemView$el","_filterItem","includeHidden","hidden","includeDeleted","isDeletedOrPurged","_getItemViewClass","contentType","TypeError","_getItemViewOptions","expanded","storage","isExpanded","hasUser","ownedByCurrUser","_setUpItemViewListeners","panel","v","addExpanded","collapsed","removeExpanded","collapseAll","clearExpanded","getSelectedModels","events","clone","_clickPrevPage","ev","fetchPrevPage","_clickNextPage","fetchNextPage","_changePageSelect","page","currentTarget","val","fetchPage","toggleShowDeleted","undefined","setIncludeDeleted","fetchCurrentPage","renderAll","toggleShowHidden","store","setIncludeHidden","_firstSearch","inputSelector","log","searchItems","searchInput","progressivelyFetchDetails","progress","response","limit","offset","done","clearSearch","status","readyState","isString","message","errorModal","badGatewayErrorModal","ajaxErrorModal","clearMessages","$target","$messages","children","fadeOut","scrollToHid","hid","scrollToItem","first","viewsWhereModel","ordinalIndicator","number","numStr","charAt","toString","mainTemplate","controlsTemplate","wrapTemplate","paginationTemplate","el","controls"],"mappings":"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","file":"../../../scripts/mvc/history/history-view.js","sourcesContent":["import LIST_VIEW from \"mvc/list/list-view\";\nimport HISTORY_MODEL from \"mvc/history/history-model\";\nimport HISTORY_CONTENTS from \"mvc/history/history-contents\";\nimport HISTORY_PREFS from \"mvc/history/history-preferences\";\nimport HDA_LI from \"mvc/history/hda-li\";\nimport HDCA_LI from \"mvc/history/hdca-li\";\nimport USER from \"mvc/user/user-model\";\nimport ERROR_MODAL from \"mvc/ui/error-modal\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/search-input\";\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class  non-editable, read-only View/Controller for a history model.\n *  Allows:\n *      changing the loaded history\n *      displaying data, info, and download\n *      tracking history attrs: size, tags, annotations, name, etc.\n *  Does not allow:\n *      changing the name\n */\nvar _super = LIST_VIEW.ModelListPanel;\nvar HistoryView = _super.extend(\n    /** @lends HistoryView.prototype */ {\n        _logNamespace: \"history\",\n\n        /** class to use for constructing the HDA views */\n        HDAViewClass: HDA_LI.HDAListItemView,\n        /** class to use for constructing the HDCA views */\n        HDCAViewClass: HDCA_LI.HDCAListItemView,\n        /** class to used for constructing collection of sub-view models */\n        collectionClass: HISTORY_CONTENTS.HistoryContents,\n        /** key of attribute in model to assign to this.collection */\n        modelCollectionKey: \"contents\",\n\n        tagName: \"div\",\n        className: `${_super.prototype.className} history-panel`,\n\n        /** string to display when the collection is empty */\n        emptyMsg: _l(\"This history is empty\"),\n        /** displayed when no items match the search terms */\n        noneFoundMsg: _l(\"No matching datasets found\"),\n        /** string used for search placeholder */\n        searchPlaceholder: _l(\"search datasets\"),\n\n        // ......................................................................... SET UP\n        /** Set up the view, bind listeners.\n         *  @param {Object} attributes optional settings for the panel\n         */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n            // ---- instance vars\n            // control contents/behavior based on where (and in what context) the panel is being used\n            /** where should pages from links be displayed? (default to new tab/window) */\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n        },\n\n        /** create and return a collection for when none is initially passed */\n        _createDefaultCollection: function() {\n            // override\n            return new this.collectionClass([], {\n                history: this.model\n            });\n        },\n\n        /** In this override, clear the update timer on the model */\n        freeModel: function() {\n            _super.prototype.freeModel.call(this);\n            if (this.model) {\n                this.model.stopPolling();\n            }\n            return this;\n        },\n\n        /** create any event listeners for the panel\n         *  @fires: rendered:initial    on the first render\n         *  @fires: empty-history       when switching to a history with no contents or creating a new history\n         */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            this.on({\n                error: function(model, xhr, options, msg, details) {\n                    this.errorHandler(model, xhr, options, msg, details);\n                },\n                \"views:ready view:attached view:removed\": function(view) {\n                    this._renderSelectButton();\n                },\n                \"view:attached\": function(view) {\n                    this.scrollTo(0);\n                }\n            });\n            // this.on( 'all', function(){ console.debug( arguments ); });\n        },\n\n        // ------------------------------------------------------------------------ loading history/hda models\n        /** load the history with the given id then it's contents, sending ajax options to both */\n        loadHistory: function(historyId, options, contentsOptions) {\n            contentsOptions = _.extend(contentsOptions || { silent: true });\n            this.info(\"loadHistory:\", historyId, options, contentsOptions);\n            this.setModel(new HISTORY_MODEL.History({ id: historyId }));\n\n            contentsOptions.silent = true;\n            this.trigger(\"loading\");\n            return this.model.fetchWithContents(options, contentsOptions).always(() => {\n                this.render();\n                this.trigger(\"loading-done\");\n            });\n        },\n\n        /** convenience alias to the model. Updates the item list only (not the history) */\n        refreshContents: function(options) {\n            if (this.model) {\n                return this.model.refresh(options);\n            }\n            // may have callbacks - so return an empty promise\n            return $.when();\n        },\n\n        /** Override to reset web storage when the id changes (since it needs the id) */\n        _setUpCollectionListeners: function() {\n            _super.prototype._setUpCollectionListeners.call(this);\n            return this.listenTo(this.collection, {\n                // 'all' : function(){ console.log( this.collection + ':', arguments ); },\n                \"fetching-more\": function() {\n                    this._toggleContentsLoadingIndicator(true);\n                    this.$emptyMessage().hide();\n                },\n                \"fetching-more-done\": function() {\n                    this._toggleContentsLoadingIndicator(false);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ panel rendering\n        /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n        _showLoadingIndicator: function(msg, speed, callback) {\n            var $indicator = $('<div class=\"loading-indicator\"/>');\n            this.$el.html($indicator.text(msg).slideDown(!_.isUndefined(speed) ? speed : this.fxSpeed));\n        },\n\n        /** hide the loading indicator */\n        _hideLoadingIndicator: function(speed) {\n            // make speed a bit slower to compensate for slow rendering of up to 500 contents\n            this.$(\".loading-indicator\").slideUp(!_.isUndefined(speed) ? speed : this.fxSpeed + 200, function() {\n                $(this).remove();\n            });\n        },\n\n        /** In this override, add a btn to toggle the selectors */\n        _buildNewRender: function() {\n            var $newRender = _super.prototype._buildNewRender.call(this);\n            this._renderSelectButton($newRender);\n            return $newRender;\n        },\n\n        /** button for starting select mode */\n        _renderSelectButton: function($where) {\n            $where = $where || this.$el;\n            // do not render selector option if no actions\n            if (!this.multiselectActions().length) {\n                return null;\n            }\n            // do not render (and remove even) if nothing to select\n            if (!this.views.length) {\n                this.hideSelectors();\n                $where.find(\".controls .actions .show-selectors-btn\").remove();\n                return null;\n            }\n            // don't bother rendering if there's one already\n            var $existing = $where.find(\".controls .actions .show-selectors-btn\");\n            if ($existing.length) {\n                return $existing;\n            }\n\n            return faIconButton({\n                title: _l(\"Operations on multiple datasets\"),\n                classes: \"show-selectors-btn\",\n                faIcon: \"fa-check-square-o\"\n            }).prependTo($where.find(\".controls .actions\"));\n        },\n\n        /** override to avoid showing intial empty message using contents_active */\n        _renderEmptyMessage: function($whereTo) {\n            var $emptyMsg = this.$emptyMessage($whereTo);\n            var empty = this.model.get(\"contents_active\").active <= 0;\n            if (empty) {\n                return $emptyMsg\n                    .empty()\n                    .append(this.emptyMsg)\n                    .show();\n            } else if (this.searchFor && this.model.contents.haveSearchDetails() && !this.views.length) {\n                return $emptyMsg\n                    .empty()\n                    .append(this.noneFoundMsg)\n                    .show();\n            }\n            $emptyMsg.hide();\n            return $();\n        },\n\n        /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n        $scrollContainer: function($where) {\n            // override or set via attributes.$scrollContainer\n            return this.$list($where);\n        },\n\n        // ------------------------------------------------------------------------ subviews\n        _toggleContentsLoadingIndicator: function(show) {\n            if (!show) {\n                this.$list()\n                    .find(\".contents-loading-indicator\")\n                    .remove();\n            } else {\n                this.$list().html(\n                    '<div class=\"contents-loading-indicator\">' + '<span class=\"fa fa-2x fa-spinner fa-spin\"/></div>'\n                );\n            }\n        },\n\n        /** override to render pagination also */\n        renderItems: function($whereTo) {\n            // console.log( this + '.renderItems-----------------', new Date() );\n            $whereTo = $whereTo || this.$el;\n            var $list = this.$list($whereTo);\n\n            // TODO: bootstrap hack to remove orphaned tooltips\n            $(\".tooltip\").remove();\n\n            $list.empty();\n            this.views = [];\n\n            var models = this._filterCollection();\n            if (models.length) {\n                this._renderPagination($whereTo);\n                this.views = this._renderSomeItems(models, $list);\n            } else {\n                // TODO: consolidate with _renderPagination above by (???) passing in models/length?\n                $whereTo.find(\"> .controls .list-pagination\").empty();\n            }\n            this._renderEmptyMessage($whereTo).toggle(!models.length);\n\n            this.trigger(\"views:ready\", this.views);\n            return this.views;\n        },\n\n        /** render pagination controls if not searching and contents says we're paginating */\n        _renderPagination: function($whereTo) {\n            var $paginationControls = $whereTo.find(\"> .controls .list-pagination\");\n            if (this.searchFor || !this.model.contents.shouldPaginate()) return $paginationControls.empty();\n\n            $paginationControls.html(\n                this.templates.pagination(\n                    {\n                        // pagination is 1-based for the user\n                        current: this.model.contents.currentPage + 1,\n                        last: this.model.contents.getLastPage() + 1\n                    },\n                    this\n                )\n            );\n            $paginationControls.find(\"select.pages\").tooltip();\n            return $paginationControls;\n        },\n\n        /** render a subset of the entire collection (client-side pagination) */\n        _renderSomeItems: function(models, $list) {\n            var views = [];\n            $list.append(\n                models.map(m => {\n                    var view = this._createItemView(m);\n                    views.push(view);\n                    return this._renderItemView$el(view);\n                })\n            );\n            return views;\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** in this override, check if the contents would also display based on includeDeleted/hidden */\n        _filterItem: function(model) {\n            var contents = this.model.contents;\n            return (\n                (contents.includeHidden || !model.hidden()) &&\n                (contents.includeDeleted || !model.isDeletedOrPurged()) &&\n                _super.prototype._filterItem.call(this, model)\n            );\n        },\n\n        /** In this override, since history contents are mixed,\n         *      get the appropo view class based on history_content_type\n         */\n        _getItemViewClass: function(model) {\n            var contentType = model.get(\"history_content_type\");\n            switch (contentType) {\n                case \"dataset\":\n                    return this.HDAViewClass;\n                case \"dataset_collection\":\n                    return this.HDCAViewClass;\n            }\n            throw new TypeError(`Unknown history_content_type: ${contentType}`);\n        },\n\n        /** in this override, add a linktarget, and expand if id is in web storage */\n        _getItemViewOptions: function(model) {\n            var options = _super.prototype._getItemViewOptions.call(this, model);\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                expanded: this.model.contents.storage.isExpanded(model.id),\n                hasUser: this.model.ownedByCurrUser()\n            });\n        },\n\n        /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            _super.prototype._setUpItemViewListeners.call(panel, view);\n            //TODO: send from content view: this.model.collection.storage.addExpanded\n            // maintain a list of items whose bodies are expanded\n            return panel.listenTo(view, {\n                expanded: function(v) {\n                    panel.model.contents.storage.addExpanded(v.model);\n                },\n                collapsed: function(v) {\n                    panel.model.contents.storage.removeExpanded(v.model);\n                }\n            });\n        },\n\n        /** override to remove expandedIds from webstorage */\n        collapseAll: function() {\n            this.model.contents.storage.clearExpanded();\n            _super.prototype.collapseAll.call(this);\n        },\n\n        // ------------------------------------------------------------------------ selection\n        /** Override to correctly set the historyId of the new collection */\n        getSelectedModels: function() {\n            var collection = _super.prototype.getSelectedModels.call(this);\n            collection.historyId = this.collection.historyId;\n            return collection;\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .show-selectors-btn\": \"toggleSelectors\",\n            \"click > .controls .prev\": \"_clickPrevPage\",\n            \"click > .controls .next\": \"_clickNextPage\",\n            \"change > .controls .pages\": \"_changePageSelect\",\n            // allow (error) messages to be clicked away\n            \"click .messages [class$=message]\": \"clearMessages\"\n        }),\n\n        _clickPrevPage: function(ev) {\n            this.model.stopPolling();\n            this.model.contents.fetchPrevPage();\n        },\n\n        _clickNextPage: function(ev) {\n            this.model.stopPolling();\n            this.model.contents.fetchNextPage();\n        },\n\n        _changePageSelect: function(ev) {\n            this.model.stopPolling();\n            var page = $(ev.currentTarget).val();\n            this.model.contents.fetchPage(page);\n        },\n\n        /** Toggle and store the deleted visibility and re-render items\n         * @returns {Boolean} new setting\n         */\n        toggleShowDeleted: function(show, options) {\n            show = show !== undefined ? show : !this.model.contents.includeDeleted;\n            var contents = this.model.contents;\n            contents.setIncludeDeleted(show, options);\n            this.trigger(\"show-deleted\", show);\n\n            contents.fetchCurrentPage({ renderAll: true });\n            return show;\n        },\n\n        /** Toggle and store whether to render explicity hidden contents\n         * @returns {Boolean} new setting\n         */\n        toggleShowHidden: function(show, store, options) {\n            // console.log( 'toggleShowHidden', show, store );\n            show = show !== undefined ? show : !this.model.contents.includeHidden;\n            var contents = this.model.contents;\n            contents.setIncludeHidden(show, options);\n            this.trigger(\"show-hidden\", show);\n\n            contents.fetchCurrentPage({ renderAll: true });\n            return show;\n        },\n\n        /** On the first search, if there are no details - load them, then search */\n        _firstSearch: function(searchFor) {\n            var inputSelector = \"> .controls .search-input\";\n            this.log(\"onFirstSearch\", searchFor);\n\n            // if the contents already have enough details to search, search and return now\n            if (this.model.contents.haveSearchDetails()) {\n                this.searchItems(searchFor);\n                return;\n            }\n\n            // otherwise, load the details progressively here\n            this.$(inputSelector).searchInput(\"toggle-loading\");\n            // set this now so that only results will show during progress\n            this.searchFor = searchFor;\n            var xhr = this.model.contents\n                .progressivelyFetchDetails({ silent: true })\n                .progress((response, limit, offset) => {\n                    this.renderItems();\n                    this.trigger(\"search:loading-progress\", limit, offset);\n                })\n                .always(() => {\n                    this.$el.find(inputSelector).searchInput(\"toggle-loading\");\n                })\n                .done(() => {\n                    this.searchItems(searchFor, \"force\");\n                });\n        },\n\n        /** clear the search filters and show all views that are normally shown */\n        clearSearch: function(searchFor) {\n            if (!this.searchFor) return this;\n            //this.log( 'onSearchClear', this );\n            this.searchFor = \"\";\n            this.trigger(\"search:clear\", this);\n            this.$(\"> .controls .search-query\").val(\"\");\n            // NOTE: silent + render prevents collection update event with merge only\n            // - which causes an empty page due to event handler above\n            this.model.contents.fetchCurrentPage({ silent: true }).done(() => {\n                this.renderItems();\n            });\n            return this;\n        },\n\n        // ........................................................................ error handling\n        /** Event handler for errors (from the panel, the history, or the history's contents)\n         *  Alternately use two strings for model and xhr to use custom message and title (respectively)\n         *  @param {Model or View} model    the (Backbone) source of the error\n         *  @param {XMLHTTPRequest} xhr     any ajax obj. assoc. with the error\n         *  @param {Object} options         the options map commonly used with bbone ajax\n         */\n        errorHandler: function(model, xhr, options) {\n            //TODO: to mixin or base model\n            // interrupted ajax or no connection\n            if (xhr && xhr.status === 0 && xhr.readyState === 0) {\n                // return ERROR_MODAL.offlineErrorModal();\n                // fail silently\n                return;\n            }\n            // otherwise, leave something to report in the console\n            this.error(model, xhr, options);\n            // and feedback to a modal\n            // if sent two strings (and possibly details as 'options'), use those as message and title\n            if (_.isString(model) && _.isString(xhr)) {\n                var message = model;\n                var title = xhr;\n                return ERROR_MODAL.errorModal(message, title, options);\n            }\n            // bad gateway\n            // TODO: possibly to global handler\n            if (xhr && xhr.status === 502) {\n                return ERROR_MODAL.badGatewayErrorModal();\n            }\n            return ERROR_MODAL.ajaxErrorModal(model, xhr, options);\n        },\n\n        /** Remove all messages from the panel. */\n        clearMessages: function(ev) {\n            var $target = !_.isUndefined(ev) ? $(ev.currentTarget) : this.$messages().children('[class$=\"message\"]');\n            $target.fadeOut(this.fxSpeed, function() {\n                $(this).remove();\n            });\n            return this;\n        },\n\n        // ........................................................................ scrolling\n        /** Scrolls the panel to show the content sub-view with the given hid.\n         *  @param {Integer} hid    the hid of item to scroll into view\n         *  @returns {HistoryView} the panel\n         */\n        scrollToHid: function(hid) {\n            return this.scrollToItem(_.first(this.viewsWhereModel({ hid: hid })));\n        },\n\n        // ........................................................................ misc\n        /** utility for adding -st, -nd, -rd, -th to numbers */\n        ordinalIndicator: function(number) {\n            var numStr = `${number}`;\n            switch (numStr.charAt(numStr.length - 1)) {\n                case \"1\":\n                    return `${numStr}st`;\n                case \"2\":\n                    return `${numStr}nd`;\n                case \"3\":\n                    return `${numStr}rd`;\n                default:\n                    return `${numStr}th`;\n            }\n        },\n\n        /** Return a string rep of the history */\n        toString: function() {\n            return `HistoryView(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryView.prototype.templates = (() => {\n    var mainTemplate = () =>\n        `<div>\n            <div class=\"controls\"></div>\n            <ul class=\"list-items\"></ul>\n            <div class=\"empty-message infomessagesmall\"></div>',\n        </div>`;\n\n    var controlsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"controls\">',\n            '<div class=\"title\">',\n            '<div class=\"name\"><%- history.name %></div>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            '<div class=\"history-size\"><%- history.nice_size %></div>',\n\n            '<div class=\"actions\"></div>',\n\n            '<div class=\"messages\">',\n            \"<% if( history.deleted && history.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This history has been purged and deleted\"),\n            \"</div>\",\n            \"<% } else if( history.deleted ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This history has been deleted\"),\n            \"</div>\",\n            \"<% } else if( history.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This history has been purged\"),\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( history.message ){ %>\",\n            // should already be localized\n            '<div class=\"<%= history.message.level || \"info\" %>messagesmall\">',\n            \"<%= history.message.text %>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"</div>\",\n\n            // add tags and annotations\n            '<div class=\"tags-display\"></div>',\n            '<div class=\"annotation-display\"></div>',\n\n            '<div class=\"search\">',\n            '<div class=\"search-input\"></div>',\n            \"</div>\",\n\n            '<div class=\"list-actions\">',\n            '<div class=\"btn-group\">',\n            '<button class=\"select-all btn btn-default\"',\n            'data-mode=\"select\">',\n            _l(\"All\"),\n            \"</button>\",\n            '<button class=\"deselect-all btn btn-default\"',\n            'data-mode=\"select\">',\n            _l(\"None\"),\n            \"</button>\",\n            \"</div>\",\n            '<div class=\"list-action-menu btn-group\">',\n            \"</div>\",\n            \"</div>\",\n            '<div class=\"list-pagination form-inline\"></div>',\n            \"</div>\"\n        ],\n        \"history\"\n    );\n\n    var paginationTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<button class=\"prev\" <%- pages.current === 1 ? \"disabled\" : \"\" %>>previous</button>',\n            '<select class=\"pages form-control\" ',\n            'title=\"',\n            _l(\"Click to open and select a page. Begin typing a page number to select it\"),\n            '\">',\n            \"<% _.range( 1, pages.last + 1 ).forEach( function( i ){ %>\",\n            '<option value=\"<%- i - 1 %>\" <%- i === pages.current ? \"selected\" : \"\" %>>',\n            \"<%- view.ordinalIndicator( i ) %> of <%- pages.last %> pages\",\n            \"</option>\",\n            \"<% }); %>\",\n            \"</select>\",\n            '<button class=\"next\" <%- pages.current === pages.last ? \"disabled\" : \"\" %>>next</button>'\n        ],\n        \"pages\"\n    );\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        el: mainTemplate,\n        controls: controlsTemplate,\n        pagination: paginationTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HistoryView: HistoryView\n};\n"]}