{"version":3,"sources":["mvc/library/library-library-view.js"],"names":["LibraryView","Backbone","View","extend","el","model","options","events","initialize","_","id","fetchLibrary","Library","that","fetch","success","show_permissions","showPermissions","error","response","responseJSON","err_msg","onclick","Galaxy","libraries","library_router","back","$","remove","fetched_permissions","undefined","access_library_role_list","length","set","is_unrestricted","is_admin","user","isAdmin","template","templateLibraryPermissions","$el","html","library","self","get","root","done","prepareSelectBoxes","fail","tooltip","css","_serializeRoles","role_list","selected_roles","i","push","selected_access_library_roles","selected_add_item_roles","add_library_item_role_list","selected_manage_library_roles","manage_library_role_list","selected_modify_library_roles","modify_library_role_list","accessSelectObject","_createSelectOptions","addSelectObject","manageSelectObject","modifySelectObject","init_data","is_library_access","select_options","minimumInputLength","multiple","placeholder","container","find","ajax","url","dataType","quietMillis","data","term","page","q","page_limit","results","more","total","roles","formatResult","roleFormatResult","role","name","type","formatSelection","roleFormatSelection","initSelection","element","callback","val","split","each","item","initialData","dropdownCssClass","makeDatasetPrivate","post","removeDatasetRestrictions","_extractIds","roles_list","ids_list","savePermissions","event","access_ids","select2","add_ids","manage_ids","modify_ids","join"],"mappings":"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","file":"../../../scripts/mvc/library/library-library-view.js","sourcesContent":["import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_select from \"mvc/ui/ui-select\";\nvar LibraryView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    events: {\n        \"click .toolbtn_save_permissions\": \"savePermissions\"\n    },\n\n    initialize: function(options) {\n        this.options = _.extend(this.options, options);\n        if (this.options.id) {\n            this.fetchLibrary();\n        }\n    },\n\n    fetchLibrary: function(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new mod_library_model.Library({\n            id: this.options.id\n        });\n        var that = this;\n        this.model.fetch({\n            success: function() {\n                if (that.options.show_permissions) {\n                    that.showPermissions();\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`${response.responseJSON.err_msg} Click this to go back.`, \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    mod_toastr.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    showPermissions: function(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n\n        if (this.options.fetched_permissions !== undefined) {\n            if (this.options.fetched_permissions.access_library_role_list.length === 0) {\n                this.model.set({ is_unrestricted: true });\n            } else {\n                this.model.set({ is_unrestricted: false });\n            }\n        }\n        var is_admin = false;\n        if (Galaxy.user) {\n            is_admin = Galaxy.user.isAdmin();\n        }\n        var template = this.templateLibraryPermissions();\n        this.$el.html(template({ library: this.model, is_admin: is_admin }));\n\n        var self = this;\n        $.get(`${Galaxy.root}api/libraries/${self.id}/permissions?scope=current`)\n            .done(fetched_permissions => {\n                self.prepareSelectBoxes({\n                    fetched_permissions: fetched_permissions\n                });\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to fetch library permissions.\");\n            });\n\n        $(\"#center [data-toggle]\").tooltip();\n        //hack to show scrollbars\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            selected_roles.push(`${role_list[i][1]}:${role_list[i][0]}`);\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function(options) {\n        this.options = _.extend(this.options, options);\n        var fetched_permissions = this.options.fetched_permissions;\n        var self = this;\n\n        var selected_access_library_roles = this._serializeRoles(fetched_permissions.access_library_role_list);\n        var selected_add_item_roles = this._serializeRoles(fetched_permissions.add_library_item_role_list);\n        var selected_manage_library_roles = this._serializeRoles(fetched_permissions.manage_library_role_list);\n        var selected_modify_library_roles = this._serializeRoles(fetched_permissions.modify_library_role_list);\n\n        self.accessSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"access_perm\", selected_access_library_roles, true)\n        );\n        self.addSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"add_perm\", selected_add_item_roles, false)\n        );\n        self.manageSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"manage_perm\", selected_manage_library_roles, false)\n        );\n        self.modifySelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"modify_perm\", selected_modify_library_roles, false)\n        );\n    },\n\n    _createSelectOptions: function(self, id, init_data, is_library_access) {\n        is_library_access = is_library_access === true ? is_library_access : false;\n        var select_options = {\n            minimumInputLength: 0,\n            css: id,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            container: self.$el.find(`#${id}`),\n            ajax: {\n                url: `${Galaxy.root}api/libraries/${\n                    self.id\n                }/permissions?scope=available&is_library_access=${is_library_access}`,\n                dataType: \"json\",\n                quietMillis: 100,\n                data: function(term, page) {\n                    // page is the one-based page number tracked by Select2\n                    return {\n                        q: term, //search term\n                        page_limit: 10, // page size\n                        page: page // page number\n                    };\n                },\n                results: function(data, page) {\n                    var more = page * 10 < data.total; // whether or not there are more results available\n                    // notice we return the value of more so Select2 knows if more results can be loaded\n                    return { results: data.roles, more: more };\n                }\n            },\n            formatResult: function roleFormatResult(role) {\n                return `${role.name} type: ${role.type}`;\n            },\n\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function() {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            // initialData: init_data.join(','),\n            initialData: init_data,\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n\n        return select_options;\n    },\n\n    makeDatasetPrivate: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=make_private`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: false });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"The dataset is now private to you.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset private.\");\n            });\n    },\n\n    removeDatasetRestrictions: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=remove_restrictions`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: true });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Access to this dataset is now unrestricted.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset unrestricted.\");\n            });\n    },\n\n    _extractIds: function(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n    savePermissions: function(event) {\n        var self = this;\n\n        var access_ids = this._extractIds(this.accessSelectObject.$el.select2(\"data\"));\n        var add_ids = this._extractIds(this.addSelectObject.$el.select2(\"data\"));\n        var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n        var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n\n        $.post(`${Galaxy.root}api/libraries/${self.id}/permissions?action=set_permissions`, {\n            \"access_ids[]\": access_ids,\n            \"add_ids[]\": add_ids,\n            \"manage_ids[]\": manage_ids,\n            \"modify_ids[]\": modify_ids\n        })\n            .done(fetched_permissions => {\n                //fetch dataset again\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Permissions saved.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to set library permissions.\");\n            });\n    },\n\n    templateLibraryPermissions: function() {\n        return _.template(\n            [\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the list of Libraries\" class=\"btn btn-default primary-button\" type=\"button\">',\n                '<span class=\"fa fa-list\"/>',\n                \"&nbsp;Libraries\",\n                \"</button>\",\n                \"</a>\",\n                \"</div>\",\n                \"<h1>\",\n                'Library: <%= _.escape(library.get(\"name\")) %>',\n                \"</h1>\",\n                '<div class=\"alert alert-warning\">',\n                \"<% if (is_admin) { %>\",\n                \"You are logged in as an <strong>administrator</strong> therefore you can manage any library on this Galaxy instance. Please make sure you understand the consequences.\",\n                \"<% } else { %>\",\n                \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                \"<% }%>\",\n                \"</div>\",\n                '<div class=\"dataset_table\">',\n                \"<h2>Library permissions</h2>\",\n                \"<h4>Roles that can access the library</h4>\",\n                '<div id=\"access_perm\" class=\"access_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can access this library. If there are no access roles set on the library it is considered <strong>unrestricted</strong>.\",\n                \"</div>\",\n                \"<h4>Roles that can manage permissions on this library</h4>\",\n                '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can manage permissions on this library (includes giving access).\",\n                \"</div>\",\n                \"<h4>Roles that can add items to this library</h4>\",\n                '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can add items to this library (folders and datasets).\",\n                \"</div>\",\n                \"<h4>Roles that can modify this library</h4>\",\n                '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can modify this library (name, synopsis, etc.).\",\n                \"</div>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"/>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryView: LibraryView\n};\n"]}