{"version":3,"sources":["mvc/library/library-folderlist-view.js"],"names":["FolderListView","Backbone","View","extend","el","progress","progressStep","folderContainer","current_sort_order","current_sort_key","events","collection","defaults","include_deleted","page_count","show_page","initialize","options","_","modal","rowViews","Folder","listenTo","renderOne","removeOne","rePaint","fetchFolder","self","FolderContainer","id","url","attributes","urlRoot","fetch","success","folder_container","render","error","model","response","responseJSON","err_msg","onclick","Galaxy","libraries","library_router","back","template","templateFolder","$","hide","path","metadata","full_path","upper_folder_id","length","$el","html","parent_library_id","order","dataset_id","row","findWhere","showDatasetDetails","paginate","tooltip","css","total_items_count","get","models","Math","ceil","preferences","page_start","items_to_render","slice","items_shown","folderToolbarView","renderPaginator","reset","removeAllRows","renderAll","checkEmptiness","addAll","each","folderListView","add","postRender","fetched_metadata","contains_file_or_folder","type","configureElements","reverse","set","rowView","FolderRowView","find","after","filter","data","remove","show","sortColumnClicked","event","preventDefault","currentTarget","className","replace","sortFolder","renderSortIcon","selectAll","selected","target","checked","$row","closest","makeDarkRow","makeWhiteRow","selectClickedRow","checkbox","source","localName","removeClass","addClass","join"],"mappings":"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","file":"../../../scripts/mvc/library/library-folderlist-view.js","sourcesContent":["import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_library_folderrow_view from \"mvc/library/library-folderrow-view\";\n\nvar FolderListView = Backbone.View.extend({\n    el: \"#folder_items_element\",\n    // progress percentage\n    progress: 0,\n    // progress rate per one item\n    progressStep: 1,\n\n    folderContainer: null,\n\n    current_sort_order: \"asc\",\n\n    current_sort_key: \"name\",\n\n    events: {\n        \"click #select-all-checkboxes\": \"selectAll\",\n        \"click .dataset_row\": \"selectClickedRow\",\n        \"click .folder_row\": \"selectClickedRow\",\n        \"click .sort-folder-name\": \"sortColumnClicked\",\n        \"click .sort-folder-file_ext\": \"sortColumnClicked\",\n        \"click .sort-folder-description\": \"sortColumnClicked\",\n        \"click .sort-folder-state\": \"sortColumnClicked\"\n    },\n\n    collection: null,\n\n    defaults: {\n        include_deleted: false,\n        page_count: null,\n        show_page: null\n    },\n\n    /**\n     * Initialize and fetch the folder from the server.\n     * @param  {object} options an object with options\n     */\n    initialize: function(options) {\n        this.options = _.defaults(this.options || {}, this.defaults, options);\n        this.modal = null;\n        // map of folder item ids to item views = cache\n        this.rowViews = {};\n\n        // create a collection of folder items for this view\n        this.collection = new mod_library_model.Folder();\n\n        // start to listen if someone modifies the collection\n        this.listenTo(this.collection, \"add\", this.renderOne);\n        this.listenTo(this.collection, \"remove\", this.removeOne);\n        this.listenTo(this.collection, \"sort\", this.rePaint);\n        this.listenTo(this.collection, \"reset\", this.rePaint);\n\n        this.fetchFolder();\n    },\n\n    fetchFolder: function(options) {\n        var options = options || {};\n        this.options.include_deleted = options.include_deleted;\n        var self = this;\n\n        this.folderContainer = new mod_library_model.FolderContainer({\n            id: this.options.id\n        });\n        this.folderContainer.url = `${this.folderContainer.attributes.urlRoot + this.options.id}/contents`;\n\n        if (this.options.include_deleted) {\n            this.folderContainer.url = `${this.folderContainer.url}?include_deleted=true`;\n        }\n        this.folderContainer.fetch({\n            success: function(folder_container) {\n                self.folder_container = folder_container;\n                self.render();\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`${response.responseJSON.err_msg} Click this to go back.`, \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    mod_toastr.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        var template = this.templateFolder();\n        $(\".tooltip\").hide();\n\n        // find the upper id in the full path\n        var path = this.folderContainer.attributes.metadata.full_path;\n        var upper_folder_id;\n        if (path.length === 1) {\n            // the library is above us\n            upper_folder_id = 0;\n        } else {\n            upper_folder_id = path[path.length - 2][0];\n        }\n\n        this.$el.html(\n            template({\n                path: this.folderContainer.attributes.metadata.full_path,\n                parent_library_id: this.folderContainer.attributes.metadata.parent_library_id,\n                id: this.options.id,\n                upper_folder_id: upper_folder_id,\n                order: this.current_sort_order\n            })\n        );\n\n        // when dataset_id is present render its details too\n        if (this.options.dataset_id) {\n            var row = _.findWhere(self.rowViews, {\n                id: this.options.dataset_id\n            });\n            if (row) {\n                row.showDatasetDetails();\n            } else {\n                mod_toastr.error(\"Requested dataset not found. Showing folder instead.\");\n            }\n        } else {\n            if (this.options.show_page === null || this.options.show_page < 1) {\n                this.options.show_page = 1;\n            }\n            this.paginate();\n        }\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    paginate: function(options) {\n        this.options = _.extend(this.options, options);\n\n        if (this.options.show_page === null || this.options.show_page < 1) {\n            this.options.show_page = 1;\n        }\n        this.options.total_items_count = this.folder_container.get(\"folder\").models.length;\n        this.options.page_count = Math.ceil(\n            this.options.total_items_count / Galaxy.libraries.preferences.get(\"folder_page_size\")\n        );\n        var page_start = Galaxy.libraries.preferences.get(\"folder_page_size\") * (this.options.show_page - 1);\n        var items_to_render = null;\n        items_to_render = this.folder_container\n            .get(\"folder\")\n            .models.slice(page_start, page_start + Galaxy.libraries.preferences.get(\"folder_page_size\"));\n        this.options.items_shown = items_to_render.length;\n        // User requests page with no items\n        if (\n            Galaxy.libraries.preferences.get(\"folder_page_size\") * this.options.show_page >\n            this.options.total_items_count + Galaxy.libraries.preferences.get(\"folder_page_size\")\n        ) {\n            items_to_render = [];\n        }\n        Galaxy.libraries.folderToolbarView.renderPaginator(this.options);\n        this.collection.reset(items_to_render);\n    },\n\n    rePaint: function(options) {\n        this.options = _.extend(this.options, options);\n        this.removeAllRows();\n        this.renderAll();\n        this.checkEmptiness();\n    },\n\n    /**\n     * Adds all given models to the collection.\n     * @param {array of Item or FolderAsModel} array of models that should\n     *  be added to the view's collection.\n     */\n    addAll: function(models) {\n        _.each(models, model => {\n            Galaxy.libraries.folderListView.collection.add(model, {\n                current_sort_order: false\n            });\n        });\n        $(\"#center [data-toggle]\").tooltip();\n        this.checkEmptiness();\n        this.postRender();\n    },\n\n    /**\n     * Call this after all models are added to the collection\n     * to ensure that the folder toolbar will show proper options\n     * and that event will be bound on all subviews.\n     */\n    postRender: function() {\n        var fetched_metadata = this.folderContainer.attributes.metadata;\n        fetched_metadata.contains_file_or_folder =\n            typeof this.collection.findWhere({ type: \"file\" }) !== \"undefined\" ||\n            typeof this.collection.findWhere({ type: \"folder\" }) !== \"undefined\";\n        Galaxy.libraries.folderToolbarView.configureElements(fetched_metadata);\n    },\n\n    /**\n     * Iterates this view's collection and calls the render\n     * function for each. Also binds the hover behavior.\n     */\n    renderAll: function() {\n        var self = this;\n        _.each(this.collection.models.reverse(), model => {\n            self.renderOne(model);\n        });\n        this.postRender();\n    },\n\n    /**\n     * Creates a view for the given model and adds it to the folder view.\n     * @param {Item or FolderAsModel} model of the view that will be rendered\n     */\n    renderOne: function(model) {\n        this.options.contains_file_or_folder = true;\n        //if (model.get('type') !== 'folder'){\n        // model.set('readable_size', this.size_to_string(model.get('file_size')));\n        //}\n        model.set(\"folder_id\", this.id);\n        var rowView = new mod_library_folderrow_view.FolderRowView({\n            model: model\n        });\n\n        // save new rowView to cache\n        this.rowViews[model.get(\"id\")] = rowView;\n\n        this.$el.find(\"#first_folder_item\").after(rowView.el);\n    },\n\n    /**\n     * Remove the view of the given model from the DOM.\n     * @param {Item or FolderAsModel} model of the view that will be removed\n     */\n    removeOne: function(model) {\n        this.$el\n            .find(\"tr\")\n            .filter(function() {\n                return $(this).data(\"id\") && $(this).data(\"id\") === model.id;\n            })\n            .remove();\n    },\n\n    /**\n     * Remove all dataset and folder row elements from the DOM.\n     */\n    removeAllRows: function() {\n        $(\".library-row\").remove();\n    },\n\n    /** Checks whether the list is empty and adds/removes the message */\n    checkEmptiness: function() {\n        if (this.$el.find(\".dataset_row\").length === 0 && this.$el.find(\".folder_row\").length === 0) {\n            this.$el.find(\".empty-folder-message\").show();\n        } else {\n            this.$el.find(\".empty-folder-message\").hide();\n        }\n    },\n\n    sortColumnClicked: function(event) {\n        event.preventDefault();\n        this.current_sort_order = this.current_sort_order === \"asc\" ? \"desc\" : \"asc\";\n        this.current_sort_key = event.currentTarget.className.replace(\"sort-folder-\", \"\");\n        this.collection.sortFolder(this.current_sort_key, this.current_sort_order);\n        this.renderSortIcon();\n    },\n\n    /**\n     * User clicked the checkbox in the table heading\n     * @param  {context} event\n     */\n    selectAll: function(event) {\n        var selected = event.target.checked;\n        var self = this;\n        // Iterate each checkbox\n        $(\":checkbox\", \"#folder_list_body\").each(function() {\n            this.checked = selected;\n            var $row = $(this).closest(\"tr\");\n            // Change color of selected/unselected\n            if (selected) {\n                self.makeDarkRow($row);\n            } else {\n                self.makeWhiteRow($row);\n            }\n        });\n    },\n\n    /**\n     * Check checkbox if user clicks on the whole row or\n     *  on the checkbox itself\n     */\n    selectClickedRow: function(event) {\n        var checkbox = \"\";\n        var $row;\n        var source;\n        $row = $(event.target).closest(\"tr\");\n        if (event.target.localName === \"input\") {\n            checkbox = event.target;\n            source = \"input\";\n        } else if (event.target.localName === \"td\") {\n            checkbox = $row.find(\":checkbox\")[0];\n            source = \"td\";\n        }\n        if (checkbox.checked) {\n            if (source === \"td\") {\n                checkbox.checked = \"\";\n                this.makeWhiteRow($row);\n            } else if (source === \"input\") {\n                this.makeDarkRow($row);\n            }\n        } else {\n            if (source === \"td\") {\n                checkbox.checked = \"selected\";\n                this.makeDarkRow($row);\n            } else if (source === \"input\") {\n                this.makeWhiteRow($row);\n            }\n        }\n    },\n\n    makeDarkRow: function($row) {\n        $row.removeClass(\"light\").addClass(\"dark\");\n        $row\n            .find(\"a\")\n            .removeClass(\"light\")\n            .addClass(\"dark\");\n        $row\n            .find(\".fa-file-o\")\n            .removeClass(\"fa-file-o\")\n            .addClass(\"fa-file\");\n        $row\n            .find(\".fa-folder-o\")\n            .removeClass(\"fa-folder-o\")\n            .addClass(\"fa-folder\");\n    },\n\n    makeWhiteRow: function($row) {\n        $row.removeClass(\"dark\").addClass(\"light\");\n        $row\n            .find(\"a\")\n            .removeClass(\"dark\")\n            .addClass(\"light\");\n        $row\n            .find(\".fa-file\")\n            .removeClass(\"fa-file\")\n            .addClass(\"fa-file-o\");\n        $row\n            .find(\".fa-folder\")\n            .removeClass(\"fa-folder\")\n            .addClass(\"fa-folder-o\");\n    },\n\n    renderSortIcon: function() {\n        if (this.current_sort_order === \"asc\") {\n            $('[class*=\"sort-icon\"]')\n                .removeClass(\"fa-sort-alpha-desc\")\n                .removeClass(\"fa-sort-alpha-asc\");\n            $(`.sort-icon-${this.current_sort_key}`).addClass(\"fa-sort-alpha-asc\");\n        } else {\n            $(`.sort-icon-${this.current_sort_key}`).addClass(\"fa-sort-alpha-desc\");\n        }\n    },\n\n    templateFolder: function() {\n        return _.template(\n            [\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                \"<% _.each(path, function(path_item) { %>\",\n                \"<% if (path_item[0] != id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are in this folder\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                // FOLDER CONTENT\n                '<table data-library-id=\"<%- parent_library_id  %>\" class=\"grid table table-condensed\">',\n                \"<thead>\",\n                '<th class=\"button_heading\"></th>',\n                '<th style=\"text-align: center; width: 20px; \" title=\"Check to select all datasets\"><input id=\"select-all-checkboxes\" style=\"margin: 0;\" type=\"checkbox\"></th>',\n                '<th><a class=\"sort-folder-name\" title=\"Click to reverse order\" href=\"#\">name</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-name fa fa-sort-alpha-<%- order %>\"></span></th>',\n                '<th style=\"width:20%;\"><a class=\"sort-folder-description\" title=\"Click to reverse order\" href=\"#\">description</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-description fa\"></span></th>',\n                '<th style=\"width:5%;\"><a class=\"sort-folder-file_ext\" title=\"Click to reverse order\" href=\"#\">data type</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-file_ext fa\"></span></th>',\n                '<th style=\"width:10%;\">size</th>',\n                '<th style=\"width:160px;\">time updated (UTC)</th>',\n                '<th style=\"width:5%;\"><a class=\"sort-folder-state\" title=\"Click to reverse order\" href=\"#\">state</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-state fa\"></span></th>',\n                '<th style=\"width:150px;\"></th> ',\n                \"</thead>\",\n                '<tbody id=\"folder_list_body\">',\n                '<tr id=\"first_folder_item\">',\n                \"<td>\",\n                '<a href=\"#<% if (upper_folder_id !== 0){ print(\"folders/\" + upper_folder_id)} %>\" title=\"Go to parent folder\" class=\"btn_open_folder btn btn-default btn-xs\">..<a>',\n                \"</td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"</tr>\",\n                \"</tbody>\",\n                \"</table>\",\n                '<div class=\"empty-folder-message\" style=\"display:none;\">',\n                \"This folder is either empty or you do not have proper access permissions to see the contents. If you expected something to show up\",\n                ' please consult the <a href=\"https://galaxyproject.org/data-libraries/#permissions\" target=\"_blank\">library security wikipage</a>',\n                ' or visit the <a href=\"https://biostar.usegalaxy.org/\" target=\"_blank\">Galaxy support site</a>.',\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    FolderListView: FolderListView\n};\n"]}