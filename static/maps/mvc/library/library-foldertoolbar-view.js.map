{"version":3,"sources":["mvc/library/library-foldertoolbar-view.js"],"names":["FolderToolbarView","Backbone","View","extend","el","events","defaults","can_add_library_item","contains_file_or_folder","chain_call_control","total_number","failed_number","disabled_jstree_element","modal","jstree","histories","select_genome","select_extension","list_extensions","auto","id","text","description","list_genomes","initialize","options","_","fetchExtAndGenomes","render","toolbar_template","templateToolBar","template_defaults","is_admin","is_anonym","mutiple_add_dataset_options","Galaxy","user","isAdmin","isAnonymous","config","user_library_import_dir","allow_library_path_paste","library_import_dir","$el","html","renderPaginator","paginator_template","templatePaginator","$","find","show_page","parseInt","page_count","total_items_count","items_shown","folder_page_size","libraries","preferences","get","configureElements","show","hide","tooltip","createFolderFromModal","event","preventDefault","stopPropagation","template","templateNewFolderInModal","closing_events","title","body","buttons","Create","createNewFolderEvent","Close","folderDetails","serializeNewFolder","validateNewFolder","folder","FolderAsModel","url_items","history","fragment","split","current_folder_id","indexOf","length","url","urlRoot","save","success","set","type","folderListView","collection","add","error","model","response","responseJSON","err_msg","name","val","importToHistoryModal","e","$checkedValues","findCheckedRows","templateImportIntoHistoryModal","info","promise","fetchUserHistories","done","models","Import","importAllIntoHistory","fail","GalaxyHistories","fetch","disableButton","new_history_name","createNewHistory","processImportToHistory","new_history","xhr","status","always","enableButton","history_id","history_name","post","root","checked_items","findCheckedItems","items_to_import","i","dataset_ids","library_dataset_id","historyItem","HistoryItem","content","source","push","folder_ids","library_folder_id","initChainCallControl","action","jQuery","getJSON","chainCallImportingIntoHistory","updateProgress","progress","progressStep","width","Math","round","txt_representation","download","format","data","ld_ids","processDownload","method","param","inputs","each","pair","appendTo","submit","remove","addFilesFromHistoryModal","template_modal","templateAddFilesFromHistory","Add","addAllDatasetsFromHistory","closing_callback","library_router","navigate","trigger","fetchAndDisplayHistoryContents","change","target","value","importFilesFromPathModal","templateImportPathModal","importFromPathsClicked","renderSelectBoxes","key","datatypes","extension","description_url","sort","a","b","unshift","cache","genomes","css","container","importFilesFromGalaxyFolderModal","templateBrowserModal","importFromJstreePath","bind","renderJstree","Jstree","core","plugins","types","icon","file","checkbox","three_state","err_code","warning","preserve_dirs","is","link_data","space_to_tab","to_posix_lines","tag_using_filenames","file_type","dbkey","paths","valid_paths","trimmed","trim","chainCallImportingFolders","templateAddingDatasetsProgressBar","folder_name","templateDeletingItemsProgressBar","templateImportIntoHistoryProgressBar","emit","that","all_nodes","get_selected","selected_nodes","filter","node","state","disabled","selection_type","li_attr","full_path","undefined","full_source","chainCallImportingUserdirFiles","history_contents","HistoryContents","history_contents_template","templateHistoryContents","contents","reverse","prop","checked_hdas","history_item_ids","history_item_types","items_to_add","hid","closest","item_type","history_item_id","folder_item","Item","from_hdca_id","from_hda_id","chainCallAddingHdas","history_item_set","popped_item","pop","onclick","window","location","when","hdas_set","added_hdas","Folder","chainCallDeletingItems","items_to_delete","deleted_items","item_to_delete","destroy","include_deleted","updated_item","item","model_class","checkIncludeDeleted","checked","fetchFolder","deleteSelectedItems","row_id","substring","items_total","dataset","showLocInfo","library","libraryListView","parent_library_id","showLocInfoModal","Library","templateLocInfoInModal","showImportModal","back","showPageSizePrompt","prompt","showCollectionSelect","templateCollectionSelectModal","selected_datasets","Continue","showColectionBuilder","prepareCollectionTypeSelect","prepareHistoryTypeSelect","collectionType","select_collection_type","onchange","updateCollectionType","history_options","select_collection_history","collection_elements","elements_source","collection_item","folder_container","deleted","Collection","where","toJSON","collectionImport","selected_history_id","selected_history_name","modal_title","creator_class","creationFn","ListCollectionCreator","elements","hideSourceItems","map","element","src","createHDCA","collectionCreatorModal","defaultHideSourceItems","PairCollectionCreator","pairedCollectionCreatorModal","historyId","elementIdentifiers","hdca","HistoryDatasetCollection","history_content_type","collection_type","hide_source_items","element_identifiers","join"],"mappings":"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","file":"../../../scripts/mvc/library/library-foldertoolbar-view.js","sourcesContent":["import _l from \"utils/localization\";\nimport mod_utils from \"utils/utils\";\nimport mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_select from \"mvc/ui/ui-select\";\nimport LIST_CREATOR from \"mvc/collection/list-collection-creator\";\nimport PAIR_CREATOR from \"mvc/collection/pair-collection-creator\";\nimport PAIRED_CREATOR from \"mvc/collection/list-of-pairs-collection-creator\";\nimport HDCA_MODEL from \"mvc/history/hdca-model\";\nimport \"libs/jquery/jstree\";\n\nvar FolderToolbarView = Backbone.View.extend({\n    el: \"#center\",\n\n    events: {\n        \"click .toolbtn-create-folder\": \"createFolderFromModal\",\n        \"click .toolbtn-bulk-import\": \"importToHistoryModal\",\n        \"click .include-deleted-datasets-chk\": \"checkIncludeDeleted\",\n        \"click .toolbtn-bulk-delete\": \"deleteSelectedItems\",\n        \"click .toolbtn-show-locinfo\": \"showLocInfo\",\n        \"click .page-size-prompt\": \"showPageSizePrompt\",\n        \"click .toolbtn-collection-import\": \"showCollectionSelect\"\n    },\n\n    defaults: {\n        can_add_library_item: false,\n        contains_file_or_folder: false,\n        chain_call_control: {\n            total_number: 0,\n            failed_number: 0\n        },\n        disabled_jstree_element: \"folders\"\n    },\n\n    modal: null,\n\n    // directory browsing object\n    jstree: null,\n\n    // user's histories\n    histories: null,\n\n    // genome select\n    select_genome: null,\n\n    // extension select\n    select_extension: null,\n\n    // extension types\n    list_extensions: [],\n\n    // datatype placeholder for extension auto-detection\n    auto: {\n        id: \"auto\",\n        text: \"Auto-detect\",\n        description:\n            \"This system will try to detect the file type automatically.\" +\n            \" If your file is not detected properly as one of the known formats,\" +\n            \" it most likely means that it has some format problems (e.g., different\" +\n            \" number of columns on different rows). You can still coerce the system\" +\n            \" to set your data to the format you think it should be.\" +\n            \" You can also upload compressed files, which will automatically be decompressed.\"\n    },\n\n    // genomes\n    list_genomes: [],\n\n    initialize: function(options) {\n        this.options = _.defaults(options || {}, this.defaults);\n        this.fetchExtAndGenomes();\n        this.render();\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        var toolbar_template = this.templateToolBar();\n        var template_defaults = {\n            id: this.options.id,\n            is_admin: false,\n            is_anonym: true,\n            mutiple_add_dataset_options: false\n        };\n        if (Galaxy.user) {\n            template_defaults.is_admin = Galaxy.user.isAdmin();\n            template_defaults.is_anonym = Galaxy.user.isAnonymous();\n            if (\n                Galaxy.config.user_library_import_dir !== null ||\n                Galaxy.config.allow_library_path_paste !== false ||\n                Galaxy.config.library_import_dir !== null\n            ) {\n                template_defaults.mutiple_add_dataset_options = true;\n            }\n        }\n        this.$el.html(toolbar_template(template_defaults));\n    },\n\n    /**\n     * Called from FolderListView when needed.\n     * @param  {object} options common options\n     */\n    renderPaginator: function(options) {\n        this.options = _.extend(this.options, options);\n        var paginator_template = this.templatePaginator();\n        $(\"body\")\n            .find(\".folder-paginator\")\n            .html(\n                paginator_template({\n                    id: this.options.id,\n                    show_page: parseInt(this.options.show_page),\n                    page_count: parseInt(this.options.page_count),\n                    total_items_count: this.options.total_items_count,\n                    items_shown: this.options.items_shown,\n                    folder_page_size: Galaxy.libraries.preferences.get(\"folder_page_size\")\n                })\n            );\n    },\n\n    configureElements: function(options) {\n        this.options = _.extend(this.options, options);\n\n        if (this.options.can_add_library_item === true) {\n            $(\".add-library-items\").show();\n        } else {\n            $(\".add-library-items\").hide();\n        }\n        if (this.options.contains_file_or_folder === true) {\n            if (Galaxy.user) {\n                if (!Galaxy.user.isAnonymous()) {\n                    $(\".logged-dataset-manipulation\").show();\n                    $(\".dataset-manipulation\").show();\n                } else {\n                    $(\".dataset-manipulation\").show();\n                    $(\".logged-dataset-manipulation\").hide();\n                }\n            } else {\n                $(\".logged-dataset-manipulation\").hide();\n                $(\".dataset-manipulation\").hide();\n            }\n        } else {\n            $(\".logged-dataset-manipulation\").hide();\n            $(\".dataset-manipulation\").hide();\n        }\n        this.$el.find(\"[data-toggle]\").tooltip();\n    },\n\n    createFolderFromModal: function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        var template = this.templateNewFolderInModal();\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: _l(\"Create New Folder\"),\n            body: template(),\n            buttons: {\n                Create: () => {\n                    this.createNewFolderEvent();\n                },\n                Close: () => {\n                    Galaxy.modal.hide();\n                }\n            }\n        });\n    },\n\n    createNewFolderEvent: function() {\n        var folderDetails = this.serializeNewFolder();\n        if (this.validateNewFolder(folderDetails)) {\n            var folder = new mod_library_model.FolderAsModel();\n            var url_items = Backbone.history.fragment.split(\"/\");\n            var current_folder_id;\n            if (url_items.indexOf(\"page\") > -1) {\n                current_folder_id = url_items[url_items.length - 3];\n            } else {\n                current_folder_id = url_items[url_items.length - 1];\n            }\n            folder.url = folder.urlRoot + current_folder_id;\n\n            folder.save(folderDetails, {\n                success: function(folder) {\n                    Galaxy.modal.hide();\n                    mod_toastr.success(\"Folder created.\");\n                    folder.set({ type: \"folder\" });\n                    Galaxy.libraries.folderListView.collection.add(folder);\n                },\n                error: function(model, response) {\n                    Galaxy.modal.hide();\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        } else {\n            mod_toastr.error(\"Folder's name is missing.\");\n        }\n        return false;\n    },\n\n    serializeNewFolder: function() {\n        return {\n            name: $(\"input[name='Name']\").val(),\n            description: $(\"input[name='Description']\").val()\n        };\n    },\n\n    validateNewFolder: function(folderDetails) {\n        return folderDetails.name !== \"\";\n    },\n\n    importToHistoryModal: function(e) {\n        e.preventDefault();\n        var $checkedValues = this.findCheckedRows();\n        var template = this.templateImportIntoHistoryModal();\n        if ($checkedValues.length === 0) {\n            mod_toastr.info(\"You must select some datasets first.\");\n        } else {\n            var promise = this.fetchUserHistories();\n            promise\n                .done(() => {\n                    this.modal = Galaxy.modal;\n                    this.modal.show({\n                        closing_events: true,\n                        title: _l(\"Import into History\"),\n                        body: template({\n                            histories: this.histories.models\n                        }),\n                        buttons: {\n                            Import: () => {\n                                this.importAllIntoHistory();\n                            },\n                            Close: () => {\n                                Galaxy.modal.hide();\n                            }\n                        }\n                    });\n                })\n                .fail((model, response) => {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                });\n        }\n    },\n\n    fetchUserHistories: function() {\n        this.histories = new mod_library_model.GalaxyHistories();\n        var promise = this.histories.fetch();\n        return promise;\n    },\n\n    importAllIntoHistory: function() {\n        this.modal.disableButton(\"Import\");\n        var new_history_name = this.modal.$(\"input[name=history_name]\").val();\n        if (new_history_name !== \"\") {\n            this.createNewHistory(new_history_name)\n                .done(new_history => {\n                    this.processImportToHistory(new_history.id, new_history.name);\n                })\n                .fail((xhr, status, error) => {\n                    mod_toastr.error(\"An error occurred.\");\n                })\n                .always(() => {\n                    this.modal.enableButton(\"Import\");\n                });\n        } else {\n            var history_id = $(\"select[name=import_to_history] option:selected\").val();\n            var history_name = $(\"select[name=import_to_history] option:selected\").text();\n            this.processImportToHistory(history_id, history_name);\n            this.modal.enableButton(\"Import\");\n        }\n    },\n\n    createNewHistory: function(new_history_name) {\n        var promise = $.post(`${Galaxy.root}api/histories`, { name: new_history_name });\n        return promise;\n    },\n\n    processImportToHistory: function(history_id, history_name) {\n        var checked_items = this.findCheckedItems();\n        var items_to_import = [];\n        // prepare the dataset objects to be imported\n        for (let i = checked_items.dataset_ids.length - 1; i >= 0; i--) {\n            var library_dataset_id = checked_items.dataset_ids[i];\n            var historyItem = new mod_library_model.HistoryItem();\n            historyItem.url = `${historyItem.urlRoot + history_id}/contents`;\n            historyItem.content = library_dataset_id;\n            historyItem.source = \"library\";\n            items_to_import.push(historyItem);\n        }\n        // prepare the folder objects to be imported\n        for (let i = checked_items.folder_ids.length - 1; i >= 0; i--) {\n            var library_folder_id = checked_items.folder_ids[i];\n            var historyItem = new mod_library_model.HistoryItem();\n            historyItem.url = `${historyItem.urlRoot + history_id}/contents`;\n            historyItem.content = library_folder_id;\n            historyItem.source = \"library_folder\";\n            items_to_import.push(historyItem);\n        }\n        this.initChainCallControl({\n            length: items_to_import.length,\n            action: \"to_history\",\n            history_name: history_name\n        });\n        // set the used history as current so user will see the last one\n        // that he imported into in the history panel on the 'analysis' page\n        jQuery.getJSON(`${Galaxy.root}history/set_as_current?id=${history_id}`);\n        this.chainCallImportingIntoHistory(items_to_import, history_name);\n    },\n\n    /**\n     * Update progress bar in modal.\n     */\n    updateProgress: function() {\n        this.progress += this.progressStep;\n        $(\".progress-bar-import\").width(`${Math.round(this.progress)}%`);\n        var txt_representation = `${Math.round(this.progress)}% Complete`;\n        $(\".completion_span\").text(txt_representation);\n    },\n\n    /**\n     * Download selected datasets. Called from the router.\n     * @param  {str} format    requested archive format\n     */\n    download: function(format) {\n        var checked_items = this.findCheckedItems();\n        var url = `${Galaxy.root}api/libraries/datasets/download/${format}`;\n        var data = { ld_ids: checked_items.dataset_ids, folder_ids: checked_items.folder_ids };\n        this.processDownload(url, data, \"get\");\n    },\n\n    /**\n     * Create hidden form and submit it through POST\n     * to initialize the download.\n     * @param  {str} url    url to call\n     * @param  {obj} data   data to include in the request\n     * @param  {str} method method of the request\n     */\n    processDownload: function(url, data, method) {\n        if (url && data) {\n            // data can be string of parameters or array/object\n            data = typeof data === \"string\" ? data : $.param(data);\n            // split params into form inputs\n            var inputs = \"\";\n            $.each(data.split(\"&\"), function() {\n                var pair = this.split(\"=\");\n                inputs += `<input type=\"hidden\" name=\"${pair[0]}\" value=\"${pair[1]}\" />`;\n            });\n            // send request\n            $(`<form action=\"${url}\" method=\"${method || \"post\"}\">${inputs}</form>`)\n                .appendTo(\"body\")\n                .submit()\n                .remove();\n            mod_toastr.info(\"Your download will begin soon.\");\n        } else {\n            mod_toastr.error(\"An error occurred.\");\n        }\n    },\n\n    addFilesFromHistoryModal: function() {\n        this.histories = new mod_library_model.GalaxyHistories();\n        this.histories\n            .fetch()\n            .done(() => {\n                this.modal = Galaxy.modal;\n                var template_modal = this.templateAddFilesFromHistory();\n                this.modal.show({\n                    closing_events: true,\n                    title: _l(\"Adding datasets from your history\"),\n                    body: template_modal({\n                        histories: this.histories.models\n                    }),\n                    buttons: {\n                        Add: () => {\n                            this.addAllDatasetsFromHistory();\n                        },\n                        Close: () => {\n                            Galaxy.modal.hide();\n                        }\n                    },\n                    closing_callback: () => {\n                        Galaxy.libraries.library_router.navigate(`folders/${this.id}`, { trigger: true });\n                    }\n                });\n                this.fetchAndDisplayHistoryContents(this.histories.models[0].id);\n                $(\"#dataset_add_bulk\").change(event => {\n                    this.fetchAndDisplayHistoryContents(event.target.value);\n                });\n            })\n            .fail((model, response) => {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            });\n    },\n\n    /**\n     * Create modal for importing from Galaxy path.\n     */\n    importFilesFromPathModal: function() {\n        this.modal = Galaxy.modal;\n        var template_modal = this.templateImportPathModal();\n        this.modal.show({\n            closing_events: true,\n            title: _l(\"Please enter paths to import\"),\n            body: template_modal({}),\n            buttons: {\n                Import: () => {\n                    this.importFromPathsClicked(this);\n                },\n                Close: () => {\n                    Galaxy.modal.hide();\n                }\n            },\n            closing_callback: () => {\n                //  TODO: should not trigger routes outside of the router\n                Galaxy.libraries.library_router.navigate(`folders/${this.id}`, {\n                    trigger: true\n                });\n            }\n        });\n        this.renderSelectBoxes();\n    },\n\n    /**\n     * Request all extensions and genomes from Galaxy\n     * and save them in sorted arrays.\n     */\n    fetchExtAndGenomes: function() {\n        mod_utils.get({\n            url: `${Galaxy.root}api/datatypes?extension_only=False`,\n            success: datatypes => {\n                this.list_extensions = [];\n                for (let key in datatypes) {\n                    this.list_extensions.push({\n                        id: datatypes[key].extension,\n                        text: datatypes[key].extension,\n                        description: datatypes[key].description,\n                        description_url: datatypes[key].description_url\n                    });\n                }\n                this.list_extensions.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n                this.list_extensions.unshift(this.auto);\n            },\n            cache: true\n        });\n        mod_utils.get({\n            url: `${Galaxy.root}api/genomes`,\n            success: genomes => {\n                this.list_genomes = [];\n                for (let key in genomes) {\n                    this.list_genomes.push({\n                        id: genomes[key][1],\n                        text: genomes[key][0]\n                    });\n                }\n                this.list_genomes.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n            },\n            cache: true\n        });\n    },\n\n    renderSelectBoxes: function() {\n        // This won't work properly unlesss we already have the data fetched.\n        // See this.fetchExtAndGenomes()\n        this.select_genome = new mod_select.View({\n            css: \"library-genome-select\",\n            data: this.list_genomes,\n            container: Galaxy.modal.$el.find(\"#library_genome_select\"),\n            value: \"?\"\n        });\n        this.select_extension = new mod_select.View({\n            css: \"library-extension-select\",\n            data: this.list_extensions,\n            container: Galaxy.modal.$el.find(\"#library_extension_select\"),\n            value: \"auto\"\n        });\n    },\n\n    /**\n     * Create modal for importing from given directory\n     * on Galaxy. Bind jQuery events.\n     */\n    importFilesFromGalaxyFolderModal: function(options) {\n        var template_modal = this.templateBrowserModal();\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: _l(\"Please select folders or files\"),\n            body: template_modal({}),\n            buttons: {\n                Import: () => {\n                    this.importFromJstreePath(this, options);\n                },\n                Close: () => {\n                    Galaxy.modal.hide();\n                }\n            },\n            closing_callback: () => {\n                //  TODO: should not trigger routes outside of the router\n                Galaxy.libraries.library_router.navigate(`folders/${this.id}`, {\n                    trigger: true\n                });\n            }\n        });\n\n        $(\".libimport-select-all\").bind(\"click\", () => {\n            $(\"#jstree_browser\").jstree(\"check_all\");\n        });\n        $(\".libimport-select-none\").bind(\"click\", () => {\n            $(\"#jstree_browser\").jstree(\"uncheck_all\");\n        });\n\n        this.renderSelectBoxes();\n        options.disabled_jstree_element = \"folders\";\n        this.renderJstree(options);\n\n        $(\"input[type=radio]\").change(event => {\n            if (event.target.value === \"jstree-disable-folders\") {\n                options.disabled_jstree_element = \"folders\";\n                this.renderJstree(options);\n                $(\".jstree-folders-message\").hide();\n                $(\".jstree-preserve-structure\").hide();\n                $(\".jstree-files-message\").show();\n            } else if (event.target.value === \"jstree-disable-files\") {\n                $(\".jstree-files-message\").hide();\n                $(\".jstree-folders-message\").show();\n                $(\".jstree-preserve-structure\").show();\n                options.disabled_jstree_element = \"files\";\n                this.renderJstree(options);\n            }\n        });\n    },\n\n    /**\n     * Fetch the contents of user directory on Galaxy\n     * and render jstree component based on received\n     * data.\n     * @param  {[type]} options [description]\n     */\n    renderJstree: function(options) {\n        this.options = _.extend(this.options, options);\n        var target = options.source || \"userdir\";\n        var disabled_jstree_element = this.options.disabled_jstree_element;\n        this.jstree = new mod_library_model.Jstree();\n        this.jstree.url = `${this.jstree.urlRoot}?target=${target}&format=jstree&disable=${disabled_jstree_element}`;\n        this.jstree.fetch({\n            success: (model, response) => {\n                $(\"#jstree_browser\").jstree(\"destroy\");\n                $(\"#jstree_browser\").jstree({\n                    core: {\n                        data: model\n                    },\n                    plugins: [\"types\", \"checkbox\"],\n                    types: {\n                        folder: {\n                            icon: \"jstree-folder\"\n                        },\n                        file: {\n                            icon: \"jstree-file\"\n                        }\n                    },\n                    checkbox: {\n                        three_state: false\n                    }\n                });\n            },\n            error: (model, response) => {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    if (response.responseJSON.err_code === 404001) {\n                        mod_toastr.warning(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    }\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    /**\n     * Take the paths from the textarea, split it, create\n     * a request queue and call a function that starts sending\n     * one by one to be imported on the server.\n     */\n    importFromPathsClicked: function() {\n        var preserve_dirs = this.modal.$el.find(\".preserve-checkbox\").is(\":checked\");\n        var link_data = this.modal.$el.find(\".link-checkbox\").is(\":checked\");\n        var space_to_tab = this.modal.$el.find(\".spacetab-checkbox\").is(\":checked\");\n        var to_posix_lines = this.modal.$el.find(\".posix-checkbox\").is(\":checked\");\n        var tag_using_filenames = this.modal.$el.find(\".tag-files\").is(\":checked\");\n        var file_type = this.select_extension.value();\n        var dbkey = this.select_genome.value();\n        var paths = $(\"textarea#import_paths\").val();\n        var valid_paths = [];\n        if (!paths) {\n            mod_toastr.info(\"Please enter a path relative to Galaxy root.\");\n        } else {\n            this.modal.disableButton(\"Import\");\n            paths = paths.split(\"\\n\");\n            for (let i = paths.length - 1; i >= 0; i--) {\n                var trimmed = paths[i].trim();\n                if (trimmed.length !== 0) {\n                    valid_paths.push(trimmed);\n                }\n            }\n            this.initChainCallControl({\n                length: valid_paths.length,\n                action: \"adding_datasets\"\n            });\n            this.chainCallImportingFolders({\n                paths: valid_paths,\n                preserve_dirs: preserve_dirs,\n                link_data: link_data,\n                space_to_tab: space_to_tab,\n                to_posix_lines: to_posix_lines,\n                source: \"admin_path\",\n                file_type: file_type,\n                tag_using_filenames: tag_using_filenames,\n                dbkey: dbkey\n            });\n        }\n    },\n\n    /**\n     * Initialize the control of chaining requests\n     * in the current modal.\n     * @param {int} length The number of items in the chain call.\n     */\n    initChainCallControl: function(options) {\n        var template;\n        switch (options.action) {\n            case \"adding_datasets\":\n                template = this.templateAddingDatasetsProgressBar();\n                this.modal.$el.find(\".modal-body\").html(\n                    template({\n                        folder_name: this.options.folder_name\n                    })\n                );\n                break;\n            case \"deleting_datasets\":\n                template = this.templateDeletingItemsProgressBar();\n                this.modal.$el.find(\".modal-body\").html(template());\n                break;\n            case \"to_history\":\n                template = this.templateImportIntoHistoryProgressBar();\n                this.modal.$el.find(\".modal-body\").html(template({ history_name: options.history_name }));\n                break;\n            default:\n                Galaxy.emit.error(\"Wrong action specified.\", \"datalibs\");\n                break;\n        }\n\n        // var progress_bar_tmpl = this.templateAddingDatasetsProgressBar();\n        // this.modal.$el.find( '.modal-body' ).html( progress_bar_tmpl( { folder_name : this.options.folder_name } ) );\n        this.progress = 0;\n        this.progressStep = 100 / options.length;\n        this.options.chain_call_control.total_number = options.length;\n        this.options.chain_call_control.failed_number = 0;\n    },\n\n    /**\n     * Take the selected items from the jstree, create a request queue\n     * and send them one by one to the server for importing into\n     * the current folder.\n     *\n     * jstree.js has to be loaded before\n     * @see renderJstree\n     */\n    importFromJstreePath: function(that, options) {\n        var all_nodes = $(\"#jstree_browser\")\n            .jstree()\n            .get_selected(true);\n        // remove the disabled elements that could have been trigerred with the 'select all'\n        var selected_nodes = _.filter(all_nodes, node => node.state.disabled == false);\n        var preserve_dirs = this.modal.$el.find(\".preserve-checkbox\").is(\":checked\");\n        var link_data = this.modal.$el.find(\".link-checkbox\").is(\":checked\");\n        var space_to_tab = this.modal.$el.find(\".spacetab-checkbox\").is(\":checked\");\n        var to_posix_lines = this.modal.$el.find(\".posix-checkbox\").is(\":checked\");\n        var file_type = this.select_extension.value();\n        var dbkey = this.select_genome.value();\n        var tag_using_filenames = this.modal.$el.find(\".tag-files\").is(\":checked\");\n        var selection_type = selected_nodes[0].type;\n        var paths = [];\n        if (selected_nodes.length < 1) {\n            mod_toastr.info(\"Please select some items first.\");\n        } else {\n            this.modal.disableButton(\"Import\");\n            for (let i = selected_nodes.length - 1; i >= 0; i--) {\n                if (selected_nodes[i].li_attr.full_path !== undefined) {\n                    paths.push(selected_nodes[i].li_attr.full_path);\n                }\n            }\n            this.initChainCallControl({\n                length: paths.length,\n                action: \"adding_datasets\"\n            });\n            if (selection_type === \"folder\") {\n                var full_source = `${options.source}_folder`;\n                this.chainCallImportingFolders({\n                    paths: paths,\n                    preserve_dirs: preserve_dirs,\n                    link_data: link_data,\n                    space_to_tab: space_to_tab,\n                    to_posix_lines: to_posix_lines,\n                    source: full_source,\n                    file_type: file_type,\n                    dbkey: dbkey,\n                    tag_using_filenames: tag_using_filenames\n                });\n            } else if (selection_type === \"file\") {\n                var full_source = `${options.source}_file`;\n                this.chainCallImportingUserdirFiles({\n                    paths: paths,\n                    file_type: file_type,\n                    dbkey: dbkey,\n                    link_data: link_data,\n                    space_to_tab: space_to_tab,\n                    to_posix_lines: to_posix_lines,\n                    source: full_source,\n                    tag_using_filenames: tag_using_filenames\n                });\n            }\n        }\n    },\n\n    fetchAndDisplayHistoryContents: function(history_id) {\n        var history_contents = new mod_library_model.HistoryContents({\n            id: history_id\n        });\n        history_contents.fetch({\n            success: history_contents => {\n                var history_contents_template = this.templateHistoryContents();\n                this.histories.get(history_id).set({ contents: history_contents });\n                this.modal.$el.find(\".library_selected_history_content\").html(\n                    history_contents_template({\n                        history_contents: history_contents.models.reverse()\n                    })\n                );\n                this.modal.$el.find(\".history-import-select-all\").bind(\"click\", () => {\n                    $(\".library_selected_history_content [type=checkbox]\").prop(\"checked\", true);\n                });\n                this.modal.$el.find(\".history-import-unselect-all\").bind(\"click\", () => {\n                    $(\".library_selected_history_content [type=checkbox]\").prop(\"checked\", false);\n                });\n            },\n            error: (model, response) => {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    /**\n     * Import all selected datasets from history into the current folder.\n     */\n    addAllDatasetsFromHistory: function() {\n        var checked_hdas = this.modal.$el.find(\".library_selected_history_content\").find(\":checked\");\n        var history_item_ids = []; // can be hda or hdca\n        var history_item_types = [];\n        var items_to_add = [];\n        if (checked_hdas.length < 1) {\n            mod_toastr.info(\"You must select some datasets first.\");\n        } else {\n            this.modal.disableButton(\"Add\");\n            checked_hdas.each(function() {\n                var hid = $(this)\n                    .closest(\"li\")\n                    .data(\"id\");\n                if (hid) {\n                    var item_type = $(this)\n                        .closest(\"li\")\n                        .data(\"name\");\n                    history_item_ids.push(hid);\n                    history_item_types.push(item_type);\n                }\n            });\n            for (let i = history_item_ids.length - 1; i >= 0; i--) {\n                var history_item_id = history_item_ids[i];\n                var folder_item = new mod_library_model.Item();\n                folder_item.url = `${Galaxy.root}api/folders/${this.options.id}/contents`;\n                if (history_item_types[i] === \"collection\") {\n                    folder_item.set({ from_hdca_id: history_item_id });\n                } else {\n                    folder_item.set({ from_hda_id: history_item_id });\n                }\n                items_to_add.push(folder_item);\n            }\n            this.initChainCallControl({\n                length: items_to_add.length,\n                action: \"adding_datasets\"\n            });\n            this.chainCallAddingHdas(items_to_add);\n        }\n    },\n\n    /**\n     * Take array of empty history items and make request for each of them\n     * to create it on server. Update progress in between calls.\n     * @param  {array} history_item_set array of empty history items\n     * @param  {str} history_name     name of the history to import to\n     */\n    chainCallImportingIntoHistory: function(history_item_set, history_name) {\n        var popped_item = history_item_set.pop();\n        if (typeof popped_item == \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                mod_toastr.success(\"Selected datasets imported into history. Click this to start analyzing it.\", \"\", {\n                    onclick: () => {\n                        window.location = Galaxy.root;\n                    }\n                });\n            } else if (this.options.chain_call_control.failed_number === this.options.chain_call_control.total_number) {\n                mod_toastr.error(\"There was an error and no datasets were imported into history.\");\n            } else if (this.options.chain_call_control.failed_number < this.options.chain_call_control.total_number) {\n                mod_toastr.warning(\n                    \"Some of the datasets could not be imported into history. Click this to see what was imported.\",\n                    \"\",\n                    {\n                        onclick: () => {\n                            window.location = Galaxy.root;\n                        }\n                    }\n                );\n            }\n            Galaxy.modal.hide();\n            return true;\n        }\n        var promise = $.when(\n            popped_item.save({\n                content: popped_item.content,\n                source: popped_item.source\n            })\n        );\n\n        promise\n            .done(() => {\n                this.updateProgress();\n                this.chainCallImportingIntoHistory(history_item_set, history_name);\n            })\n            .fail(() => {\n                this.options.chain_call_control.failed_number += 1;\n                this.updateProgress();\n                this.chainCallImportingIntoHistory(history_item_set, history_name);\n            });\n    },\n\n    /**\n     * Take the array of paths and create a request for each of them\n     * calling them in chain. Update the progress bar in between each.\n     * @param  {array} paths                    paths relative to user folder on Galaxy\n     * @param  {boolean} tag_using_filenames    add tags to datasets using names of files\n     */\n    chainCallImportingUserdirFiles: function(options) {\n        var popped_item = options.paths.pop();\n        if (typeof popped_item === \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                mod_toastr.success(\"Selected files imported into the current folder\");\n                Galaxy.modal.hide();\n            } else {\n                mod_toastr.error(\"An error occured.\");\n            }\n            return true;\n        }\n        var promise = $.when(\n            $.post(\n                `${Galaxy.root}api/libraries/datasets?encoded_folder_id=${this.id}&source=${\n                    options.source\n                }&path=${popped_item}&file_type=${options.file_type}&link_data=${options.link_data}&space_to_tab=${\n                    options.space_to_tab\n                }&to_posix_lines=${options.to_posix_lines}&dbkey=${options.dbkey}&tag_using_filenames=${\n                    options.tag_using_filenames\n                }`\n            )\n        );\n        promise\n            .done(response => {\n                this.updateProgress();\n                this.chainCallImportingUserdirFiles(options);\n            })\n            .fail(() => {\n                this.options.chain_call_control.failed_number += 1;\n                this.updateProgress();\n                this.chainCallImportingUserdirFiles(options);\n            });\n    },\n\n    /**\n     * Take the array of paths and create a request for each of them\n     * calling them in series. Update the progress bar in between each.\n     * @param  {array} paths                    paths relative to Galaxy root folder\n     * @param  {boolean} preserve_dirs          indicates whether to preserve folder structure\n     * @param  {boolean} link_data              copy files to Galaxy or link instead\n     * @param  {boolean} to_posix_lines         convert line endings to POSIX standard\n     * @param  {boolean} space_to_tab           convert spaces to tabs\n     * @param  {str} source                     string representing what type of folder\n     *                                          is the source of import\n     * @param  {boolean} tag_using_filenames    add tags to datasets using names of files\n     */\n    chainCallImportingFolders: function(options) {\n        // TODO need to check which paths to call\n        var popped_item = options.paths.pop();\n        if (typeof popped_item == \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                mod_toastr.success(\"Selected folders and their contents imported into the current folder.\");\n                Galaxy.modal.hide();\n            } else {\n                // TODO better error report\n                mod_toastr.error(\"An error occured.\");\n            }\n            return true;\n        }\n        var promise = $.when(\n            $.post(\n                `${Galaxy.root}api/libraries/datasets?encoded_folder_id=${this.id}&source=${\n                    options.source\n                }&path=${popped_item}&preserve_dirs=${options.preserve_dirs}&link_data=${\n                    options.link_data\n                }&to_posix_lines=${options.to_posix_lines}&space_to_tab=${options.space_to_tab}&file_type=${\n                    options.file_type\n                }&dbkey=${options.dbkey}&tag_using_filenames=${options.tag_using_filenames}`\n            )\n        );\n        promise\n            .done(response => {\n                this.updateProgress();\n                this.chainCallImportingFolders(options);\n            })\n            .fail(() => {\n                this.options.chain_call_control.failed_number += 1;\n                this.updateProgress();\n                this.chainCallImportingFolders(options);\n            });\n    },\n\n    /**\n     * Take the array of hdas and create a request for each.\n     * Call them in chain and update progress bar in between each.\n     * @param  {array} hdas_set array of empty hda objects\n     */\n    chainCallAddingHdas: function(hdas_set) {\n        this.added_hdas = new mod_library_model.Folder();\n        var popped_item = hdas_set.pop();\n        if (typeof popped_item == \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                mod_toastr.success(\"Selected datasets from history added to the folder\");\n            } else if (this.options.chain_call_control.failed_number === this.options.chain_call_control.total_number) {\n                mod_toastr.error(\"There was an error and no datasets were added to the folder.\");\n            } else if (this.options.chain_call_control.failed_number < this.options.chain_call_control.total_number) {\n                mod_toastr.warning(\"Some of the datasets could not be added to the folder\");\n            }\n            Galaxy.modal.hide();\n            return this.added_hdas;\n        }\n        var promise = $.when(\n            popped_item.save({\n                from_hda_id: popped_item.get(\"from_hda_id\")\n            })\n        );\n\n        promise\n            .done(model => {\n                Galaxy.libraries.folderListView.collection.add(model);\n                this.updateProgress();\n                this.chainCallAddingHdas(hdas_set);\n            })\n            .fail(() => {\n                this.options.chain_call_control.failed_number += 1;\n                this.updateProgress();\n                this.chainCallAddingHdas(hdas_set);\n            });\n    },\n\n    /**\n     * Take the array of lddas, create request for each and\n     * call them in chain. Update progress bar in between each.\n     * @param  {array} lddas_set array of lddas to delete\n     */\n    chainCallDeletingItems: function(items_to_delete) {\n        this.deleted_items = new mod_library_model.Folder();\n        var item_to_delete = items_to_delete.pop();\n        if (typeof item_to_delete === \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                mod_toastr.success(\"Selected items were deleted.\");\n            } else if (this.options.chain_call_control.failed_number === this.options.chain_call_control.total_number) {\n                mod_toastr.error(\n                    \"There was an error and no items were deleted. Please make sure you have sufficient permissions.\"\n                );\n            } else if (this.options.chain_call_control.failed_number < this.options.chain_call_control.total_number) {\n                mod_toastr.warning(\n                    \"Some of the items could not be deleted. Please make sure you have sufficient permissions.\"\n                );\n            }\n            Galaxy.modal.hide();\n            return this.deleted_items;\n        }\n        item_to_delete\n            .destroy()\n            .done(item => {\n                Galaxy.libraries.folderListView.collection.remove(item_to_delete.id);\n                this.updateProgress();\n                // add the deleted item to collection, triggers rendering\n                if (Galaxy.libraries.folderListView.options.include_deleted) {\n                    var updated_item = null;\n                    if (item.type === \"folder\" || item.model_class === \"LibraryFolder\") {\n                        updated_item = new mod_library_model.FolderAsModel(item);\n                    } else if (item.type === \"file\" || item.model_class === \"LibraryDataset\") {\n                        updated_item = new mod_library_model.Item(item);\n                    } else {\n                        Galaxy.emit.error(\"Unknown library item type found.\", \"datalibs\");\n                        Galaxy.emit.error(item.type || item.model_class, \"datalibs\");\n                    }\n                    Galaxy.libraries.folderListView.collection.add(updated_item);\n                }\n                this.chainCallDeletingItems(items_to_delete);\n            })\n            .fail(() => {\n                this.options.chain_call_control.failed_number += 1;\n                this.updateProgress();\n                this.chainCallDeletingItems(items_to_delete);\n            });\n    },\n\n    /**\n     * Handles the click on 'show deleted' checkbox\n     */\n    checkIncludeDeleted: function(event) {\n        if (event.target.checked) {\n            Galaxy.libraries.folderListView.fetchFolder({\n                include_deleted: true\n            });\n        } else {\n            Galaxy.libraries.folderListView.fetchFolder({\n                include_deleted: false\n            });\n        }\n    },\n\n    /**\n     * Delete the selected items. Atomic. One by one.\n     */\n    deleteSelectedItems: function() {\n        var dataset_ids = [];\n        var folder_ids = [];\n        var $checkedValues = this.findCheckedRows();\n        if ($checkedValues.length === 0) {\n            mod_toastr.info(\"You must select at least one item for deletion.\");\n        } else {\n            var template = this.templateDeletingItemsProgressBar();\n            this.modal = Galaxy.modal;\n            this.modal.show({\n                closing_events: true,\n                title: _l(\"Deleting selected items\"),\n                body: template({}),\n                buttons: {\n                    Close: () => {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n            // init the control counters\n            this.options.chain_call_control.total_number = 0;\n            this.options.chain_call_control.failed_number = 0;\n            $checkedValues.each(function() {\n                var row_id = $(this)\n                    .closest(\"tr\")\n                    .data(\"id\");\n                if (row_id !== undefined) {\n                    if (row_id.substring(0, 1) == \"F\") {\n                        folder_ids.push(row_id);\n                    } else {\n                        dataset_ids.push(row_id);\n                    }\n                }\n            });\n            // init the progress bar\n            var items_total = dataset_ids.length + folder_ids.length;\n            this.progressStep = 100 / items_total;\n            this.progress = 0;\n\n            // prepare the dataset items to be added\n            var items_to_delete = [];\n            for (let i = dataset_ids.length - 1; i >= 0; i--) {\n                var dataset = new mod_library_model.Item({\n                    id: dataset_ids[i]\n                });\n                items_to_delete.push(dataset);\n            }\n            for (let i = folder_ids.length - 1; i >= 0; i--) {\n                var folder = new mod_library_model.FolderAsModel({\n                    id: folder_ids[i]\n                });\n                items_to_delete.push(folder);\n            }\n\n            this.options.chain_call_control.total_number = items_total;\n            // call the recursive function to call ajax one after each other (request FIFO queue)\n            this.chainCallDeletingItems(items_to_delete);\n        }\n    },\n\n    showLocInfo: function() {\n        var library = null;\n        if (Galaxy.libraries.libraryListView !== null) {\n            library = Galaxy.libraries.libraryListView.collection.get(this.options.parent_library_id);\n            this.showLocInfoModal(library);\n        } else {\n            library = new mod_library_model.Library({\n                id: this.options.parent_library_id\n            });\n            library.fetch({\n                success: () => {\n                    this.showLocInfoModal(library);\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    showLocInfoModal: function(library) {\n        var template = this.templateLocInfoInModal();\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: _l(\"Location Details\"),\n            body: template({ library: library, options: this.options }),\n            buttons: {\n                Close: () => {\n                    Galaxy.modal.hide();\n                }\n            }\n        });\n    },\n\n    showImportModal: function(options) {\n        switch (options.source) {\n            case \"history\":\n                this.addFilesFromHistoryModal();\n                break;\n            case \"importdir\":\n                this.importFilesFromGalaxyFolderModal({\n                    source: \"importdir\"\n                });\n                break;\n            case \"path\":\n                this.importFilesFromPathModal();\n                break;\n            case \"userdir\":\n                this.importFilesFromGalaxyFolderModal({\n                    source: \"userdir\"\n                });\n                break;\n            default:\n                Galaxy.libraries.library_router.back();\n                mod_toastr.error(\"Invalid import source.\");\n                break;\n        }\n    },\n\n    /**\n     * Show user the prompt to change the number of items shown on page.\n     */\n    showPageSizePrompt: function(e) {\n        e.preventDefault();\n        var folder_page_size = prompt(\n            \"How many items per page do you want to see?\",\n            Galaxy.libraries.preferences.get(\"folder_page_size\")\n        );\n        if (folder_page_size != null && folder_page_size == parseInt(folder_page_size)) {\n            Galaxy.libraries.preferences.set({\n                folder_page_size: parseInt(folder_page_size)\n            });\n            Galaxy.libraries.folderListView.render({\n                id: this.options.id,\n                show_page: 1\n            });\n        }\n    },\n\n    findCheckedRows: function() {\n        return $(\"#folder_list_body\").find(\":checked\");\n    },\n\n    findCheckedItems: function() {\n        var folder_ids = [];\n        var dataset_ids = [];\n        this.findCheckedRows().each(function() {\n            var row_id = $(this)\n                .closest(\"tr\")\n                .data(\"id\");\n            if (row_id.substring(0, 1) == \"F\") {\n                folder_ids.push(row_id);\n            } else {\n                dataset_ids.push(row_id);\n            }\n        });\n        return { folder_ids: folder_ids, dataset_ids: dataset_ids };\n    },\n\n    showCollectionSelect: function(e) {\n        e.preventDefault();\n        var checked_items = this.findCheckedItems();\n        var template = this.templateCollectionSelectModal();\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: \"Create History Collection from Datasets\",\n            body: template({ selected_datasets: checked_items.dataset_ids.length }),\n            buttons: {\n                Continue: () => {\n                    this.showColectionBuilder(checked_items.dataset_ids);\n                },\n                Close: () => {\n                    Galaxy.modal.hide();\n                }\n            }\n        });\n        this.prepareCollectionTypeSelect();\n        this.prepareHistoryTypeSelect();\n    },\n\n    prepareCollectionTypeSelect: function() {\n        this.collectionType = \"list\";\n        this.select_collection_type = new mod_select.View({\n            css: \"library-collection-type-select\",\n            container: this.modal.$el.find(\".library-collection-type-select\"),\n            data: [\n                { id: \"list\", text: \"List\" },\n                { id: \"paired\", text: \"Paired\" },\n                { id: \"list:paired\", text: \"List of Pairs\" }\n            ],\n            value: \"list\",\n            onchange: collectionType => {\n                this.updateCollectionType(collectionType);\n            }\n        });\n    },\n\n    prepareHistoryTypeSelect: function() {\n        var promise = this.fetchUserHistories();\n        promise.done(() => {\n            var history_options = [];\n            for (let i = this.histories.length - 1; i >= 0; i--) {\n                history_options.unshift({\n                    id: this.histories.models[i].id,\n                    text: this.histories.models[i].get(\"name\")\n                });\n            }\n            this.select_collection_history = new mod_select.View({\n                css: \"library-collection-history-select\",\n                container: this.modal.$el.find(\".library-collection-history-select\"),\n                data: history_options,\n                value: history_options[0].id\n            });\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function(collectionType) {\n        this.collectionType = collectionType;\n    },\n\n    showColectionBuilder: function(checked_items) {\n        let collection_elements = [];\n        let elements_source = this.modal.$('input[type=\"radio\"]:checked').val();\n        if (elements_source === \"selection\") {\n            for (let i = checked_items.length - 1; i >= 0; i--) {\n                let collection_item = {};\n                let dataset = Galaxy.libraries.folderListView.folder_container.get(\"folder\").get(checked_items[i]);\n                collection_item.id = checked_items[i];\n                collection_item.name = dataset.get(\"name\");\n                collection_item.deleted = dataset.get(\"deleted\");\n                collection_item.state = dataset.get(\"state\");\n                collection_elements.push(collection_item);\n            }\n        } else if (elements_source === \"folder\") {\n            collection_elements = new Backbone.Collection(\n                Galaxy.libraries.folderListView.folder_container.get(\"folder\").where({ type: \"file\" })\n            ).toJSON();\n        }\n        let new_history_name = this.modal.$(\"input[name=history_name]\").val();\n        if (new_history_name !== \"\") {\n            this.createNewHistory(new_history_name)\n                .done(new_history => {\n                    mod_toastr.success(\"History created\");\n                    this.collectionImport(collection_elements, new_history.id, new_history.name);\n                })\n                .fail((xhr, status, error) => {\n                    mod_toastr.error(\"An error occurred.\");\n                });\n        } else {\n            let selected_history_id = this.select_collection_history.value();\n            let selected_history_name = this.select_collection_history.text();\n            this.collectionImport(collection_elements, selected_history_id, selected_history_name);\n        }\n    },\n\n    collectionImport: function(collection_elements, history_id, history_name) {\n        let modal_title = `Creating Collection in ${history_name}`;\n        let creator_class;\n        let creationFn;\n        if (this.collectionType === \"list\") {\n            creator_class = LIST_CREATOR.ListCollectionCreator;\n            creationFn = (elements, name, hideSourceItems) => {\n                elements = elements.map(element => ({\n                    id: element.id,\n                    name: element.name,\n                    src: \"ldda\"\n                }));\n                return this.createHDCA(elements, this.collectionType, name, hideSourceItems, history_id);\n            };\n            LIST_CREATOR.collectionCreatorModal(\n                collection_elements,\n                { creationFn: creationFn, title: modal_title, defaultHideSourceItems: true },\n                creator_class\n            );\n        } else if (this.collectionType === \"paired\") {\n            creator_class = PAIR_CREATOR.PairCollectionCreator;\n            creationFn = (elements, name, hideSourceItems) => {\n                elements = [\n                    { name: \"forward\", src: \"ldda\", id: elements[0].id },\n                    { name: \"reverse\", src: \"ldda\", id: elements[1].id }\n                ];\n                return this.createHDCA(elements, this.collectionType, name, hideSourceItems, history_id);\n            };\n            LIST_CREATOR.collectionCreatorModal(\n                collection_elements,\n                { creationFn: creationFn, title: modal_title, defaultHideSourceItems: true },\n                creator_class\n            );\n        } else if (this.collectionType === \"list:paired\") {\n            let elements = collection_elements.map(element => ({\n                id: element.id,\n                name: element.name,\n                src: \"ldda\"\n            }));\n            PAIRED_CREATOR.pairedCollectionCreatorModal(elements, {\n                historyId: history_id,\n                title: modal_title,\n                defaultHideSourceItems: true\n            });\n        }\n    },\n\n    createHDCA: function(elementIdentifiers, collectionType, name, hideSourceItems, history_id, options) {\n        let hdca = new HDCA_MODEL.HistoryDatasetCollection({\n            history_content_type: \"dataset_collection\",\n            collection_type: collectionType,\n            history_id: history_id,\n            name: name,\n            hide_source_items: hideSourceItems || false,\n            element_identifiers: elementIdentifiers\n        });\n        return hdca.save(options);\n    },\n\n    templateToolBar: function() {\n        return _.template(\n            [\n                // container start\n                '<div class=\"library_style_container\">',\n                // toolbar start\n                '<div id=\"library_toolbar\">',\n                '<form class=\"form-inline\" role=\"form\">',\n                \"<span><strong>DATA LIBRARIES</strong></span>\",\n                // paginator will append here\n                '<span class=\"library-paginator folder-paginator\"></span>',\n                // include deleted checkbox\n                '<div class=\"checkbox toolbar-item logged-dataset-manipulation\" style=\"height: 20px; display:none;\">',\n                \"<label>\",\n                '<input type=\"checkbox\" class=\"include-deleted-datasets-chk\">include deleted</input>',\n                \"</label>\",\n                \"</div>\",\n                // create new folder button\n                '<button style=\"display:none;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Create New Folder\" class=\"btn btn-default primary-button toolbtn-create-folder add-library-items add-library-items-folder toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-plus\"></span><span class=\"fa fa-folder\"></span> Create Folder ',\n                \"</button>\",\n                // add datasets button\n                \"<% if(mutiple_add_dataset_options) { %>\",\n                '<div class=\"btn-group add-library-items add-library-items-datasets toolbar-item\" style=\"display:none;\">',\n                '<button title=\"Add Datasets to Current Folder\" id=\"\" type=\"button\" class=\"primary-button dropdown-toggle\" data-toggle=\"dropdown\">',\n                '<span class=\"fa fa-plus\"></span><span class=\"fa fa-file\"></span> Add Datasets <span class=\"caret\"></span>',\n                \"</button>\",\n                '<ul class=\"dropdown-menu\" role=\"menu\">',\n                '<li><a href=\"#folders/<%= id %>/import/history\"> from History</a></li>',\n                \"<% if(Galaxy.config.user_library_import_dir !== null) { %>\",\n                '<li><a href=\"#folders/<%= id %>/import/userdir\"> from User Directory</a></li>',\n                \"<% } %>\",\n                \"<% if(Galaxy.config.allow_library_path_paste) { %>\",\n                '<li class=\"divider\"></li>',\n                '<li class=\"dropdown-header\">Admins only</li>',\n                \"<% if(Galaxy.config.library_import_dir !== null) { %>\",\n                '<li><a href=\"#folders/<%= id %>/import/importdir\">from Import Directory</a></li>',\n                \"<% } %>\",\n                \"<% if(Galaxy.config.allow_library_path_paste) { %>\",\n                '<li><a href=\"#folders/<%= id %>/import/path\">from Path</a></li>',\n                \"<% } %>\",\n                \"<% } %>\",\n                \"</ul>\",\n                \"</div>\",\n                \"<% } else { %>\",\n                '<a data-placement=\"top\" title=\"Add Datasets to Current Folder\" style=\"display:none;\" class=\"btn btn-default add-library-items add-library-items-datasets\" href=\"#folders/<%= id %>/import/history\" role=\"button\">',\n                '<span class=\"fa fa-plus\"></span><span class=\"fa fa-file\"></span>',\n                \"</a>\",\n                \"<% } %>\",\n                // import to history button\n                '<div class=\"btn-group toolbar-item\">',\n                '<button title=\"Import to history\" type=\"button\" class=\"primary-button dropdown-toggle add-to-history\" data-toggle=\"dropdown\">',\n                '<span class=\"fa fa-book\"></span> To History <span class=\"caret\"></span>',\n                \"</button>\",\n                '<ul class=\"dropdown-menu\" role=\"menu\">',\n                '<li><a href=\"\" class=\"toolbtn-bulk-import add-to-history-datasets\">as Datasets</a></li>',\n                '<li><a href=\"\" class=\"toolbtn-collection-import add-to-history-collection\">as a Collection</a></li>',\n                \"</ul>\",\n                \"</div>\",\n                // download button\n                '<div class=\"btn-group dataset-manipulation toolbar-item\" style=\"display:none; \">',\n                '<button title=\"Download items as archive\" type=\"button\" class=\"primary-button dropdown-toggle\" data-toggle=\"dropdown\">',\n                '<span class=\"fa fa-save\"></span> Download <span class=\"caret\"></span>',\n                \"</button>\",\n                '<ul class=\"dropdown-menu\" role=\"menu\">',\n                '<li><a href=\"#/folders/<%= id %>/download/tgz\">.tar.gz</a></li>',\n                '<li><a href=\"#/folders/<%= id %>/download/tbz\">.tar.bz</a></li>',\n                '<li><a href=\"#/folders/<%= id %>/download/zip\">.zip</a></li>',\n                \"</ul>\",\n                \"</div>\",\n                // delete button\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Mark items deleted\" class=\"primary-button toolbtn-bulk-delete logged-dataset-manipulation toolbar-item\" style=\"display:none;\" type=\"button\">',\n                '<span class=\"fa fa-trash\"></span> Delete',\n                \"</button>\",\n                // help button\n                '<span class=\"right-float\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"See this screen annotated\">',\n                '<a href=\"https://galaxyproject.org/data-libraries/screen/folder-contents/\" target=\"_blank\">',\n                '<button class=\"primary-button\" type=\"button\">',\n                '<span class=\"fa fa-question-circle\"></span>',\n                \"&nbsp;Help\",\n                \"</button>\",\n                \"</a>\",\n                \"</span>\",\n                // location button\n                '<span class=\"right-float\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Show location details\">',\n                '<button data-id=\"<%- id %>\" class=\"primary-button toolbtn-show-locinfo toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-info-circle\"></span>',\n                \"&nbsp;Details\",\n                \"</button>\",\n                \"</span>\",\n                // toolbar end\n                \"</div>\",\n                \"</form>\",\n                // folder contents will append here\n                '<div id=\"folder_items_element\" />',\n                // paginator will append here\n                '<div class=\"folder-paginator paginator-bottom\" />',\n                // container end\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateLocInfoInModal: function() {\n        return _.template(\n            [\n                \"<div>\",\n                '<table class=\"grid table table-condensed\">',\n                \"<thead>\",\n                '<th style=\"width: 25%;\">library</th>',\n                \"<th></th>\",\n                \"</thead>\",\n                \"<tbody>\",\n                \"<tr>\",\n                \"<td>name</td>\",\n                '<td><%- library.get(\"name\") %></td>',\n                \"</tr>\",\n                '<% if(library.get(\"description\") !== \"\") { %>',\n                \"<tr>\",\n                \"<td>description</td>\",\n                '<td><%- library.get(\"description\") %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if(library.get(\"synopsis\") !== \"\") { %>',\n                \"<tr>\",\n                \"<td>synopsis</td>\",\n                '<td><%- library.get(\"synopsis\") %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if(library.get(\"create_time_pretty\") !== \"\") { %>',\n                \"<tr>\",\n                \"<td>created</td>\",\n                '<td><span title=\"<%- library.get(\"create_time\") %>\"><%- library.get(\"create_time_pretty\") %></span></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"<tr>\",\n                \"<td>id</td>\",\n                '<td><%- library.get(\"id\") %></td>',\n                \"</tr>\",\n                \"</tbody>\",\n                \"</table>\",\n                '<table class=\"grid table table-condensed\">',\n                \"<thead>\",\n                '<th style=\"width: 25%;\">folder</th>',\n                \"<th></th>\",\n                \"</thead>\",\n                \"<tbody>\",\n                \"<tr>\",\n                \"<td>name</td>\",\n                \"<td><%- options.folder_name %></td>\",\n                \"</tr>\",\n                '<% if(options.folder_description !== \"\") { %>',\n                \"<tr>\",\n                \"<td>description</td>\",\n                \"<td><%- options.folder_description %></td>\",\n                \"</tr>\",\n                \"<% } %>\",\n                \"<tr>\",\n                \"<td>id</td>\",\n                \"<td><%- options.id %></td>\",\n                \"</tr>\",\n                \"</tbody>\",\n                \"</table>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateNewFolderInModal: function() {\n        return _.template(\n            [\n                '<div id=\"new_folder_modal\">',\n                \"<form>\",\n                '<input type=\"text\" name=\"Name\" value=\"\" placeholder=\"Name\" autofocus>',\n                '<input type=\"text\" name=\"Description\" value=\"\" placeholder=\"Description\">',\n                \"</form>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateImportIntoHistoryModal: function() {\n        return _.template(\n            [\n                \"<div>\",\n                '<div class=\"library-modal-item\">',\n                \"Select history: \",\n                '<select name=\"import_to_history\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n                \"<% _.each(histories, function(history) { %>\",\n                '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                \"<% }); %>\",\n                \"</select>\",\n                \"</div>\",\n                '<div class=\"library-modal-item\">',\n                \"or create new: \",\n                '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\" />',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateImportIntoHistoryProgressBar: function() {\n        return _.template(\n            [\n                '<div class=\"import_text\">',\n                \"Importing selected items to history <b><%= _.escape(history_name) %></b>\",\n                \"</div>\",\n                '<div class=\"progress\">',\n                '<div class=\"progress-bar progress-bar-import\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 00%;\">',\n                '<span class=\"completion_span\">0% Complete</span>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateAddingDatasetsProgressBar: function() {\n        return _.template(\n            [\n                '<div class=\"import_text\">',\n                \"Adding selected datasets to library folder <b><%= _.escape(folder_name) %></b>\",\n                \"</div>\",\n                '<div class=\"progress\">',\n                '<div class=\"progress-bar progress-bar-import\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 00%;\">',\n                '<span class=\"completion_span\">0% Complete</span>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateDeletingItemsProgressBar: function() {\n        return _.template(\n            [\n                '<div class=\"import_text\">',\n                \"</div>\",\n                '<div class=\"progress\">',\n                '<div class=\"progress-bar progress-bar-import\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 00%;\">',\n                '<span class=\"completion_span\">0% Complete</span>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateBrowserModal: function() {\n        return _.template(\n            [\n                '<div id=\"file_browser_modal\">',\n                '<div class=\"alert alert-info jstree-files-message\">All files you select will be imported into the current folder ignoring their folder structure.</div>',\n                '<div class=\"alert alert-info jstree-folders-message\" style=\"display:none;\">All files within the selected folders and their subfolders will be imported into the current folder.</div>',\n                '<div style=\"margin-bottom:1em;\">',\n                '<label title=\"Switch to selecting files\" class=\"radio-inline import-type-switch\">',\n                '<input type=\"radio\" name=\"jstree-radio\" value=\"jstree-disable-folders\" checked=\"checked\"> Choose Files',\n                \"</label>\",\n                '<label title=\"Switch to selecting folders\" class=\"radio-inline import-type-switch\">',\n                '<input type=\"radio\" name=\"jstree-radio\" value=\"jstree-disable-files\"> Choose Folders',\n                \"</label>\",\n                \"</div>\",\n                '<div style=\"margin-bottom:1em;\">',\n                '<label class=\"checkbox-inline jstree-preserve-structure\" style=\"display:none;\">',\n                '<input class=\"preserve-checkbox\" type=\"checkbox\" value=\"preserve_directory_structure\">',\n                \"Preserve directory structure\",\n                \"</label>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"link-checkbox\" type=\"checkbox\" value=\"link_files\">',\n                \"Link files instead of copying\",\n                \"</label>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"posix-checkbox\" type=\"checkbox\" value=\"to_posix_lines\" checked=\"checked\">',\n                \"Convert line endings to POSIX\",\n                \"</label>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"spacetab-checkbox\" type=\"checkbox\" value=\"space_to_tab\">',\n                \"Convert spaces to tabs\",\n                \"</label>\",\n                \"</div>\",\n                '<button title=\"Select all files\" type=\"button\" class=\"button primary-button libimport-select-all\">',\n                \"Select all\",\n                \"</button>\",\n                '<button title=\"Select no files\" type=\"button\" class=\"button primary-button libimport-select-none\">',\n                \"Unselect all\",\n                \"</button>\",\n                \"<hr />\",\n                // append jstree object here\n                '<div id=\"jstree_browser\">',\n                \"</div>\",\n                \"<hr />\",\n                \"<p>You can set extension type and genome for all imported datasets at once:</p>\",\n                \"<div>\",\n                'Type: <span id=\"library_extension_select\" class=\"library-extension-select\" />',\n                'Genome: <span id=\"library_genome_select\" class=\"library-genome-select\" />',\n                \"</div>\",\n                \"<br>\",\n                \"<div>\",\n                '<label class=\"checkbox-inline tag-files\">',\n                \"Tag datasets based on file names\",\n                '<input class=\"tag-files\" type=\"checkbox\" value=\"tag_using_filenames\">',\n                \"</label>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateImportPathModal: function() {\n        return _.template(\n            [\n                '<div id=\"file_browser_modal\">',\n                '<div class=\"alert alert-info jstree-folders-message\">All files within the given folders and their subfolders will be imported into the current folder.</div>',\n                '<div style=\"margin-bottom: 0.5em;\">',\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"preserve-checkbox\" type=\"checkbox\" value=\"preserve_directory_structure\">',\n                \"Preserve directory structure\",\n                \"</label>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"link-checkbox\" type=\"checkbox\" value=\"link_files\">',\n                \"Link files instead of copying\",\n                \"</label>\",\n                \"<br>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"posix-checkbox\" type=\"checkbox\" value=\"to_posix_lines\" checked=\"checked\">',\n                \"Convert line endings to POSIX\",\n                \"</label>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"spacetab-checkbox\" type=\"checkbox\" value=\"space_to_tab\">',\n                \"Convert spaces to tabs\",\n                \"</label>\",\n                \"</div>\",\n                '<textarea id=\"import_paths\" class=\"form-control\" rows=\"5\" placeholder=\"Absolute paths (or paths relative to Galaxy root) separated by newline\" autofocus></textarea>',\n                \"<hr />\",\n                \"<p>You can set extension type and genome for all imported datasets at once:</p>\",\n                \"<div>\",\n                'Type: <span id=\"library_extension_select\" class=\"library-extension-select\" />',\n                'Genome: <span id=\"library_genome_select\" class=\"library-genome-select\" />',\n                \"</div>\",\n                \"<div>\",\n                '<label class=\"checkbox-inline tag-files\">',\n                \"Tag datasets based on file names\",\n                '<input class=\"tag-files\" type=\"checkbox\" value=\"tag_using_filenames\">',\n                \"</label>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateAddFilesFromHistory: function() {\n        return _.template(\n            [\n                '<div id=\"add_files_modal\">',\n                \"<div>\",\n                \"1.&nbsp;Select history:&nbsp;\",\n                '<select id=\"dataset_add_bulk\" name=\"dataset_add_bulk\" style=\"width:66%; \"> ',\n                \"<% _.each(histories, function(history) { %>\", //history select box\n                '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                \"<% }); %>\",\n                \"</select>\",\n                \"</div>\",\n                \"<br/>\",\n                '<div class=\"library_selected_history_content\">',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateHistoryContents: function() {\n        return _.template(\n            [\n                \"<p>2.&nbsp;Choose the datasets to import:</p>\",\n                \"<div>\",\n                '<button title=\"Select all datasets\" type=\"button\" class=\"button primary-button history-import-select-all\">',\n                \"Select all\",\n                \"</button>\",\n                '<button title=\"Select all datasets\" type=\"button\" class=\"button primary-button history-import-unselect-all\">',\n                \"Unselect all\",\n                \"</button>\",\n                \"</div>\",\n                \"<br>\",\n                \"<ul>\",\n                \"<% _.each(history_contents, function(history_item) { %>\",\n                '<% if (history_item.get(\"deleted\") != true ) { %>',\n                '<% var item_name = history_item.get(\"name\") %>',\n                '<% if (history_item.get(\"type\") === \"collection\") { %>',\n                '<% var collection_type = history_item.get(\"collection_type\") %>',\n                '<% if (collection_type === \"list\") { %>',\n                '<li data-id=\"<%= _.escape(history_item.get(\"id\")) %>\" data-name=\"<%= _.escape(history_item.get(\"type\")) %>\">',\n                \"<label>\",\n                '<label title=\"<%= _.escape(item_name) %>\">',\n                '<input style=\"margin: 0;\" type=\"checkbox\"> <%= _.escape(history_item.get(\"hid\")) %>: ',\n                '<%= item_name.length > 75 ? _.escape(\"...\".concat(item_name.substr(-75))) : _.escape(item_name) %> (Dataset Collection)',\n                \"</label>\",\n                \"</li>\",\n                \"<% } else { %>\",\n                '<li><input style=\"margin: 0;\" type=\"checkbox\" onclick=\"return false;\" disabled=\"disabled\">',\n                '<span title=\"You can convert this collection into a collection of type list using the Collection Tools\">',\n                '<%= _.escape(history_item.get(\"hid\")) %>: ',\n                '<%= item_name.length > 75 ? _.escape(\"...\".concat(item_name.substr(-75))) : _.escape(item_name) %> (Dataset Collection of type <%= _.escape(collection_type) %> not supported.)',\n                \"</span>\",\n                \"</li>\",\n                \"<% } %>\",\n                '<% } else if (history_item.get(\"visible\") === true && history_item.get(\"state\") === \"ok\") { %>',\n                '<li data-id=\"<%= _.escape(history_item.get(\"id\")) %>\" data-name=\"<%= _.escape(history_item.get(\"type\")) %>\">',\n                '<label title=\"<%= _.escape(item_name) %>\">',\n                '<input style=\"margin: 0;\" type=\"checkbox\"> <%= _.escape(history_item.get(\"hid\")) %>: ',\n                '<%= item_name.length > 75 ? _.escape(\"...\".concat(item_name.substr(-75))) : _.escape(item_name) %>',\n                \"</label>\",\n                \"</li>\",\n                \"<% } %>\",\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ul>\"\n            ].join(\"\")\n        );\n    },\n\n    templatePaginator: function() {\n        return _.template(\n            [\n                '<ul class=\"pagination pagination-sm\">',\n                \"<% if ( ( show_page - 1 ) > 0 ) { %>\",\n                \"<% if ( ( show_page - 1 ) > page_count ) { %>\", // we are on higher page than total page count\n                '<li><a href=\"#folders/<%= id %>/page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>',\n                '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( show_page ) %>\"><% print( show_page - 1 ) %></a></li>',\n                \"<% } else { %>\",\n                '<li><a href=\"#folders/<%= id %>/page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>',\n                '<li><a href=\"#folders/<%= id %>/page/<% print( show_page - 1 ) %>\"><% print( show_page - 1 ) %></a></li>',\n                \"<% } %>\",\n                \"<% } else { %>\", // we are on the first page\n                '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>',\n                '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( show_page ) %>\"><% print( show_page - 1 ) %></a></li>',\n                \"<% } %>\",\n                '<li class=\"active\">',\n                '<a href=\"#folders/<%= id %>/page/<% print( show_page ) %>\"><% print( show_page ) %></a>',\n                \"</li>\",\n                \"<% if ( ( show_page ) < page_count ) { %>\",\n                '<li><a href=\"#folders/<%= id %>/page/<% print( show_page + 1 ) %>\"><% print( show_page + 1 ) %></a></li>',\n                '<li><a href=\"#folders/<%= id %>/page/<% print( page_count ) %>\"><span class=\"fa fa-angle-double-right\"></span></a></li>',\n                \"<% } else { %>\",\n                '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( show_page  ) %>\"><% print( show_page + 1 ) %></a></li>',\n                '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( page_count ) %>\"><span class=\"fa fa-angle-double-right\"></span></a></li>',\n                \"<% } %>\",\n                \"</ul>\",\n                \"<span>\",\n                ' <%- items_shown %> items shown <a href=\"\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"currently <%- folder_page_size %> per page\" class=\"page-size-prompt\">(change)</a>',\n                \"</span>\",\n                \"<span>\",\n                \" <%- total_items_count %> total\",\n                \"</span>\"\n            ].join(\"\")\n        );\n    },\n\n    templateCollectionSelectModal: function() {\n        return _.template(\n            [\n                \"<div>\",\n                // elements selection\n                '<div class=\"library-modal-item\">',\n                \"<h4>Which datasets?</h4>\",\n                '<form class=\"form-inline\">',\n                '<label class=\"radio-inline\">',\n                '<input type=\"radio\" name=\"radio_elements\" id=\"selection_radio\" value=\"selection\" <% if (!selected_datasets) { %> disabled <% } else { %> checked <% } %> > current selection',\n                \"<% if (selected_datasets) { %>\",\n                \" (<%- selected_datasets %>)\",\n                \"<% } %>\",\n                \"</label>\",\n                '<label class=\"radio-inline\">',\n                '<input type=\"radio\" name=\"radio_elements\" id=\"folder_radio\" value=\"folder\" <% if (!selected_datasets) { %> checked <% } %> > all datasets in current folder',\n                \"</label>\",\n                \"</form>\",\n                \"</div>\",\n                // type selection\n                '<div class=\"library-modal-item\">',\n                \"<h4>Collection type</h4>\",\n                '<span class=\"library-collection-type-select\"/>',\n                \"<h5>Which type to choose?</h5>\",\n                \"<ul>\",\n                \"<li>\",\n                \"List: Generic collection which groups any number of datasets into a set; similar to file system folder.\",\n                \"</li>\",\n                \"<li>\",\n                \"Paired: Simple collection containing exactly two sequence datasets; one reverse and the other forward.\",\n                \"</li>\",\n                \"<li>\",\n                \"List of Pairs: Advanced collection containing any number of Pairs; imagine as Pair-type collections inside of a List-type collection.\",\n                \"</li>\",\n                \"</ul>\",\n                \"</div>\",\n                // history selection/creation\n                '<div class=\"library-modal-item\">',\n                \"<h4>Select history</h4>\",\n                '<span class=\"library-collection-history-select\"/>',\n                \" or create new: \",\n                '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" />',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    FolderToolbarView: FolderToolbarView\n};\n"]}