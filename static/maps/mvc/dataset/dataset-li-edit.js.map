{"version":3,"sources":["mvc/dataset/dataset-li-edit.js"],"names":["_super","DatasetListItemView","DatasetListItemEdit","extend","initialize","attributes","prototype","call","hasUser","purgeAllowed","tagsEditorShown","annotationEditorShown","_renderPrimaryActions","actions","model","get","NOT_VIEWABLE","concat","_renderEditButton","_renderDeleteButton","self","DISCARDED","purged","deleted","editBtnData","title","href","Galaxy","root","id","faIcon","classes","onclick","ev","router","preventDefault","push","dataset_id","disabled","_","contains","UPLOAD","NEW","deletedAlready","isDeletedOrPurged","$el","find","trigger","_renderDetails","$details","state","OK","FAILED_METADATA","_renderTags","_renderAnnotation","_makeDbkeyEditLink","_setUpBehaviors","_renderToolHelpButton","datasetID","jobID","creating_job","parseToolBuild","helpString","data","name","help","append","$","parseHTML","parseToolID","ajax","url","tool_id","done","fail","user","divString","length","toggle","console","log","_renderSecondaryActions","ERROR","unshift","_renderErrButton","_renderRerunButton","_renderVisualizationsButton","urls","rerun","target","linkTarget","job_id","visualizations","hasData","isEmpty","isObject","warn","$visualizations","templates","attr","_addScratchBookFn","addBack","$links","li","click","frame","active","add","stopPropagation","$where","view","tagsEditor","TagsEditor","el","onshowFirstTime","render","onshow","onhide","$activator","appendTo","annotationEditor","AnnotationEditor","editableDbkey","edit","replaceWith","events","clone","_clickUndeleteLink","undelete","_clickPurgeLink","confirm","purge","toString","modelString","warnings","failed_metadata","wrapTemplate","visualizationsTemplate"],"mappings":"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","file":"../../../scripts/mvc/dataset/dataset-li-edit.js","sourcesContent":["import STATES from \"mvc/dataset/states\";\nimport DATASET_LI from \"mvc/dataset/dataset-li\";\nimport TAGS from \"mvc/tag\";\nimport ANNOTATIONS from \"mvc/annotation\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET_LI.DatasetListItemView;\n/** @class Editing view for DatasetAssociation.\n */\nvar DatasetListItemEdit = _super.extend(\n    /** @lends DatasetListItemEdit.prototype */ {\n        /** set up: options */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n            this.hasUser = attributes.hasUser;\n\n            /** allow user purge of dataset files? */\n            this.purgeAllowed = attributes.purgeAllowed || false;\n\n            //TODO: move to HiddenUntilActivatedViewMixin\n            /** should the tags editor be shown or hidden initially? */\n            this.tagsEditorShown = attributes.tagsEditorShown || false;\n            /** should the tags editor be shown or hidden initially? */\n            this.annotationEditorShown = attributes.annotationEditorShown || false;\n        },\n\n        // ......................................................................... titlebar actions\n        /** In this override, add the other two primary actions: edit and delete */\n        _renderPrimaryActions: function() {\n            var actions = _super.prototype._renderPrimaryActions.call(this);\n            if (this.model.get(\"state\") === STATES.NOT_VIEWABLE) {\n                return actions;\n            }\n            // render the display, edit attr and delete icon-buttons\n            return _super.prototype._renderPrimaryActions\n                .call(this)\n                .concat([this._renderEditButton(), this._renderDeleteButton()]);\n        },\n\n        //TODO: move titleButtons into state renderers, remove state checks in the buttons\n\n        /** Render icon-button to edit the attributes (format, permissions, etc.) this dataset. */\n        _renderEditButton: function() {\n            var self = this;\n            // don't show edit while uploading, in-accessible\n            // DO show if in error (ala previous history panel)\n            if (this.model.get(\"state\") === STATES.DISCARDED || !this.model.get(\"accessible\")) {\n                return null;\n            }\n            var purged = this.model.get(\"purged\");\n            var deleted = this.model.get(\"deleted\");\n\n            var editBtnData = {\n                title: _l(\"Edit attributes\"),\n                href: `${Galaxy.root}datasets/edit?dataset_id=${this.model.attributes.id}`,\n                faIcon: \"fa-pencil\",\n                classes: \"edit-btn\",\n                onclick: function(ev) {\n                    if (Galaxy.router) {\n                        ev.preventDefault();\n                        Galaxy.router.push(\"datasets/edit\", {\n                            dataset_id: self.model.attributes.id\n                        });\n                    }\n                }\n            };\n\n            // disable if purged or deleted and explain why in the tooltip\n            if (deleted || purged) {\n                editBtnData.disabled = true;\n                if (purged) {\n                    editBtnData.title = _l(\"Cannot edit attributes of datasets removed from disk\");\n                } else if (deleted) {\n                    editBtnData.title = _l(\"Undelete dataset to edit attributes\");\n                }\n\n                // disable if still uploading or new\n            } else if (_.contains([STATES.UPLOAD, STATES.NEW], this.model.get(\"state\"))) {\n                editBtnData.disabled = true;\n                editBtnData.title = _l(\"This dataset is not yet editable\");\n            }\n            return faIconButton(editBtnData);\n        },\n\n        /** Render icon-button to delete this hda. */\n        _renderDeleteButton: function() {\n            // don't show delete if...\n            if (!this.model.get(\"accessible\")) {\n                return null;\n            }\n\n            var self = this;\n            var deletedAlready = this.model.isDeletedOrPurged();\n            return faIconButton({\n                title: !deletedAlready ? _l(\"Delete\") : _l(\"Dataset is already deleted\"),\n                disabled: deletedAlready,\n                faIcon: \"fa-times\",\n                classes: \"delete-btn\",\n                onclick: function() {\n                    // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                    self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                    self.model[\"delete\"]();\n                }\n            });\n        },\n\n        // ......................................................................... details\n        /** In this override, add tags and annotations controls, make the ? dbkey a link to editing page */\n        _renderDetails: function() {\n            //TODO: generalize to be allow different details for each state\n            var $details = _super.prototype._renderDetails.call(this);\n\n            var state = this.model.get(\"state\");\n\n            if (!this.model.isDeletedOrPurged() && _.contains([STATES.OK, STATES.FAILED_METADATA], state)) {\n                this._renderTags($details);\n                this._renderAnnotation($details);\n                this._makeDbkeyEditLink($details);\n            }\n\n            this._setUpBehaviors($details);\n            return $details;\n        },\n\n        /**************************************************************************\n         * Render help button to show tool help text without rerunning the tool.\n         * Issue #2100\n         */\n        _renderToolHelpButton: function() {\n            var datasetID = this.model.attributes.dataset_id;\n            var jobID = this.model.attributes.creating_job;\n            var self = this;\n\n            var parseToolBuild = data => {\n                var helpString = `<div id=\"thdiv-${datasetID}\" class=\"toolhelp\">`;\n                if (data.name && data.help) {\n                    helpString += `<strong>Tool help for ${data.name}</strong><hr/>`;\n                    helpString += data.help;\n                } else {\n                    helpString += \"<strong>Tool help is unavailable for this dataset.</strong><hr/>\";\n                }\n                helpString += \"</div>\";\n                self.$el.find(\".details\").append($.parseHTML(helpString));\n            };\n            var parseToolID = data => {\n                $.ajax({\n                    url: `${Galaxy.root}api/tools/${data.tool_id}/build`\n                })\n                    .done(data => {\n                        parseToolBuild(data);\n                    })\n                    .fail(() => {\n                        parseToolBuild({});\n                    });\n            };\n            if (Galaxy.user.id === null) {\n                return null;\n            }\n            return faIconButton({\n                title: _l(\"Tool Help\"),\n                classes: \"icon-btn\",\n                href: \"#\",\n                faIcon: \"fa-question\",\n                onclick: function() {\n                    var divString = `thdiv-${datasetID}`;\n                    if (self.$el.find(\".toolhelp\").length > 0) {\n                        self.$el.find(\".toolhelp\").toggle();\n                    } else {\n                        $.ajax({\n                            url: `${Galaxy.root}api/jobs/${jobID}`\n                        })\n                            .done(data => {\n                                parseToolID(data);\n                            })\n                            .fail(() => {\n                                console.log(\n                                    `Failed at recovering job information from the  Galaxy API for job id \"${jobID}\".`\n                                );\n                            });\n                    }\n                }\n            });\n        },\n        //*************************************************************************\n\n        /** Add less commonly used actions in the details section based on state */\n        _renderSecondaryActions: function() {\n            var actions = _super.prototype._renderSecondaryActions.call(this);\n            switch (this.model.get(\"state\")) {\n                case STATES.UPLOAD:\n                case STATES.NOT_VIEWABLE:\n                    return actions;\n                case STATES.ERROR:\n                    // error button comes first\n                    actions.unshift(this._renderErrButton());\n                    return actions.concat([this._renderRerunButton(), this._renderToolHelpButton()]);\n                case STATES.OK:\n                case STATES.FAILED_METADATA:\n                    return actions.concat([\n                        this._renderRerunButton(),\n                        this._renderVisualizationsButton(),\n                        this._renderToolHelpButton()\n                    ]);\n            }\n            return actions.concat([this._renderRerunButton(), this._renderToolHelpButton()]);\n        },\n\n        /** Render icon-button to report an error on this dataset to the galaxy admin. */\n        _renderErrButton: function() {\n            var self = this;\n            return faIconButton({\n                title: _l(\"View or report this error\"),\n                href: `${Galaxy.root}datasets/error?dataset_id=${this.model.attributes.id}`,\n                classes: \"report-error-btn\",\n                faIcon: \"fa-bug\",\n                onclick: function(ev) {\n                    if (Galaxy.router) {\n                        ev.preventDefault();\n                        Galaxy.router.push(\"datasets/error\", {\n                            dataset_id: self.model.attributes.id\n                        });\n                    }\n                }\n            });\n        },\n\n        /** Render icon-button to re-run the job that created this dataset. */\n        _renderRerunButton: function() {\n            var creating_job = this.model.get(\"creating_job\");\n            if (this.model.get(\"rerunnable\")) {\n                return faIconButton({\n                    title: _l(\"Run this job again\"),\n                    href: this.model.urls.rerun,\n                    classes: \"rerun-btn\",\n                    target: this.linkTarget,\n                    faIcon: \"fa-refresh\",\n                    onclick: function(ev) {\n                        if (Galaxy.router) {\n                            ev.preventDefault();\n                            Galaxy.router.push(\"/\", {\n                                job_id: creating_job\n                            });\n                        }\n                    }\n                });\n            }\n        },\n\n        /** Render an icon-button or popupmenu of links based on the applicable visualizations */\n        _renderVisualizationsButton: function() {\n            //TODO: someday - lazyload visualizations\n            var visualizations = this.model.get(\"visualizations\");\n            if (this.model.isDeletedOrPurged() || !this.hasUser || !this.model.hasData() || _.isEmpty(visualizations)) {\n                return null;\n            }\n            if (!_.isObject(visualizations[0])) {\n                this.warn(\"Visualizations have been switched off\");\n                return null;\n            }\n\n            var $visualizations = $(this.templates.visualizations(visualizations, this));\n            //HACK: need to re-write those directed at galaxy_main with linkTarget\n            $visualizations.find('[target=\"galaxy_main\"]').attr(\"target\", this.linkTarget);\n            // use addBack here to include the root $visualizations elem (for the case of 1 visualization)\n            this._addScratchBookFn($visualizations.find(\".visualization-link\").addBack(\".visualization-link\"));\n            return $visualizations;\n        },\n\n        /** add scratchbook functionality to visualization links */\n        _addScratchBookFn: function($links) {\n            var li = this;\n            $links.click(function(ev) {\n                if (Galaxy.frame && Galaxy.frame.active) {\n                    Galaxy.frame.add({\n                        title: _l(\"Visualization\"),\n                        url: $(this).attr(\"href\")\n                    });\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n            });\n        },\n\n        //TODO: if possible move these to readonly view - but display the owner's tags/annotation (no edit)\n        /** Render the tags list/control */\n        _renderTags: function($where) {\n            if (!this.hasUser) {\n                return;\n            }\n            var view = this;\n            this.tagsEditor = new TAGS.TagsEditor({\n                model: this.model,\n                el: $where.find(\".tags-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // persist state on the hda view (and not the editor) since these are currently re-created each time\n                onshow: function() {\n                    view.tagsEditorShown = true;\n                },\n                onhide: function() {\n                    view.tagsEditorShown = false;\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit dataset tags\"),\n                    classes: \"tag-btn\",\n                    faIcon: \"fa-tags\"\n                }).appendTo($where.find(\".actions .right\"))\n            });\n            if (this.tagsEditorShown) {\n                this.tagsEditor.toggle(true);\n            }\n        },\n\n        /** Render the annotation display/control */\n        _renderAnnotation: function($where) {\n            if (!this.hasUser) {\n                return;\n            }\n            var view = this;\n            this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n                model: this.model,\n                el: $where.find(\".annotation-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // persist state on the hda view (and not the editor) since these are currently re-created each time\n                onshow: function() {\n                    view.annotationEditorShown = true;\n                },\n                onhide: function() {\n                    view.annotationEditorShown = false;\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit dataset annotation\"),\n                    classes: \"annotate-btn\",\n                    faIcon: \"fa-comment\"\n                }).appendTo($where.find(\".actions .right\"))\n            });\n            if (this.annotationEditorShown) {\n                this.annotationEditor.toggle(true);\n            }\n        },\n\n        /** If the format/dbkey/genome_build isn't set, make the display a link to the edit page */\n        _makeDbkeyEditLink: function($details) {\n            // make the dbkey a link to editing\n            if (this.model.get(\"metadata_dbkey\") === \"?\" && !this.model.isDeletedOrPurged()) {\n                var editableDbkey = $('<a class=\"value\">?</a>')\n                    .attr(\"href\", this.model.urls.edit)\n                    .attr(\"target\", \"_top\");\n                $details.find(\".dbkey .value\").replaceWith(editableDbkey);\n            }\n        },\n\n        // ......................................................................... events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .undelete-link\": \"_clickUndeleteLink\",\n            \"click .purge-link\": \"_clickPurgeLink\",\n\n            \"click .edit-btn\": function(ev) {\n                this.trigger(\"edit\", this, ev);\n            },\n            \"click .delete-btn\": function(ev) {\n                this.trigger(\"delete\", this, ev);\n            },\n            \"click .rerun-btn\": function(ev) {\n                this.trigger(\"rerun\", this, ev);\n            },\n            \"click .report-err-btn\": function(ev) {\n                this.trigger(\"report-err\", this, ev);\n            },\n            \"click .visualization-btn\": function(ev) {\n                this.trigger(\"visualize\", this, ev);\n            },\n            \"click .dbkey a\": function(ev) {\n                this.trigger(\"edit\", this, ev);\n            }\n        }),\n\n        /** listener for item undelete (in the messages section) */\n        _clickUndeleteLink: function(ev) {\n            this.model.undelete();\n            return false;\n        },\n\n        /** listener for item purge (in the messages section) */\n        _clickPurgeLink: function(ev) {\n            if (confirm(_l(\"This will permanently remove the data in your dataset. Are you sure?\"))) {\n                this.model.purge();\n            }\n            return false;\n        },\n\n        // ......................................................................... misc\n        /** string rep */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `HDAEditView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemEdit.prototype.templates = (() => {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        failed_metadata: BASE_MVC.wrapTemplate(\n            [\n                // in this override, provide a link to the edit page\n                '<% if( dataset.state === \"failed_metadata\" ){ %>',\n                '<div class=\"failed_metadata-warning warningmessagesmall\">',\n                _l(\"An error occurred setting the metadata for this dataset\"),\n                '<br /><a href=\"<%- dataset.urls.edit %>\" target=\"_top\">',\n                _l(\"Set it manually or retry auto-detection\"),\n                \"</a>\",\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        ),\n\n        deleted: BASE_MVC.wrapTemplate(\n            [\n                // in this override, provide links to undelete or purge the dataset\n                \"<% if( dataset.deleted && !dataset.purged ){ %>\",\n                // deleted not purged\n                '<div class=\"deleted-msg warningmessagesmall\">',\n                _l(\"This dataset has been deleted\"),\n                '<br /><a class=\"undelete-link\" href=\"javascript:void(0);\">',\n                _l(\"Undelete it\"),\n                \"</a>\",\n                \"<% if( view.purgeAllowed ){ %>\",\n                '<br /><a class=\"purge-link\" href=\"javascript:void(0);\">',\n                _l(\"Permanently remove it from disk\"),\n                \"</a>\",\n                \"<% } %>\",\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        )\n    });\n\n    var visualizationsTemplate = BASE_MVC.wrapTemplate(\n        [\n            \"<% if( visualizations.length === 1 ){ %>\",\n            '<a class=\"visualization-link icon-btn\" href=\"<%- visualizations[0].href %>\"',\n            ' target=\"<%- visualizations[0].target %>\" title=\"',\n            _l(\"Visualize in\"),\n            ' <%- visualizations[0].html %>\">',\n            '<span class=\"fa fa-bar-chart-o\"></span>',\n            \"</a>\",\n\n            \"<% } else { %>\",\n            '<div class=\"visualizations-dropdown dropdown icon-btn\">',\n            '<a data-toggle=\"dropdown\" title=\"',\n            _l(\"Visualize\"),\n            '\">',\n            '<span class=\"fa fa-bar-chart-o\"></span>',\n            \"</a>\",\n            '<ul class=\"dropdown-menu\" role=\"menu\">',\n            \"<% _.each( visualizations, function( visualization ){ %>\",\n            '<li><a class=\"visualization-link\" href=\"<%- visualization.href %>\"',\n            ' target=\"<%- visualization.target %>\">',\n            \"<%- visualization.html %>\",\n            \"</a></li>\",\n            \"<% }); %>\",\n            \"</ul>\",\n            \"</div>\",\n            \"<% } %>\"\n        ],\n        \"visualizations\"\n    );\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        visualizations: visualizationsTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    DatasetListItemEdit: DatasetListItemEdit\n};\n"]}