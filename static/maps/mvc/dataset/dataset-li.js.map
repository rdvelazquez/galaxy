{"version":3,"sources":["mvc/dataset/dataset-li.js"],"names":["logNamespace","_super","ListItemView","DatasetListItemView","extend","_logNamespace","className","prototype","id","model","get","join","initialize","attributes","logger","log","call","linkTarget","_setUpListeners","self","listenTo","change","changedAttributes","state","inReadyState","expanded","hasDetails","fetch","silent","done","render","_","has","changed","keys","length","$","html","_renderNametags","_fetchModelDetails","view","jQuery","when","remove","speed","callback","fxSpeed","$el","fadeOut","Backbone","View","_swapNewRender","$newRender","addClass","_renderPrimaryActions","_renderDisplayButton","NOT_VIEWABLE","DISCARDED","displayBtnData","target","classes","disabled","title","UPLOAD","NEW","href","urls","display","onclick","Galaxy","frame","active","addDataset","ev","preventDefault","faIcon","_renderDetails","templates","noAccess","toJSON","$details","find","empty","append","_renderSecondaryActions","_renderSummary","prepend","_renderDetailMessages","_renderDisplayApplications","_setUpBehaviors","json","summaryRenderFn","summaries","unknown","$warnings","each","detailMessages","templateFn","isDeletedOrPurged","displayApplications","debug","OK","FAILED_METADATA","ERROR","_renderDownloadButton","_renderShowParamsButton","show_params","add","url","stopPropagation","hasData","isEmpty","_renderMetaFileDownloadButton","download","map","meta_download","meta_file","file_type","tpl","template","tags","events","clone","trigger","toString","modelString","warnings","failed_metadata","wrapTemplate","error","purged","deleted","detailsTemplate","noAccessTemplate","summaryTemplates","QUEUED","RUNNING","SETTING_METADATA","PAUSED","EMPTY","detailMessageTemplates","resubmitted","displayApplicationsTemplate","details"],"mappings":"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","file":"../../../scripts/mvc/dataset/dataset-li.js","sourcesContent":["import LIST_ITEM from \"mvc/list/list-item\";\nimport STATES from \"mvc/dataset/states\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"dataset\";\n/*==============================================================================\nTODO:\n    straighten out state rendering and templates used\n    inaccessible/STATES.NOT_VIEWABLE is a special case\n    simplify button rendering\n\n==============================================================================*/\nvar _super = LIST_ITEM.ListItemView;\n/** @class Read only list view for either LDDAs, HDAs, or HDADCEs.\n *      Roughly, any DatasetInstance (and not a raw Dataset).\n */\nvar DatasetListItemView = _super.extend(\n    /** @lends DatasetListItemView.prototype */ {\n        _logNamespace: logNamespace,\n\n        className: `${_super.prototype.className} dataset`,\n        //TODO:?? doesn't exactly match an hda's type_id\n        id: function() {\n            return [\"dataset\", this.model.get(\"id\")].join(\"-\");\n        },\n\n        /** Set up: instance vars, options, and event handlers */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(`${this}.initialize:`, attributes);\n            _super.prototype.initialize.call(this, attributes);\n\n            /** where should pages from links be displayed? (default to new tab/window) */\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            var self = this;\n\n            // re-rendering on any model changes\n            return self.listenTo(self.model, {\n                change: function(model) {\n                    // if the model moved into the ready state and is expanded without details, fetch those details now\n                    if (\n                        self.model.changedAttributes().state &&\n                        self.model.inReadyState() &&\n                        self.expanded &&\n                        !self.model.hasDetails()\n                    ) {\n                        // normally, will render automatically (due to fetch -> change),\n                        // but! setting_metadata sometimes doesn't cause any other changes besides state\n                        // so, not rendering causes it to seem frozen in setting_metadata state\n                        self.model.fetch({ silent: true }).done(() => {\n                            self.render();\n                        });\n                    } else {\n                        if (_.has(model.changed, \"tags\") && _.keys(model.changed).length === 1) {\n                            // If only the tags have changed, rerender specifically\n                            // the titlebar region.  Otherwise default to the full\n                            // render.\n                            self.$(\".nametags\").html(self._renderNametags());\n                        } else {\n                            self.render();\n                        }\n                    }\n                }\n            });\n        },\n\n        // ......................................................................... expandable\n        /** In this override, only get details if in the ready state, get rerunnable if in other states.\n         *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n         */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        // ......................................................................... removal\n        /** Remove this view's html from the DOM and remove all event listeners.\n         *  @param {Number or String} speed jq effect speed\n         *  @param {Function} callback      an optional function called when removal is done (scoped to this view)\n         */\n        remove: function(speed, callback) {\n            var view = this;\n            speed = speed || this.fxSpeed;\n            this.$el.fadeOut(speed, () => {\n                Backbone.View.prototype.remove.call(view);\n                if (callback) {\n                    callback.call(view);\n                }\n            });\n        },\n\n        // ......................................................................... rendering\n        /* TODO:\n        dataset states are the issue primarily making dataset rendering complex\n            each state should have it's own way of displaying/set of details\n            often with different actions that can be applied\n        throw in deleted/purged/visible and things get complicated easily\n        I've considered (a couple of times) - creating a view for each state\n            - but recreating the view during an update...seems wrong\n    */\n        /** In this override, add the dataset state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            if (this.model.has(\"state\")) {\n                this.$el.addClass(`state-${this.model.get(\"state\")}`);\n            }\n            return this.$el;\n        },\n\n        // ................................................................................ titlebar\n        /** In this override, add the dataset display button. */\n        _renderPrimaryActions: function() {\n            // render just the display for read-only\n            return [this._renderDisplayButton()];\n        },\n\n        /** Render icon-button to display dataset data */\n        _renderDisplayButton: function() {\n            // don't show display if not viewable or not accessible\n            var state = this.model.get(\"state\");\n            if (state === STATES.NOT_VIEWABLE || state === STATES.DISCARDED || !this.model.get(\"accessible\")) {\n                return null;\n            }\n\n            var displayBtnData = {\n                target: this.linkTarget,\n                classes: \"display-btn\"\n            };\n\n            // show a disabled display if the data's been purged\n            if (this.model.get(\"purged\")) {\n                displayBtnData.disabled = true;\n                displayBtnData.title = _l(\"Cannot display datasets removed from disk\");\n\n                // disable if still uploading\n            } else if (state === STATES.UPLOAD) {\n                displayBtnData.disabled = true;\n                displayBtnData.title = _l(\"This dataset must finish uploading before it can be viewed\");\n\n                // disable if still new\n            } else if (state === STATES.NEW) {\n                displayBtnData.disabled = true;\n                displayBtnData.title = _l(\"This dataset is not yet viewable\");\n            } else {\n                displayBtnData.title = _l(\"View data\");\n\n                // default link for dataset\n                displayBtnData.href = this.model.urls.display;\n\n                // add frame manager option onclick event\n                var self = this;\n                displayBtnData.onclick = ev => {\n                    if (Galaxy.frame && Galaxy.frame.active) {\n                        // Add dataset to frames.\n                        Galaxy.frame.addDataset(self.model.get(\"id\"));\n                        ev.preventDefault();\n                    }\n                };\n            }\n            displayBtnData.faIcon = \"fa-eye\";\n            return faIconButton(displayBtnData);\n        },\n\n        // ......................................................................... rendering details\n        /** Render the enclosing div of the hda body and, if expanded, the html in the body\n         *  @returns {jQuery} rendered DOM\n         */\n        _renderDetails: function() {\n            //TODO: generalize to be allow different details for each state\n\n            // no access - render nothing but a message\n            if (this.model.get(\"state\") === STATES.NOT_VIEWABLE) {\n                return $(this.templates.noAccess(this.model.toJSON(), this));\n            }\n\n            var $details = _super.prototype._renderDetails.call(this);\n            $details\n                .find(\".actions .left\")\n                .empty()\n                .append(this._renderSecondaryActions());\n            $details\n                .find(\".summary\")\n                .html(this._renderSummary())\n                .prepend(this._renderDetailMessages());\n            $details.find(\".display-applications\").html(this._renderDisplayApplications());\n\n            this._setUpBehaviors($details);\n            return $details;\n        },\n\n        /** Defer to the appropo summary rendering fn based on state */\n        _renderSummary: function() {\n            var json = this.model.toJSON();\n            var summaryRenderFn = this.templates.summaries[json.state];\n            summaryRenderFn = summaryRenderFn || this.templates.summaries.unknown;\n            return summaryRenderFn(json, this);\n        },\n\n        /** Render messages to be displayed only when the details are shown */\n        _renderDetailMessages: function() {\n            var view = this;\n            var $warnings = $('<div class=\"detail-messages\"></div>');\n            var json = view.model.toJSON();\n            //TODO:! unordered (map)\n            _.each(view.templates.detailMessages, templateFn => {\n                $warnings.append($(templateFn(json, view)));\n            });\n            return $warnings;\n        },\n\n        /** Render the external display application links */\n        _renderDisplayApplications: function() {\n            if (this.model.isDeletedOrPurged()) {\n                return \"\";\n            }\n            // render both old and new display apps using the same template\n            return [\n                this.templates.displayApplications(this.model.get(\"display_apps\"), this),\n                this.templates.displayApplications(this.model.get(\"display_types\"), this)\n            ].join(\"\");\n        },\n\n        // ......................................................................... secondary/details actions\n        /** A series of links/buttons for less commonly used actions: re-run, info, etc. */\n        _renderSecondaryActions: function() {\n            this.debug(\"_renderSecondaryActions\");\n            switch (this.model.get(\"state\")) {\n                case STATES.NOT_VIEWABLE:\n                    return [];\n                case STATES.OK:\n                case STATES.FAILED_METADATA:\n                case STATES.ERROR:\n                    return [this._renderDownloadButton(), this._renderShowParamsButton()];\n            }\n            return [this._renderShowParamsButton()];\n        },\n\n        /** Render icon-button to show the input and output (stdout/err) for the job that created this.\n         *  @returns {jQuery} rendered DOM\n         */\n        _renderShowParamsButton: function() {\n            // gen. safe to show in all cases\n            return faIconButton({\n                title: _l(\"View details\"),\n                classes: \"params-btn\",\n                href: this.model.urls.show_params,\n                target: this.linkTarget,\n                faIcon: \"fa-info-circle\",\n                onclick: function(ev) {\n                    if (Galaxy.frame && Galaxy.frame.active) {\n                        Galaxy.frame.add({\n                            title: _l(\"Dataset details\"),\n                            url: this.href\n                        });\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                    }\n                }\n            });\n        },\n\n        /** Render icon-button/popupmenu to download the data (and/or the associated meta files (bai, etc.)) for this.\n         *  @returns {jQuery} rendered DOM\n         */\n        _renderDownloadButton: function() {\n            // don't show anything if the data's been purged\n            if (this.model.get(\"purged\") || !this.model.hasData()) {\n                return null;\n            }\n\n            // return either: a popupmenu with links to download assoc. meta files (if there are meta files)\n            //  or a single download icon-button (if there are no meta files)\n            if (!_.isEmpty(this.model.get(\"meta_files\"))) {\n                return this._renderMetaFileDownloadButton();\n            }\n\n            return $(`\n                <a class=\"download-btn icon-btn\" href=\"${this.model.urls.download}\" title=\"${_l(\"Download\")}\">\n                    <span class=\"fa fa-floppy-o\"></span>\n                </a>`);\n        },\n\n        /** Render the download button which opens a dropdown with links to download assoc. meta files (indices, etc.) */\n        _renderMetaFileDownloadButton: function() {\n            var urls = this.model.urls;\n            return $(`\n                <div class=\"metafile-dropdown dropdown\">\n                    <a class=\"download-btn icon-btn\" href=\"${urls.download}\" data-toggle=\"dropdown\" title=\"${_l(\n                \"Download\"\n            )}\">\n                        <span class=\"fa fa-floppy-o\"></span>\n                    </a>\n                    <ul class=\"dropdown-menu\" role=\"menu\">\n                        <li>\n                            <a href=\"${urls.download}\">\n                                ${_l(\"Download dataset\")}\n                            </a>\n                        </li>\n                        ${_.map(\n                            this.model.get(\"meta_files\"),\n                            meta_file =>\n                                `<li>\n                                    <a href=\"${urls.meta_download + meta_file.file_type}\">\n                                        ${_l(\"Download\")} ${meta_file.file_type}\n                                    </a>\n                                </li>`\n                        )}\n                    </ul>\n                </div>`);\n        },\n\n        _renderNametags: function() {\n            var tpl = _.template(\n                [\n                    \"<% _.each(_.sortBy(_.uniq(tags), function(x) { return x }), function(tag){ %>\",\n                    '<% if (tag.indexOf(\"name:\") == 0){ %>',\n                    '<span class=\"label label-info\"><%- tag.slice(5) %></span>',\n                    \"<% } %>\",\n                    \"<% }); %>\"\n                ].join(\"\")\n            );\n            return tpl({ tags: this.model.get(\"tags\") });\n        },\n\n        // ......................................................................... misc\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .display-btn\": function(ev) {\n                this.trigger(\"display\", this, ev);\n            },\n            \"click .params-btn\": function(ev) {\n                this.trigger(\"params\", this, ev);\n            },\n            \"click .download-btn\": function(ev) {\n                this.trigger(\"download\", this, ev);\n            }\n        }),\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DatasetListItemView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemView.prototype.templates = (() => {\n    //TODO: move to require text! plugin\n\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        failed_metadata: BASE_MVC.wrapTemplate([\n            // failed metadata is rendered as a warning on an otherwise ok dataset view\n            '<% if( model.state === \"failed_metadata\" ){ %>',\n            '<div class=\"warningmessagesmall\">',\n            _l(\"An error occurred setting the metadata for this dataset\"),\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        error: BASE_MVC.wrapTemplate([\n            // error during index fetch - show error on dataset\n            \"<% if( model.error ){ %>\",\n            '<div class=\"errormessagesmall\">',\n            _l(\"There was an error getting the data for this dataset\"),\n            \": <%- model.error %>\",\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        purged: BASE_MVC.wrapTemplate([\n            \"<% if( model.purged ){ %>\",\n            '<div class=\"purged-msg warningmessagesmall\">',\n            _l(\"This dataset has been deleted and removed from disk\"),\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        deleted: BASE_MVC.wrapTemplate([\n            // deleted not purged\n            \"<% if( model.deleted && !model.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This dataset has been deleted\"),\n            \"</div>\",\n            \"<% } %>\"\n        ])\n\n        //NOTE: hidden warning is only needed for HDAs\n    });\n\n    var detailsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"details\">',\n            '<div class=\"summary\"></div>',\n\n            '<div class=\"actions clear\">',\n            '<div class=\"left\"></div>',\n            '<div class=\"right\"></div>',\n            \"</div>\",\n\n            // do not display tags, annotation, display apps, or peek when deleted\n            \"<% if( !dataset.deleted && !dataset.purged ){ %>\",\n            '<div class=\"tags-display\"></div>',\n            '<div class=\"annotation-display\"></div>',\n\n            '<div class=\"display-applications\"></div>',\n\n            \"<% if( dataset.peek ){ %>\",\n            '<pre class=\"dataset-peek\"><%= dataset.peek %></pre>',\n            \"<% } %>\",\n            \"<% } %>\",\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n\n    var noAccessTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"details\">',\n            '<div class=\"summary\">',\n            _l(\"You do not have permission to view this dataset\"),\n            \"</div>\",\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n\n    //TODO: still toooooooooooooo complex - rework\n    var summaryTemplates = {};\n    summaryTemplates[STATES.OK] = summaryTemplates[STATES.FAILED_METADATA] = BASE_MVC.wrapTemplate(\n        [\n            \"<% if( dataset.misc_blurb ){ %>\",\n            '<div class=\"blurb\">',\n            '<span class=\"value\"><%- dataset.misc_blurb %></span>',\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( dataset.file_ext ){ %>\",\n            '<div class=\"datatype\">',\n            '<label class=\"prompt\">',\n            _l(\"format\"),\n            \"</label>\",\n            '<span class=\"value\"><%- dataset.file_ext %></span>',\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( dataset.metadata_dbkey ){ %>\",\n            '<div class=\"dbkey\">',\n            '<label class=\"prompt\">',\n            _l(\"database\"),\n            \"</label>\",\n            '<span class=\"value\">',\n            \"<%- dataset.metadata_dbkey %>\",\n            \"</span>\",\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( dataset.misc_info ){ %>\",\n            '<div class=\"info\">',\n            '<span class=\"value\"><%- dataset.misc_info %></span>',\n            \"</div>\",\n            \"<% } %>\"\n        ],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.NEW] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This is a new dataset and not all of its data are available yet\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.NOT_VIEWABLE] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"You do not have permission to view this dataset\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.DISCARDED] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"The job creating this dataset was cancelled before completion\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.QUEUED] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This job is waiting to run\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.RUNNING] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This job is currently running\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.UPLOAD] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This dataset is currently uploading\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.SETTING_METADATA] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"Metadata is being auto-detected\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.PAUSED] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l('This job is paused. Use the \"Resume Paused Jobs\" in the history menu to resume'), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.ERROR] = BASE_MVC.wrapTemplate(\n        [\n            \"<% if( !dataset.purged ){ %>\",\n            \"<div><%- dataset.misc_blurb %></div>\",\n            \"<% } %>\",\n            '<span class=\"help-text\">',\n            _l(\"An error occurred with this dataset\"),\n            \":</span>\",\n            '<div class=\"job-error-text\"><%- dataset.misc_info %></div>'\n        ],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.EMPTY] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"No data\"), \": <i><%- dataset.misc_blurb %></i></div>\"],\n        \"dataset\"\n    );\n    summaryTemplates.unknown = BASE_MVC.wrapTemplate(\n        ['<div>Error: unknown dataset state: \"<%- dataset.state %>\"</div>'],\n        \"dataset\"\n    );\n\n    // messages to be displayed only within the details section ('below the fold')\n    var detailMessageTemplates = {\n        resubmitted: BASE_MVC.wrapTemplate([\n            // deleted not purged\n            \"<% if( model.resubmitted ){ %>\",\n            '<div class=\"resubmitted-msg infomessagesmall\">',\n            _l(\"The job creating this dataset has been resubmitted\"),\n            \"</div>\",\n            \"<% } %>\"\n        ])\n    };\n\n    // this is applied to both old and new style display apps\n    var displayApplicationsTemplate = BASE_MVC.wrapTemplate(\n        [\n            \"<% _.each( apps, function( app ){ %>\",\n            '<div class=\"display-application\">',\n            '<span class=\"display-application-location\"><%- app.label %></span> ',\n            '<span class=\"display-application-links\">',\n            \"<% _.each( app.links, function( link ){ %>\",\n            '<a target=\"<%- link.target %>\" href=\"<%- link.href %>\">',\n            \"<% print( _l( link.text ) ); %>\",\n            \"</a> \",\n            \"<% }); %>\",\n            \"</span>\",\n            \"</div>\",\n            \"<% }); %>\"\n        ],\n        \"apps\"\n    );\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        details: detailsTemplate,\n        noAccess: noAccessTemplate,\n        summaries: summaryTemplates,\n        detailMessages: detailMessageTemplates,\n        displayApplications: displayApplicationsTemplate\n    });\n})();\n\n// ============================================================================\nexport default {\n    DatasetListItemView: DatasetListItemView\n};\n"]}