{"version":3,"sources":["mvc/dataset/dataset-list.js"],"names":["logNamespace","_super","ListPanel","DatasetList","extend","_logNamespace","viewClass","DatasetListItemView","className","prototype","noneFoundMsg","initialize","attributes","call","toString","collection"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAKA,QAAIA,eAAe,SAAnB;AACA;;;;AAIA,QAAIC,SAAS,mBAAUC,SAAvB;AACA;;AAEA,QAAIC,cAAcF,OAAOG,MAAP;AACd,uCAAoC;AAChCC,uBAAeL,YADiB;;AAGhC;AACAM,mBAAW,oBAAWC,mBAJU;AAKhCC,mBAAcP,OAAOQ,SAAP,CAAiBD,SAA/B,kBALgC;;AAOhC;AACAE,sBAAc,4BAAG,4BAAH,CARkB;;AAUhC;AACA;;;AAGAC,oBAAY,oBAASC,UAAT,EAAqB;AAC7BX,mBAAOQ,SAAP,CAAiBE,UAAjB,CAA4BE,IAA5B,CAAiC,IAAjC,EAAuCD,UAAvC;AACH,SAhB+B;;AAkBhC;AACAE,kBAAU,oBAAW;AACjB,oCAAsB,KAAKC,UAA3B;AACH;AArB+B,KADtB,CAAlB;;AA0BA;sBACe;AACXZ,qBAAaA;AADF,K","file":"../../../scripts/mvc/dataset/dataset-list.js","sourcesContent":["import LIST_VIEW from \"mvc/list/list-view\";\nimport DATASET_LI from \"mvc/dataset/dataset-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"dataset\";\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = LIST_VIEW.ListPanel;\n/** @class  non-editable, read-only View/Controller for a list of datasets.\n */\nvar DatasetList = _super.extend(\n    /** @lends DatasetList.prototype */ {\n        _logNamespace: logNamespace,\n\n        /** class to use for constructing the sub-views */\n        viewClass: DATASET_LI.DatasetListItemView,\n        className: `${_super.prototype.className} dataset-list`,\n\n        /** string to no hdas match the search terms */\n        noneFoundMsg: _l(\"No matching datasets found\"),\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n         *  @param {Object} attributes optional settings for the panel\n         */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n        },\n\n        /** Return a string rep of the history */\n        toString: function() {\n            return `DatasetList(${this.collection})`;\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    DatasetList: DatasetList\n};\n"]}