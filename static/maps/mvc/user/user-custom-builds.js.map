{"version":3,"sources":["mvc/user/user-custom-builds.js"],"names":["Collection","Backbone","extend","comparator","a","b","get","View","initialize","options","self","history_id","Galaxy","currHistoryPanel","model","id","Model","url","root","collection","user","message","Message","installed_builds","Select","optional","onchange","value","empty_text","error_text","table","cls","selectable","addHeader","appendHeader","setElement","$","append","text","$el","$installed","addClass","$form","$help","listenTo","_renderTable","_renderForm","fetch","render","delAll","sort","each","add","undefined","ButtonIcon","icon","tooltip","onclick","destroy","initial_type","form","inputs","type","name","label","help","test_param","data","cases","area","buttons","save","Button","title","create","update","status","wait","success","response","error","err","responseJSON","err_msg","input_id","match","input_field","field_list","_renderHelp","empty","length","show","hide","len_type","html","_templateFasta","_templateLen"],"mappings":"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","file":"../../../scripts/mvc/user/user-custom-builds.js","sourcesContent":["import _l from \"utils/localization\";\n/** This class renders the chart configuration form. */\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport Table from \"mvc/ui/ui-table\";\nvar Collection = Backbone.Collection.extend({\n    comparator: function(a, b) {\n        a = a.get(\"name\");\n        b = b.get(\"name\");\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n});\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        var history_id = Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n        this.model = new Backbone.Model();\n        this.model.url = `${Galaxy.root}api/histories/${history_id}/custom_builds_metadata`;\n        this.collection = new Collection();\n        this.collection.url = `${Galaxy.root}api/users/${Galaxy.user.id}/custom_builds`;\n        this.message = new Ui.Message({});\n        this.installed_builds = new Ui.Select.View({\n            optional: true,\n            onchange: function() {\n                self.installed_builds.value(null);\n            },\n            empty_text: \"List of available builds:\",\n            error_text: \"No system installed builds available.\"\n        });\n        this.table = new Table.View({ cls: \"grid\", selectable: false });\n        this.table.addHeader(\"Name\");\n        this.table.addHeader(\"Key\");\n        this.table.addHeader(\"Number of chroms/contigs\");\n        this.table.addHeader(\"\");\n        this.table.appendHeader();\n        this.setElement(\n            $(\"<div/>\")\n                .append($(\"<h4/>\").text(\"Current Custom Builds\"))\n                .append(this.table.$el)\n                .append(\n                    (this.$installed = $(\"<div/>\")\n                        .append(\n                            $(\"<h4/>\")\n                                .text(\"System Installed Builds\")\n                                .addClass(\"ui-margin-top\")\n                        )\n                        .append(this.installed_builds.$el))\n                )\n                .append(\n                    $(\"<h4/>\")\n                        .text(\"Add a Custom Build\")\n                        .addClass(\"ui-margin-top\")\n                )\n                .append(\n                    $(\"<span/>\")\n                        .addClass(\"ui-column\")\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"ui-column-left\")\n                                .append(this.message.$el)\n                                .append((this.$form = $(\"<div/>\").addClass(\"ui-margin-top\")))\n                        )\n                        .append((this.$help = $(\"<div/>\").addClass(\"ui-column-right\")))\n                )\n        );\n        this.listenTo(this.collection, \"add remove reset\", () => {\n            self._renderTable();\n        });\n        this.listenTo(this.model, \"change\", () => {\n            self._renderForm();\n        });\n        this.collection.fetch();\n        this.model.fetch();\n    },\n\n    render: function() {\n        this._renderTable();\n        this._renderForm();\n    },\n\n    _renderTable: function() {\n        var self = this;\n        this.table.delAll();\n        this.collection.sort();\n        this.collection.each(model => {\n            self.table.add(model.get(\"name\"));\n            self.table.add(model.id);\n            self.table.add(model.get(\"count\") !== undefined ? model.get(\"count\") : \"Processing...\");\n            self.table.add(\n                new Ui.ButtonIcon({\n                    icon: \"fa-trash-o\",\n                    cls: \"ui-button-icon-plain\",\n                    tooltip: _l(\"Delete custom build.\"),\n                    onclick: function() {\n                        model.destroy();\n                    }\n                }).$el\n            );\n            self.table.append(model.id);\n        });\n    },\n\n    _renderForm: function() {\n        var self = this;\n        var initial_type = \"fasta\";\n        var form = new Form({\n            inputs: [\n                {\n                    type: \"text\",\n                    name: \"name\",\n                    label: \"Name\",\n                    help: \"Specify a build name e.g. Hamster.\"\n                },\n                {\n                    type: \"text\",\n                    name: \"id\",\n                    label: \"Key\",\n                    help: \"Specify a build key e.g. hamster_v1.\"\n                },\n                {\n                    name: \"len\",\n                    type: \"conditional\",\n                    test_param: {\n                        name: \"type\",\n                        label: \"Definition\",\n                        help: _l(\"Provide the data source.\"),\n                        type: \"select\",\n                        value: initial_type,\n                        data: [\n                            {\n                                value: \"fasta\",\n                                label: \"FASTA-file from history\"\n                            },\n                            {\n                                value: \"file\",\n                                label: \"Len-file from disk\"\n                            },\n                            {\n                                value: \"text\",\n                                label: \"Len-file by copy/paste\"\n                            }\n                        ]\n                    },\n                    cases: [\n                        {\n                            value: \"fasta\",\n                            inputs: [\n                                {\n                                    type: \"select\",\n                                    name: \"value\",\n                                    label: \"FASTA-file\",\n                                    data: this.model.get(\"fasta_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"file\",\n                            inputs: [\n                                {\n                                    type: \"upload\",\n                                    name: \"value\",\n                                    label: \"Len-file\",\n                                    data: this.model.get(\"len_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"text\",\n                            inputs: [\n                                {\n                                    type: \"text\",\n                                    area: true,\n                                    name: \"value\",\n                                    label: \"Edit/Paste\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            buttons: {\n                save: new Ui.Button({\n                    icon: \"fa-save\",\n                    tooltip: _l(\"Create new Build\"),\n                    title: _l(\"Save\"),\n                    cls: \"btn btn-primary ui-clear-float\",\n                    onclick: function() {\n                        var data = form.data.create();\n                        if (!data.id || !data.name) {\n                            self.message.update({\n                                message: \"All inputs are required.\",\n                                status: \"danger\"\n                            });\n                        } else {\n                            self.collection.create(data, {\n                                wait: true,\n                                success: function(response) {\n                                    if (response.get(\"message\")) {\n                                        self.message.update({\n                                            message: response.get(\"message\"),\n                                            status: \"warning\"\n                                        });\n                                    } else {\n                                        self.message.update({\n                                            message: \"Successfully added a new custom build.\",\n                                            status: \"success\"\n                                        });\n                                    }\n                                },\n                                error: function(response, err) {\n                                    var message = err && err.responseJSON && err.responseJSON.err_msg;\n                                    self.message.update({\n                                        message: message || \"Failed to create custom build.\",\n                                        status: \"danger\"\n                                    });\n                                }\n                            });\n                        }\n                    }\n                })\n            },\n            onchange: function() {\n                var input_id = form.data.match(\"len|type\");\n                if (input_id) {\n                    var input_field = form.field_list[input_id];\n                    self._renderHelp(input_field.value());\n                }\n            }\n        });\n        this.$form.empty().append(form.$el);\n        var installed_builds = this.model.get(\"installed_builds\");\n        if (installed_builds && installed_builds.length) {\n            this.$installed.show();\n            this.installed_builds.update(this.model.get(\"installed_builds\"));\n        } else {\n            this.$installed.hide();\n        }\n        this._renderHelp(initial_type);\n    },\n\n    _renderHelp: function(len_type) {\n        this.$help\n            .empty()\n            .addClass(\"alert alert-info\")\n            .html(len_type == \"fasta\" ? this._templateFasta() : this._templateLen());\n    },\n\n    _templateLen: function() {\n        return (\n            \"<h4>Length Format</h4>\" +\n            \"<p>\" +\n            \"The length format is two-column, separated by whitespace, of the form:\" +\n            \"<pre>chrom/contig   length of chrom/contig</pre>\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"For example, the first few entries of <em>mm9.len</em> are as follows:\" +\n            \"<pre>\" +\n            \"chr1    197195432\\n\" +\n            \"chr2    181748087\\n\" +\n            \"chr3    159599783\\n\" +\n            \"chr4    155630120\\n\" +\n            \"chr5    152537259\" +\n            \"</pre>\" +\n            \"</p>\" +\n            \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" +\n            \"to set the maximum basepair of the track browser. You may either upload a .len file\" +\n            \"of this format (Len File option), or directly enter the information into the box \" +\n            \"(Len Entry option).</p>\"\n        );\n    },\n\n    _templateFasta: function() {\n        return (\n            \"<h4>FASTA format</h4>\" +\n            \"<p>\" +\n            \"This is a multi-fasta file from your current history that provides the genome\" +\n            \"sequences for each chromosome/contig in your build.\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"Here is a snippet from an example multi-fasta file:\" +\n            \"<pre>\" +\n            \">chr1\\n\" +\n            \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" +\n            \">chr2\\n\" +\n            \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" +\n            \"...\" +\n            \"</pre>\" +\n            \"</p>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}