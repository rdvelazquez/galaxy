{"version":3,"sources":["mvc/user/user-preferences.js"],"names":["Model","Backbone","extend","initialize","options","user_id","Galaxy","user","id","set","information","title","description","url","icon","redirect","password","submit_title","communication","permissions","api_key","submit_icon","toolbox_filters","openids","onclick","window","location","href","root","custom_builds","logout","modal","show","body","buttons","Cancel","hide","session_csrf_token","View","model","setElement","render","self","config","$","getJSON","$preferences","addClass","append","_","escape","data","email","$table","message","get","status","prepend","Message","$el","use_remote_user","_addLink","enable_communication_server","has_user_tool_filters","enable_openid","_templateFooter","empty","action","$row","_templateLink","$a","find","on","attr","nice_total_disk_usage","enable_quotas","quota"],"mappings":"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","file":"../../../scripts/mvc/user/user-preferences.js","sourcesContent":["import _l from \"utils/localization\";\n/** User Preferences view */\nimport Form from \"mvc/form/form-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\n/** Contains descriptive dictionaries describing user forms */\nvar Model = Backbone.Model.extend({\n    initialize: function(options) {\n        options = options || {};\n        options.user_id = options.user_id || Galaxy.user.id;\n        this.set({\n            user_id: options.user_id,\n            information: {\n                title: _l(\"Manage information\"),\n                description: \"Edit your email, addresses and custom parameters or change your username.\",\n                url: `api/users/${options.user_id}/information/inputs`,\n                icon: \"fa-user\",\n                redirect: \"user\"\n            },\n            password: {\n                title: _l(\"Change password\"),\n                description: _l(\"Allows you to change your login credentials.\"),\n                icon: \"fa-unlock-alt\",\n                url: `api/users/${options.user_id}/password/inputs`,\n                submit_title: \"Save password\",\n                redirect: \"user\"\n            },\n            communication: {\n                title: _l(\"Change communication settings\"),\n                description: _l(\"Enable or disable the communication feature to chat with other users.\"),\n                url: `api/users/${options.user_id}/communication/inputs`,\n                icon: \"fa-comments-o\",\n                redirect: \"user\"\n            },\n            permissions: {\n                title: _l(\"Set dataset permissions for new histories\"),\n                description:\n                    \"Grant others default access to newly created histories. Changes made here will only affect histories created after these settings have been stored.\",\n                url: `api/users/${options.user_id}/permissions/inputs`,\n                icon: \"fa-users\",\n                submit_title: \"Save permissions\",\n                redirect: \"user\"\n            },\n            api_key: {\n                title: _l(\"Manage API key\"),\n                description: _l(\"Access your current API key or create a new one.\"),\n                url: `api/users/${options.user_id}/api_key/inputs`,\n                icon: \"fa-key\",\n                submit_title: \"Create a new key\",\n                submit_icon: \"fa-check\"\n            },\n            toolbox_filters: {\n                title: _l(\"Manage Toolbox filters\"),\n                description: _l(\"Customize your Toolbox by displaying or omitting sets of Tools.\"),\n                url: `api/users/${options.user_id}/toolbox_filters/inputs`,\n                icon: \"fa-filter\",\n                submit_title: \"Save filters\",\n                redirect: \"user\"\n            },\n            openids: {\n                title: _l(\"Manage OpenIDs\"),\n                description: _l(\"Associate OpenIDs with your account.\"),\n                icon: \"fa-openid\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}openids/list`;\n                }\n            },\n            custom_builds: {\n                title: _l(\"Manage custom builds\"),\n                description: _l(\"Add or remove custom builds using history datasets.\"),\n                icon: \"fa-cubes\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}custom_builds`;\n                }\n            },\n            logout: {\n                title: _l(\"Sign out\"),\n                description: _l(\"Click here to sign out of all sessions.\"),\n                icon: \"fa-sign-out\",\n                onclick: function() {\n                    Galaxy.modal.show({\n                        title: _l(\"Sign out\"),\n                        body: \"Do you want to continue and sign out of all active sessions?\",\n                        buttons: {\n                            Cancel: function() {\n                                Galaxy.modal.hide();\n                            },\n                            \"Sign out\": function() {\n                                window.location.href = `${Galaxy.root}user/logout?session_csrf_token=${\n                                    Galaxy.session_csrf_token\n                                }`;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n});\n\n/** View of the main user preference panel with links to individual user forms */\nvar View = Backbone.View.extend({\n    title: _l(\"User Preferences\"),\n    initialize: function() {\n        this.model = new Model();\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var config = Galaxy.config;\n        $.getJSON(`${Galaxy.root}api/users/${Galaxy.user.id}`, data => {\n            self.$preferences = $(\"<div/>\")\n                .addClass(\"ui-panel\")\n                .append($(\"<h2/>\").append(\"User preferences\"))\n                .append($(\"<p/>\").append(`You are logged in as <strong>${_.escape(data.email)}</strong>.`))\n                .append((self.$table = $(\"<table/>\").addClass(\"ui-panel-table\")));\n            var message = QueryStringParsing.get(\"message\");\n            var status = QueryStringParsing.get(\"status\");\n            if (message && status) {\n                self.$preferences.prepend(new Ui.Message({ message: message, status: status }).$el);\n            }\n            if (!config.use_remote_user) {\n                self._addLink(\"information\");\n                self._addLink(\"password\");\n            }\n            if (config.enable_communication_server) {\n                self._addLink(\"communication\");\n            }\n            self._addLink(\"custom_builds\");\n            self._addLink(\"permissions\");\n            self._addLink(\"api_key\");\n            if (config.has_user_tool_filters) {\n                self._addLink(\"toolbox_filters\");\n            }\n            if (config.enable_openid && !config.use_remote_user) {\n                self._addLink(\"openids\");\n            }\n            if (Galaxy.session_csrf_token) {\n                self._addLink(\"logout\");\n            }\n            self.$preferences.append(self._templateFooter(data));\n            self.$el.empty().append(self.$preferences);\n        });\n    },\n\n    _addLink: function(action) {\n        var options = this.model.get(action);\n        var $row = $(this._templateLink(options));\n        var $a = $row.find(\"a\");\n        if (options.onclick) {\n            $a.on(\"click\", () => {\n                options.onclick();\n            });\n        } else {\n            $a.attr(\"href\", `${Galaxy.root}user/${action}`);\n        }\n        this.$table.append($row);\n    },\n\n    _templateLink: function(options) {\n        return `<tr><td><div class=\"ui-panel-icon fa ${\n            options.icon\n        }\"></td><td><a class=\"ui-panel-anchor\" href=\"javascript:void(0)\">${\n            options.title\n        }</a><div class=\"ui-form-info\">${options.description}</div></td></tr>`;\n    },\n\n    _templateFooter: function(options) {\n        return `<p class=\"ui-panel-footer\">You are using <strong>${\n            options.nice_total_disk_usage\n        }</strong> of disk space in this Galaxy instance. ${\n            Galaxy.config.enable_quotas ? `Your disk quota is: <strong>${options.quota}</strong>. ` : \"\"\n        }Is your usage more than expected? See the <a href=\"https://galaxyproject.org/learn/managing-datasets/\" target=\"_blank\">documentation</a> for tips on how to find all of the data in your account.</p>`;\n    }\n});\n\nexport default {\n    View: View,\n    Model: Model\n};\n"]}