{"version":3,"sources":["mvc/base-mvc.js"],"names":["_","Backbone","LoggableMixin","logger","_logNamespace","SessionStorageModel","Model","extend","initialize","initialAttrs","_checkEnabledSessionStorage","id","Error","existing","isNew","_read","clear","silent","save","defaults","on","window","sessionStorage","length","err","alert","sync","method","model","options","trigger","returned","_create","_update","_delete","undefined","success","error","json","toJSON","set","setItem","JSON","stringify","DOMException","navigator","userAgent","indexOf","parse","getItem","removeItem","hasOwnProperty","_log","toString","prototype","omit","mixin","mixinHash1","propsHash","args","Array","slice","call","arguments","lastArg","pop","unshift","apply","SearchableModelMixin","searchAttributes","searchAliases","searchAttribute","attrKey","searchFor","attrVal","get","isArray","_searchArrayAttribute","toLowerCase","array","any","elem","search","filter","key","matches","term","ATTR_SPECIFIER","split","matchesAll","terms","match","s","all","replace","HiddenUntilActivatedViewMixin","hiddenUntilActivated","$activator","HUAVOptions","$elementShown","$el","showFn","jQuery","toggle","showSpeed","hasBeenShown","is","hidden","isHidden","isFunction","onshowFirstTime","onshow","onhide","DraggableViewMixin","attributes","draggable","$dragHandle","$","toggleDraggable","draggableOff","draggableOn","dragStartHandler","bind","_dragStartHandler","dragEndHandler","_dragEndHandler","handle","attr","addEventListener","removeEventListener","event","dataTransfer","effectAllowed","setData","SelectableViewMixin","selectable","selected","$selector","_renderSelected","find","toggleClass","toggleSelector","showSelector","hideSelector","speed","fxSpeed","show","hide","toggleSelect","deselect","select","wrapTemplate","template","jsonNamespace","templateFn","join","view","templateVars","_l","buildComparator","attribute_name","ascending","__comparator","a","b"],"mappings":"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","file":"../../scripts/mvc/base-mvc.js","sourcesContent":["import * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\nimport addLogging from \"utils/add-logging\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/** @class Mixin to add logging capabilities to an object.\n *      Designed to allow switching an objects log output off/on at one central\n *      statement. Can be used with plain browser console (or something more\n *      complex like an AJAX logger).\n *  <br />NOTE: currently only uses the console.debug log function\n *  (as opposed to debug, error, warn, etc.)\n *  @name LoggableMixin\n *\n *  @example\n *  // Add to your models/views at the definition using chaining:\n *      var MyModel = Backbone.Model.extend( LoggableMixin ).extend({ // ... });\n *\n *  // or - more explicitly AFTER the definition:\n *      var MyModel = Backbone.Model.extend({\n *          logger  : console\n *          // ...\n *          this.log( '$#%& it! - broken already...' );\n *      })\n *      _.extend( MyModel.prototype, LoggableMixin )\n *\n */\nvar LoggableMixin = /** @lends LoggableMixin# */ {\n    // replace null with console (if available) to see all logs for a particular view/model\n    /** The logging object whose log function will be used to output\n     *      messages. Null will supress all logging. Commonly set to console.\n     */\n    logger: null,\n    /** @type {String} a namespace for filtering/focusing log output */\n    _logNamespace: \".\"\n};\naddLogging(LoggableMixin);\n\n//==============================================================================\n/** Backbone model that syncs to the browser's sessionStorage API.\n *      This all largely happens behind the scenes and no special calls are required.\n */\nvar SessionStorageModel = Backbone.Model.extend({\n    initialize: function(initialAttrs) {\n        // check for sessionStorage and error if no id is provided\n        this._checkEnabledSessionStorage();\n        if (!initialAttrs.id) {\n            throw new Error(\"SessionStorageModel requires an id in the initial attributes\");\n        }\n        this.id = initialAttrs.id;\n\n        // load existing from storage (if any), clear any attrs set by bbone before init is called,\n        //  layer initial over existing and defaults, and save\n        var existing = !this.isNew() ? this._read(this) : {};\n        this.clear({ silent: true });\n        this.save(_.extend({}, this.defaults, existing, initialAttrs), {\n            silent: true\n        });\n\n        // save on any change to it immediately\n        this.on(\"change\", function() {\n            this.save();\n        });\n    },\n\n    _checkEnabledSessionStorage: function() {\n        try {\n            return window.sessionStorage.length >= 0;\n        } catch (err) {\n            alert(\"Please enable cookies in your browser for this Galaxy site\");\n            return false;\n        }\n    },\n\n    /** override of bbone sync to save to sessionStorage rather than REST\n     *      bbone options (success, errror, etc.) should still apply\n     */\n    sync: function(method, model, options) {\n        if (!options.silent) {\n            model.trigger(\"request\", model, {}, options);\n        }\n        var returned = {};\n        switch (method) {\n            case \"create\":\n                returned = this._create(model);\n                break;\n            case \"read\":\n                returned = this._read(model);\n                break;\n            case \"update\":\n                returned = this._update(model);\n                break;\n            case \"delete\":\n                returned = this._delete(model);\n                break;\n        }\n        if (returned !== undefined || returned !== null) {\n            if (options.success) {\n                options.success();\n            }\n        } else {\n            if (options.error) {\n                options.error();\n            }\n        }\n        return returned;\n    },\n\n    /** set storage to the stringified item */\n    _create: function(model) {\n        try {\n            var json = model.toJSON();\n            var set = sessionStorage.setItem(model.id, JSON.stringify(json));\n            return set === null ? set : json;\n            // DOMException is thrown in Safari if in private browsing mode and sessionStorage is attempted:\n            // http://stackoverflow.com/questions/14555347\n            // TODO: this could probably use a more general soln - like detecting priv. mode + safari => non-ajaxing Model\n        } catch (err) {\n            if (!(err instanceof DOMException && navigator.userAgent.indexOf(\"Safari\") > -1)) {\n                throw err;\n            }\n        }\n        return null;\n    },\n\n    /** read and parse json from storage */\n    _read: function(model) {\n        return JSON.parse(sessionStorage.getItem(model.id));\n    },\n\n    /** set storage to the item (alias to create) */\n    _update: function(model) {\n        return model._create(model);\n    },\n\n    /** remove the item from storage */\n    _delete: function(model) {\n        return sessionStorage.removeItem(model.id);\n    },\n\n    /** T/F whether sessionStorage contains the model's id (data is present) */\n    isNew: function() {\n        return !sessionStorage.hasOwnProperty(this.id);\n    },\n\n    _log: function() {\n        return JSON.stringify(this.toJSON(), null, \"  \");\n    },\n    toString: function() {\n        return `SessionStorageModel(${this.id})`;\n    }\n});\n(() => {\n    SessionStorageModel.prototype = _.omit(SessionStorageModel.prototype, \"url\", \"urlRoot\");\n})();\n\n//==============================================================================\n/** Function that allows mixing of hashs into bbone MVC while showing the mixins first\n *      (before the more local class overrides/hash).\n *      Basically, a simple reversal of param order on _.defaults() - to show mixins in top of definition.\n *  @example:\n *      var NewModel = Something.extend( mixin( MyMixinA, MyMixinB, { ... myVars : ... }) );\n *\n *  NOTE: this does not combine any hashes (like events, etc.) and you're expected to handle that\n */\nfunction mixin(mixinHash1, /* mixinHash2, etc: ... variadic */ propsHash) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    var lastArg = args.pop();\n    args.unshift(lastArg);\n    return _.defaults.apply(_, args);\n}\n\n//==============================================================================\n/** A mixin for models that allow T/F/Matching to their attributes - useful when\n *      searching or filtering collections of models.\n * @example:\n *      see hda-model for searchAttribute and searchAliases definition examples.\n *      see history-contents.matches for how collections are filtered\n *      and see readonly-history-view.searchHdas for how user input is connected to the filtering\n */\nvar SearchableModelMixin = {\n    /** what attributes of an HDA will be used in a text search */\n    searchAttributes: [\n        // override\n    ],\n\n    /** our attr keys don't often match the labels we display to the user - so, when using\n     *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n     *      following attr keys.\n     */\n    searchAliases: {\n        // override\n    },\n\n    /** search the attribute with key attrKey for the string searchFor; T/F if found */\n    searchAttribute: function(attrKey, searchFor) {\n        var attrVal = this.get(attrKey);\n        //this.debug( 'searchAttribute', attrKey, attrVal, searchFor );\n        // bail if empty searchFor or unsearchable values\n        if (!searchFor || (attrVal === undefined || attrVal === null)) {\n            return false;\n        }\n        // pass to sep. fn for deep search of array attributes\n        if (_.isArray(attrVal)) {\n            return this._searchArrayAttribute(attrVal, searchFor);\n        }\n        return (\n            attrVal\n                .toString()\n                .toLowerCase()\n                .indexOf(searchFor.toLowerCase()) !== -1\n        );\n    },\n\n    /** deep(er) search for array attributes; T/F if found */\n    _searchArrayAttribute: function(array, searchFor) {\n        //this.debug( '_searchArrayAttribute', array, searchFor );\n        searchFor = searchFor.toLowerCase();\n        //precondition: searchFor has already been validated as non-empty string\n        //precondition: assumes only 1 level array\n        //TODO: could possibly break up searchFor more (CSV...)\n        return _.any(\n            array,\n            elem =>\n                elem\n                    .toString()\n                    .toLowerCase()\n                    .indexOf(searchFor.toLowerCase()) !== -1\n        );\n    },\n\n    /** search all searchAttributes for the string searchFor,\n     *      returning a list of keys of attributes that contain searchFor\n     */\n    search: function(searchFor) {\n        var model = this;\n        return _.filter(this.searchAttributes, key => model.searchAttribute(key, searchFor));\n    },\n\n    /** alias of search, but returns a boolean; accepts attribute specifiers where\n     *      the attributes searched can be narrowed to a single attribute using\n     *      the form: matches( 'genome_build=hg19' )\n     *      (the attribute keys allowed can also be aliases to the true attribute key;\n     *          see searchAliases above)\n     *  @param {String} term   plain text or ATTR_SPECIFIER sep. key=val pair\n     *  @returns {Boolean} was term found in (any) attribute(s)\n     */\n    matches: function(term) {\n        var ATTR_SPECIFIER = \"=\";\n        var split = term.split(ATTR_SPECIFIER);\n        // attribute is specified - search only that\n        if (split.length >= 2) {\n            var attrKey = split[0];\n            attrKey = this.searchAliases[attrKey] || attrKey;\n            return this.searchAttribute(attrKey, split[1]);\n        }\n        // no attribute is specified - search all attributes in searchAttributes\n        return !!this.search(term).length;\n    },\n\n    /** an implicit AND search for all terms; IOW, a model must match all terms given\n     *      where terms is a whitespace separated value string.\n     *      e.g. given terms of: 'blah bler database=hg19'\n     *          an HDA would have to have attributes containing blah AND bler AND a genome_build == hg19\n     *      To include whitespace in terms: wrap the term in double quotations (name=\"blah bler\").\n     */\n    matchesAll: function(terms) {\n        var model = this;\n        // break the terms up by whitespace and filter out the empty strings\n        terms = terms.match(/(\".*\"|\\w*=\".*\"|\\S*)/g).filter(s => !!s);\n        return _.all(terms, term => {\n            term = term.replace(/\"/g, \"\");\n            return model.matches(term);\n        });\n    }\n};\n\n//==============================================================================\n/** A view that renders hidden and shows when some activator is clicked.\n *      options:\n *          showFn: the effect used to show/hide the View (defaults to jq.toggle)\n *          $elementShown: some jqObject (defaults to this.$el) to be shown/hidden\n *          onShowFirstTime: fn called the first time the view is shown\n *          onshow: fn called every time the view is shown\n *          onhide: fn called every time the view is hidden\n *      events:\n *          hiddenUntilActivated:shown (the view is passed as an arg)\n *          hiddenUntilActivated:hidden (the view is passed as an arg)\n *      instance vars:\n *          view.hidden {boolean} is the view in the hidden state\n */\nvar HiddenUntilActivatedViewMixin = /** @lends hiddenUntilActivatedMixin# */ {\n    //TODO: since this is a mixin, consider moving toggle, hidden into HUAVOptions\n\n    /** call this in your initialize to set up the mixin\n     *  @param {jQuery} $activator the 'button' that's clicked to show/hide the view\n     *  @param {Object} hash with mixin options\n     */\n    hiddenUntilActivated: function($activator, options) {\n        // call this in your view's initialize fn\n        options = options || {};\n        //TODO: flesh out options - show them all here\n        this.HUAVOptions = {\n            $elementShown: this.$el,\n            showFn: jQuery.prototype.toggle,\n            showSpeed: \"fast\"\n        };\n        _.extend(this.HUAVOptions, options || {});\n        /** has this been shown already (and onshowFirstTime called)? */\n        this.HUAVOptions.hasBeenShown = this.HUAVOptions.$elementShown.is(\":visible\");\n        this.hidden = this.isHidden();\n\n        if ($activator) {\n            var mixin = this;\n            $activator.on(\"click\", ev => {\n                mixin.toggle(mixin.HUAVOptions.showSpeed);\n            });\n        }\n    },\n\n    //TODO:?? remove? use .hidden?\n    /** returns T/F if the view is hidden */\n    isHidden: function() {\n        return this.HUAVOptions.$elementShown.is(\":hidden\");\n    },\n\n    /** toggle the hidden state, show/hide $elementShown, call onshow/hide, trigger events */\n    toggle: function() {\n        //TODO: more specific name - toggle is too general\n        // can be called manually as well with normal toggle arguments\n        //TODO: better as a callback (when the show/hide is actually done)\n        // show\n        if (this.hidden) {\n            // fire the optional fns on the first/each showing - good for render()\n            if (!this.HUAVOptions.hasBeenShown) {\n                if (_.isFunction(this.HUAVOptions.onshowFirstTime)) {\n                    this.HUAVOptions.hasBeenShown = true;\n                    this.HUAVOptions.onshowFirstTime.call(this);\n                }\n            }\n            if (_.isFunction(this.HUAVOptions.onshow)) {\n                this.HUAVOptions.onshow.call(this);\n                this.trigger(\"hiddenUntilActivated:shown\", this);\n            }\n            this.hidden = false;\n\n            // hide\n        } else {\n            if (_.isFunction(this.HUAVOptions.onhide)) {\n                this.HUAVOptions.onhide.call(this);\n                this.trigger(\"hiddenUntilActivated:hidden\", this);\n            }\n            this.hidden = true;\n        }\n        return this.HUAVOptions.showFn.apply(this.HUAVOptions.$elementShown, arguments);\n    }\n};\n\n//==============================================================================\n/** Mixin for views that can be dragged and dropped\n *      Allows for the drag behavior to be turned on/off, setting/removing jQuery event\n *          handlers each time.\n *      dataTransfer data is set to the JSON string of the view's model.toJSON\n *      Override '$dragHandle' to define the draggable DOM sub-element.\n */\nvar DraggableViewMixin = {\n    /** set up instance vars to track whether this view is currently draggable */\n    initialize: function(attributes) {\n        /** is the body of this hda view expanded/not? */\n        this.draggable = attributes.draggable || false;\n    },\n\n    /** what part of the view's DOM triggers the dragging */\n    $dragHandle: function() {\n        //TODO: make abstract/general - move this to listItem\n        // override to the element you want to be your view's handle\n        return this.$(\".title-bar\");\n    },\n\n    /** toggle whether this view is draggable */\n    toggleDraggable: function() {\n        if (this.draggable) {\n            this.draggableOff();\n        } else {\n            this.draggableOn();\n        }\n    },\n\n    /** allow the view to be dragged, set up event handlers */\n    draggableOn: function() {\n        this.draggable = true;\n        this.dragStartHandler = _.bind(this._dragStartHandler, this);\n        this.dragEndHandler = _.bind(this._dragEndHandler, this);\n\n        var handle = this.$dragHandle()\n            .attr(\"draggable\", true)\n            .get(0);\n        handle.addEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.addEventListener(\"dragend\", this.dragEndHandler, false);\n    },\n\n    /** turn of view dragging and remove event listeners */\n    draggableOff: function() {\n        this.draggable = false;\n        var handle = this.$dragHandle()\n            .attr(\"draggable\", false)\n            .get(0);\n        handle.removeEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.removeEventListener(\"dragend\", this.dragEndHandler, false);\n    },\n\n    /** sets the dataTransfer data to the model's toJSON\n     *  @fires draggable:dragstart (bbone event) which is passed the event and this view\n     */\n    _dragStartHandler: function(event) {\n        event.dataTransfer.effectAllowed = \"move\";\n        //ASSUMES: this.model\n        //TODO: all except IE: should be 'application/json', IE: must be 'text'\n        event.dataTransfer.setData(\"text\", JSON.stringify(this.model.toJSON()));\n        this.trigger(\"draggable:dragstart\", event, this);\n        return false;\n    },\n\n    /** handle the dragend\n     *  @fires draggable:dragend (bbone event) which is passed the event and this view\n     */\n    _dragEndHandler: function(event) {\n        this.trigger(\"draggable:dragend\", event, this);\n        return false;\n    }\n};\n\n//==============================================================================\n/** Mixin that allows a view to be selected (gen. from a list).\n *      Selection controls ($selector) may be hidden/shown/toggled.\n *          The bbone event 'selectable' is fired when the controls are shown/hidden (passed T/F).\n *      Default rendering is a font-awesome checkbox.\n *      Default selector is '.selector' within the view's $el.\n *      The bbone events 'selected' and 'de-selected' are fired when the $selector is clicked.\n *          Both events are passed the view and the (jQuery) event.\n */\nvar SelectableViewMixin = {\n    /** Set up instance state vars for whether the selector is shown and whether the view has been selected */\n    initialize: function(attributes) {\n        /** is the view currently in selection mode? */\n        this.selectable = attributes.selectable || false;\n        /** is the view currently selected? */\n        this.selected = attributes.selected || false;\n    },\n\n    /** $el sub-element where the selector is rendered and what can be clicked to select. */\n    $selector: function() {\n        return this.$(\".selector\");\n    },\n\n    /** How the selector is rendered - defaults to font-awesome checkbox */\n    _renderSelected: function() {\n        // override\n        this.$selector()\n            .find(\"span\")\n            .toggleClass(\"fa-check-square-o\", this.selected)\n            .toggleClass(\"fa-square-o\", !this.selected);\n    },\n\n    /** Toggle whether the selector is shown */\n    toggleSelector: function() {\n        //TODO: use this.selectable\n        if (!this.$selector().is(\":visible\")) {\n            this.showSelector();\n        } else {\n            this.hideSelector();\n        }\n    },\n\n    /** Display the selector control.\n     *  @param {Number} a jQuery fx speed\n     *  @fires: selectable which is passed true (IOW, the selector is shown) and the view\n     */\n    showSelector: function(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        // make sure selected state is represented properly\n        this.selectable = true;\n        this.trigger(\"selectable\", true, this);\n        this._renderSelected();\n        if (speed) {\n            this.$selector().show(speed);\n        } else {\n            this.$selector().show();\n        }\n    },\n\n    /** remove the selector control\n     *  @param {Number} a jQuery fx speed\n     *  @fires: selectable which is passed false (IOW, the selector is not shown) and the view\n     */\n    hideSelector: function(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        // reverse the process from showSelect\n        this.selectable = false;\n        this.trigger(\"selectable\", false, this);\n        if (speed) {\n            this.$selector().hide(speed);\n        } else {\n            this.$selector().hide();\n        }\n    },\n\n    /** Toggle whether the view is selected */\n    toggleSelect: function(event) {\n        if (this.selected) {\n            this.deselect(event);\n        } else {\n            this.select(event);\n        }\n    },\n\n    /** Select this view and re-render the selector control to show it\n     *  @param {Event} a jQuery event that caused the selection\n     *  @fires: selected which is passed the view and the DOM event that triggered it (optionally)\n     */\n    select: function(event) {\n        // switch icon, set selected, and trigger event\n        if (!this.selected) {\n            this.trigger(\"selected\", this, event);\n            this.selected = true;\n            this._renderSelected();\n        }\n        return false;\n    },\n\n    /** De-select this view and re-render the selector control to show it\n     *  @param {Event} a jQuery event that caused the selection\n     *  @fires: de-selected which is passed the view and the DOM event that triggered it (optionally)\n     */\n    deselect: function(event) {\n        // switch icon, set selected, and trigger event\n        if (this.selected) {\n            this.trigger(\"de-selected\", this, event);\n            this.selected = false;\n            this._renderSelected();\n        }\n        return false;\n    }\n};\n\n//==============================================================================\n/** Return an underscore template fn from an array of strings.\n *  @param {String[]} template      the template strings to compile into the underscore template fn\n *  @param {String} jsonNamespace   an optional namespace for the json data passed in (defaults to 'model')\n *  @returns {Function} the (wrapped) underscore template fn\n *      The function accepts:\n *\n *  The template strings can access:\n *      the json/model hash using model (\"<%- model.myAttr %>) using the jsonNamespace above\n *      _l: the localizer function\n *      view (if passed): ostensibly, the view using the template (handy for view instance vars)\n *      Because they're namespaced, undefined attributes will not throw an error.\n *\n *  @example:\n *      templateBler : BASE_MVC.wrapTemplate([\n *          '<div class=\"myclass <%- mynamespace.modelClass %>\">',\n *              '<span><% print( _l( mynamespace.message ) ); %>:<%= view.status %></span>'\n *          '</div>'\n *      ], 'mynamespace' )\n *\n *  Meant to be called in a View's definition in order to compile only once.\n *\n */\nfunction wrapTemplate(template, jsonNamespace) {\n    jsonNamespace = jsonNamespace || \"model\";\n    var templateFn = _.template(template.join(\"\"));\n    return (json, view) => {\n        var templateVars = { view: view || {}, _l: _l };\n        templateVars[jsonNamespace] = json || {};\n        return templateFn(templateVars);\n    };\n}\n\n//==============================================================================\n/** Return a comparator function for sorted Collections */\nfunction buildComparator(attribute_name, options) {\n    options = options || {};\n    var ascending = options.ascending ? 1 : -1;\n    return function __comparator(a, b) {\n        a = a.get(attribute_name);\n        b = b.get(attribute_name);\n        return (a < b ? -1 : a > b ? 1 : 0) * ascending;\n    };\n}\n\n//==============================================================================\nexport default {\n    LoggableMixin: LoggableMixin,\n    SessionStorageModel: SessionStorageModel,\n    mixin: mixin,\n    SearchableModelMixin: SearchableModelMixin,\n    HiddenUntilActivatedViewMixin: HiddenUntilActivatedViewMixin,\n    DraggableViewMixin: DraggableViewMixin,\n    SelectableViewMixin: SelectableViewMixin,\n    wrapTemplate: wrapTemplate,\n    buildComparator: buildComparator\n};\n"]}