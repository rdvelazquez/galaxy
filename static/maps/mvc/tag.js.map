{"version":3,"sources":["mvc/tag.js"],"names":["TagsEditor","Backbone","View","extend","LoggableMixin","HiddenUntilActivatedViewMixin","tagName","className","select_width","events","initialize","options","show_editor","usePrompt","label","workflow_mode","click","keydown","hiddenUntilActivated","$activator","render","self","$el","html","_workflowTemplate","_defaultTemplate","$input","select2","placeholder","width","tags","_getTagsUsed","_setUpBehaviors","_hashToName","tag","startsWith","slice","_nameToHash","_renderEditor","join","_renderTags","keydownHandler","e","which","hideEditor","showEditor","tagsToCSV","model","get","addButton","Galaxy","root","renderedArray","_","each","indexOf","renderString","push","length","tagsArray","isArray","isEmpty","map","escape","sort","find","user","on","event","val","save","added","_addNewTagToTagsUsed","text","newTag","tagsUsed","contains","set","remove","off","stopListening","prototype","call","toString"],"mappings":"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","file":"../../scripts/mvc/tag.js","sourcesContent":["import baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n// =============================================================================\n/** A view on any model that has a 'tags' attribute (a list of tag strings)\n *      Incorporates the select2 jQuery plugin for tags display/editing:\n *      http://ivaynberg.github.io/select2/\n */\nvar TagsEditor = Backbone.View.extend(baseMVC.LoggableMixin)\n    .extend(baseMVC.HiddenUntilActivatedViewMixin)\n    .extend({\n        tagName: \"div\",\n        className: \"tags-display\",\n        select_width: \"100%\",\n        events: {},\n\n        /** Set up listeners, parse options */\n        initialize: function(options) {\n            //console.debug( this, options );\n            // only listen to the model only for changes to tags - re-render\n            this.show_editor = false;\n            if (options.usePrompt === false) {\n                this.label = \"\";\n            } else {\n                this.label = `<label class=\"prompt\">${_l(\"Tags\")}</label>`;\n            }\n            this.workflow_mode = options.workflow_mode || false;\n            if (this.workflow_mode) {\n                this.events.click = \"showEditor\";\n                this.events.keydown = \"keydownHandler\";\n            }\n            this.hiddenUntilActivated(options.$activator, options);\n        },\n\n        /** Build the DOM elements, call select to on the created input, and set up behaviors */\n        render: function() {\n            var self = this;\n            if (this.workflow_mode) {\n                this.$el.html(this._workflowTemplate());\n            } else {\n                this.$el.html(this._defaultTemplate());\n            }\n            this.$input().select2({\n                placeholder: \"Add tags\",\n                width: this.workflow_mode ? this.width : this.select_width,\n                tags: function() {\n                    // initialize possible tags in the dropdown based on all the tags the user has used so far\n                    return self._getTagsUsed();\n                }\n            });\n\n            this._setUpBehaviors();\n            return this;\n        },\n\n        _hashToName: function(tag) {\n            if (tag.startsWith(\"#\")) {\n                return `name:${tag.slice(1)}`;\n            }\n            return tag;\n        },\n\n        _nameToHash: function(tag) {\n            if (tag.startsWith(\"name:\")) {\n                tag = `#${tag.slice(5)}`;\n            }\n            return tag;\n        },\n\n        /** @returns {String} the html text used to build the view's DOM */\n        _defaultTemplate: function() {\n            return [this.label, this._renderEditor()].join(\"\");\n        },\n\n        _workflowTemplate: function() {\n            // Shows labels by default, event handler controls whether we show tags or editor\n            return [this.show_editor ? this._renderEditor() : this._renderTags()].join(\" \");\n        },\n\n        keydownHandler: function(e) {\n            switch (e.which) {\n                // esc\n                case 27:\n                    // hide the tag editor when pressing escape\n                    this.hideEditor();\n                    break;\n            }\n        },\n\n        showEditor: function() {\n            this.show_editor = true;\n            this.render();\n        },\n\n        hideEditor: function() {\n            this.show_editor = false;\n            this.render();\n        },\n\n        _renderEditor: function() {\n            // set up initial tags by adding as CSV to input vals (necc. to init select2)\n            return `<input class=\"tags-input\" value=\"${this.tagsToCSV()}\"/>`;\n        },\n\n        _renderTags: function() {\n            var tags = this.model.get(\"tags\");\n            var addButton = `${Galaxy.root}static/images/fugue/tag--plus.png`;\n            var renderedArray = [];\n            _.each(tags, tag => {\n                tag = tag.indexOf(\"name:\") == 0 ? tag.slice(5) : tag;\n                var renderString = `<span class=\"label label-info\">${tag}</span>`;\n                renderedArray.push(renderString);\n            });\n            if (renderedArray.length === 0) {\n                // If there are no tags to render we just show the add-tag-button\n                renderedArray.push(`<img src=${addButton} class=\"add-tag-button\" title=\"Add tags\"/>`);\n            }\n            return renderedArray.join(\" \");\n        },\n\n        /** @returns {String} the sorted, comma-separated tags from the model */\n        tagsToCSV: function() {\n            var self = this;\n            var tagsArray = this.model.get(\"tags\");\n            if (!_.isArray(tagsArray) || _.isEmpty(tagsArray)) {\n                return \"\";\n            }\n            return tagsArray\n                .map(tag => _.escape(self._nameToHash(tag)))\n                .sort()\n                .join(\",\");\n        },\n\n        /** @returns {jQuery} the input for this view */\n        $input: function() {\n            return this.$el.find(\"input.tags-input\");\n        },\n\n        /** @returns {String[]} all tags used by the current user */\n        _getTagsUsed: function() {\n            //TODO: global\n            var self = this;\n            return _.map(Galaxy.user.get(\"tags_used\"), self._nameToHash);\n        },\n\n        /** set up any event listeners on the view's DOM (mostly handled by select2) */\n        _setUpBehaviors: function() {\n            var self = this;\n            this.$input().on(\"change\", event => {\n                // Modify any 'hashtag' 'nametags'\n                event.val = _.map(event.val, self._hashToName);\n                // save the model's tags in either remove or added event\n                self.model.save({ tags: event.val });\n                // if it's new, add the tag to the users tags\n                if (event.added) {\n                    //??: solve weird behavior in FF on test.galaxyproject.org where\n                    //  event.added.text is string object: 'String{ 0=\"o\", 1=\"n\", 2=\"e\" }'\n                    self._addNewTagToTagsUsed(`${event.added.text}`);\n                }\n            });\n        },\n\n        /** add a new tag (if not already there) to the list of all tags used by the user\n         *  @param {String} newTag  the tag to add to the list of used\n         */\n        _addNewTagToTagsUsed: function(newTag) {\n            //TODO: global\n            var tagsUsed = Galaxy.user.get(\"tags_used\");\n            if (!_.contains(tagsUsed, newTag)) {\n                tagsUsed.push(newTag);\n                tagsUsed.sort();\n                Galaxy.user.set(\"tags_used\", tagsUsed);\n            }\n        },\n\n        /** shut down event listeners and remove this view's DOM */\n        remove: function() {\n            this.$input.off();\n            this.stopListening(this.model);\n            Backbone.View.prototype.remove.call(this);\n        },\n\n        /** string rep */\n        toString: function() {\n            return [\"TagsEditor(\", `${this.model}`, \")\"].join(\"\");\n        }\n    });\n\nexport default {\n    TagsEditor: TagsEditor\n};\n"]}