{"version":3,"sources":["mvc/upload/upload-settings.js"],"names":["Backbone","View","extend","options","class_check","class_uncheck","parameters","id","title","initialize","self","model","setElement","$","addClass","$el","append","$cover","$table","listenTo","render","trigger","empty","_","each","$checkbox","parameter","get","on","set"],"mappings":";;;;;;;;;;;;;;;sBAEeA,SAASC,IAAT,CAAcC,MAAd,CAAqB;AAChCC,iBAAS;AACLC,yBAAa,mBADR;AAELC,2BAAe,aAFV;AAGLC,wBAAY,CACR;AACIC,oBAAI,cADR;AAEIC,uBAAO;AAFX,aADQ,EAKR;AACID,oBAAI,gBADR;AAEIC,uBAAO;AAFX,aALQ;AAHP,SADuB;;AAgBhCC,oBAAY,oBAASN,OAAT,EAAkB;AAC1B,gBAAIO,OAAO,IAAX;AACA,iBAAKC,KAAL,GAAaR,QAAQQ,KAArB;AACA,iBAAKC,UAAL,CAAgBC,EAAE,QAAF,EAAYC,QAAZ,CAAqB,iBAArB,CAAhB;AACA,iBAAKC,GAAL,CAASC,MAAT,CAAgBH,EAAE,QAAF,EAAYC,QAAZ,CAAqB,uBAArB,CAAhB;AACA,iBAAKC,GAAL,CAASC,MAAT,CACIH,EAAE,UAAF,EACKC,QADL,CACc,wCADd,EAEKE,MAFL,CAEY,UAFZ,CADJ;AAKA,iBAAKC,MAAL,GAAc,KAAKJ,CAAL,CAAO,wBAAP,CAAd;AACA,iBAAKK,MAAL,GAAc,KAAKL,CAAL,CAAO,gCAAP,CAAd;AACA,iBAAKM,QAAL,CAAc,KAAKR,KAAnB,EAA0B,QAA1B,EAAoC,KAAKS,MAAzC,EAAiD,IAAjD;AACA,iBAAKT,KAAL,CAAWU,OAAX,CAAmB,QAAnB;AACH,SA9B+B;;AAgChCD,gBAAQ,kBAAW;AACf,gBAAIV,OAAO,IAAX;AACA,iBAAKQ,MAAL,CAAYI,KAAZ;AACAC,cAAEC,IAAF,CAAO,KAAKrB,OAAL,CAAaG,UAApB,EAAgC,qBAAa;AACzC,oBAAImB,YAAYZ,EAAE,QAAF,EACXC,QADW,aACQY,UAAUnB,EADlB,6BAEXO,QAFW,CAEDJ,KAAKC,KAAL,CAAWgB,GAAX,CAAeD,UAAUnB,EAAzB,KAAgCG,KAAKP,OAAL,CAAaC,WAA9C,IAA8DM,KAAKP,OAAL,CAAaE,aAFzE,EAGXuB,EAHW,CAGR,OAHQ,EAGC,YAAM;AACflB,yBAAKC,KAAL,CAAWgB,GAAX,CAAe,SAAf,KAA6BjB,KAAKC,KAAL,CAAWkB,GAAX,CAAeH,UAAUnB,EAAzB,EAA6B,CAACG,KAAKC,KAAL,CAAWgB,GAAX,CAAeD,UAAUnB,EAAzB,CAA9B,CAA7B;AACH,iBALW,CAAhB;AAMAG,qBAAKQ,MAAL,CAAYF,MAAZ,CACIH,EAAE,OAAF,EACKG,MADL,CACYH,EAAE,OAAF,EAAWG,MAAX,CAAkBS,SAAlB,CADZ,EAEKT,MAFL,CAEYH,EAAE,OAAF,EAAWG,MAAX,CAAkBU,UAAUlB,KAA5B,CAFZ,CADJ;AAKH,aAZD;AAaA,iBAAKS,MAAL,CAAa,KAAKN,KAAL,CAAWgB,GAAX,CAAe,SAAf,KAA6B,MAA9B,IAAyC,MAArD;AACH;AAjD+B,KAArB,C","file":"../../../scripts/mvc/upload/upload-settings.js","sourcesContent":["/** This renders the content of the settings popup, allowing users to specify flags i.e. for space-to-tab conversion **/\nimport Utils from \"utils/utils\";\nexport default Backbone.View.extend({\n    options: {\n        class_check: \"fa-check-square-o\",\n        class_uncheck: \"fa-square-o\",\n        parameters: [\n            {\n                id: \"space_to_tab\",\n                title: \"Convert spaces to tabs\"\n            },\n            {\n                id: \"to_posix_lines\",\n                title: \"Use POSIX standard\"\n            }\n        ]\n    },\n\n    initialize: function(options) {\n        var self = this;\n        this.model = options.model;\n        this.setElement($(\"<div/>\").addClass(\"upload-settings\"));\n        this.$el.append($(\"<div/>\").addClass(\"upload-settings-cover\"));\n        this.$el.append(\n            $(\"<table/>\")\n                .addClass(\"upload-settings-table ui-table-striped\")\n                .append(\"<tbody/>\")\n        );\n        this.$cover = this.$(\".upload-settings-cover\");\n        this.$table = this.$(\".upload-settings-table > tbody\");\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.model.trigger(\"change\");\n    },\n\n    render: function() {\n        var self = this;\n        this.$table.empty();\n        _.each(this.options.parameters, parameter => {\n            var $checkbox = $(\"<div/>\")\n                .addClass(`upload-${parameter.id} upload-icon-button fa`)\n                .addClass((self.model.get(parameter.id) && self.options.class_check) || self.options.class_uncheck)\n                .on(\"click\", () => {\n                    self.model.get(\"enabled\") && self.model.set(parameter.id, !self.model.get(parameter.id));\n                });\n            self.$table.append(\n                $(\"<tr/>\")\n                    .append($(\"<td/>\").append($checkbox))\n                    .append($(\"<td/>\").append(parameter.title))\n            );\n        });\n        this.$cover[(this.model.get(\"enabled\") && \"hide\") || \"show\"]();\n    }\n});\n"]}