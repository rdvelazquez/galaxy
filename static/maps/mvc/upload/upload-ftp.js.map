{"version":3,"sources":["mvc/upload/upload-ftp.js"],"names":["Backbone","View","extend","initialize","options","self","model","Model","cls","class_add","class_remove","class_partial","help_enabled","help_text","ftp_upload_site","collection","onchange","onadd","onremove","set","get","setElement","_template","$content","$","$wait","$help","$number","$disk","$body","$warning","$select","render","show","hide","ajax","url","Galaxy","root","method","success","ftp_files","_index","_renderTable","error","rows","length","empty","size","_","each","push","_renderRow","ftp_file","html","bytesToString","addClass","off","on","_all","_refresh","attributes","$it","_templateRow","$icon","find","append","model_index","ftp_index","path","undefined","_switch","id","add","hasClass","index","removeClass","new_index","counts","reduce","memo","element","escape","ctime"],"mappings":"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","file":"../../../scripts/mvc/upload/upload-ftp.js","sourcesContent":["/** This renders the content of the ftp popup **/\nimport Utils from \"utils/utils\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model = new Backbone.Model({\n            cls: \"upload-ftp\",\n            class_add: \"upload-icon-button fa fa-square-o\",\n            class_remove: \"upload-icon-button fa fa-check-square-o\",\n            class_partial: \"upload-icon-button fa fa-minus-square-o\",\n            help_enabled: true,\n            help_text: `This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>${\n                options.ftp_upload_site\n            }</strong> using your Galaxy credentials.`,\n            collection: null,\n            onchange: function() {},\n            onadd: function() {},\n            onremove: function() {}\n        }).set(options);\n        this.collection = this.model.get(\"collection\");\n        this.setElement(this._template());\n        this.$content = this.$(\".upload-ftp-content\");\n        this.$wait = this.$(\".upload-ftp-wait\");\n        this.$help = this.$(\".upload-ftp-help\");\n        this.$number = this.$(\".upload-ftp-number\");\n        this.$disk = this.$(\".upload-ftp-disk\");\n        this.$body = this.$(\".upload-ftp-body\");\n        this.$warning = this.$(\".upload-ftp-warning\");\n        this.$select = this.$(\".upload-ftp-select-all\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.$wait.show();\n        this.$content.hide();\n        this.$warning.hide();\n        this.$help.hide();\n        $.ajax({\n            url: `${Galaxy.root}api/remote_files`,\n            method: \"GET\",\n            success: function(ftp_files) {\n                self.model.set(\"ftp_files\", ftp_files);\n                self._index();\n                self._renderTable();\n            },\n            error: function() {\n                self._renderTable();\n            }\n        });\n    },\n\n    /** Fill table with ftp entries */\n    _renderTable: function() {\n        var self = this;\n        var ftp_files = this.model.get(\"ftp_files\");\n        this.rows = [];\n        if (ftp_files && ftp_files.length > 0) {\n            this.$body.empty();\n            var size = 0;\n            _.each(ftp_files, ftp_file => {\n                self.rows.push(self._renderRow(ftp_file));\n                size += ftp_file.size;\n            });\n            this.$number.html(`${ftp_files.length} files`);\n            this.$disk.html(Utils.bytesToString(size, true));\n            if (this.collection) {\n                this.$(\"._has_collection\").show();\n                this.$select\n                    .addClass(this.model.get(\"class_add\"))\n                    .off()\n                    .on(\"click\", () => {\n                        self._all();\n                    });\n                this._refresh();\n            }\n            this.$content.show();\n        } else {\n            this.$warning.show();\n        }\n        this.model.get(\"help_enabled\") && this.$help.show();\n        this.$wait.hide();\n    },\n\n    /** Add row */\n    _renderRow: function(ftp_file) {\n        var self = this;\n        var options = this.model.attributes;\n        var $it = $(this._templateRow(ftp_file));\n        var $icon = $it.find(\".icon\");\n        this.$body.append($it);\n        if (this.collection) {\n            var model_index = this.ftp_index[ftp_file.path];\n            $icon.addClass(model_index === undefined ? options.class_add : options.class_remove);\n            $it.on(\"click\", () => {\n                self._switch($icon, ftp_file);\n                self._refresh();\n            });\n        } else {\n            $it.on(\"click\", () => {\n                options.onchange(ftp_file);\n            });\n        }\n        return $icon;\n    },\n\n    /** Create ftp index */\n    _index: function() {\n        var self = this;\n        this.ftp_index = {};\n        this.collection &&\n            this.collection.each(model => {\n                if (model.get(\"file_mode\") == \"ftp\") {\n                    self.ftp_index[model.get(\"file_path\")] = model.id;\n                }\n            });\n    },\n\n    /** Select all event handler */\n    _all: function() {\n        var options = this.model.attributes;\n        var ftp_files = this.model.get(\"ftp_files\");\n        var add = this.$select.hasClass(options.class_add);\n        for (var index in ftp_files) {\n            var ftp_file = ftp_files[index];\n            var model_index = this.ftp_index[ftp_file.path];\n            if ((model_index === undefined && add) || (model_index !== undefined && !add)) {\n                this._switch(this.rows[index], ftp_file);\n            }\n        }\n        this._refresh();\n    },\n\n    /** Handle collection changes */\n    _switch: function($icon, ftp_file) {\n        $icon.removeClass();\n        var options = this.model.attributes;\n        var model_index = this.ftp_index[ftp_file.path];\n        if (model_index === undefined) {\n            var new_index = options.onadd(ftp_file);\n            $icon.addClass(options.class_remove);\n            this.ftp_index[ftp_file.path] = new_index;\n        } else {\n            options.onremove(model_index);\n            $icon.addClass(options.class_add);\n            this.ftp_index[ftp_file.path] = undefined;\n        }\n    },\n\n    /** Refresh select all button state */\n    _refresh: function() {\n        var counts = _.reduce(\n            this.ftp_index,\n            (memo, element) => {\n                element !== undefined && memo++;\n                return memo;\n            },\n            0\n        );\n        this.$select.removeClass();\n        if (counts == 0) {\n            this.$select.addClass(this.model.get(\"class_add\"));\n        } else {\n            this.$select.addClass(\n                counts == this.rows.length ? this.model.get(\"class_remove\") : this.model.get(\"class_partial\")\n            );\n        }\n    },\n\n    /** Template of row */\n    _templateRow: function(options) {\n        return `<tr class=\"upload-ftp-row\"><td class=\"_has_collection\" style=\"display: none;\"><div class=\"icon\"/></td><td class=\"ftp-name\">${_.escape(\n            options.path\n        )}</td><td class=\"ftp-size\">${Utils.bytesToString(options.size)}</td><td class=\"ftp-time\">${\n            options.ctime\n        }</td></tr>`;\n    },\n\n    /** Template of main view */\n    _template: function() {\n        return `<div class=\"${this.model.get(\n            \"cls\"\n        )}\"><div class=\"upload-ftp-wait fa fa-spinner fa-spin\"/><div class=\"upload-ftp-help\">${this.model.get(\n            \"help_text\"\n        )}</div><div class=\"upload-ftp-content\"><span style=\"whitespace: nowrap; float: left;\">Available files: </span><span style=\"whitespace: nowrap; float: right;\"><span class=\"upload-icon fa fa-file-text-o\"/><span class=\"upload-ftp-number\"/>&nbsp;&nbsp;<span class=\"upload-icon fa fa-hdd-o\"/><span class=\"upload-ftp-disk\"/></span><table class=\"grid\" style=\"float: left;\"><thead><tr><th class=\"_has_collection\" style=\"display: none;\"><div class=\"upload-ftp-select-all\"></th><th>Name</th><th>Size</th><th>Created</th></tr></thead><tbody class=\"upload-ftp-body\"/></table></div><div class=\"upload-ftp-warning warningmessage\">Your FTP directory does not contain any files.</div>`;\n        (\"<div>\");\n    }\n});\n"]}