{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["Backbone","View","extend","upload_size","collection","Collection","counter","announce","success","error","running","reset","initialize","app","self","options","list_extensions","list_genomes","ui_button","ftp_upload_site","currentFtp","setElement","_template","btnLocal","Button","id","title","onclick","uploadbox","select","icon","btnFtp","_eventFtp","btnCreate","_eventCreate","btnStart","_eventStart","btnBuild","_eventBuild","btnStop","_eventStop","btnReset","_eventReset","btnClose","modal","hide","_","each","$","prepend","button","$el","url","nginx_upload_path","index","file","_eventAnnounce","toData","get","history_id","progress","percentage","_eventProgress","message","_eventSuccess","_eventError","complete","_eventComplete","ondragover","addClass","ondragleave","removeClass","ftp","container","select_extension","css","data","filter","ext","composite_files","value","default_extension","onchange","extension","updateExtension","collectionType","select_collection","text","updateCollectionType","on","e","target","list","placement","preventDefault","select_genome","default_genome","genome","updateGenome","_eventRemove","model","_updateScreen","new_model","Model","file_name","name","file_size","size","file_mode","mode","file_path","path","file_data","add","upload_row","append","render","it","set","_uploadPercentage","hids","pluck","status","upload_completed","Galaxy","currHistoryPanel","refreshContents","info","allHids","forEach","models","push","apply","upload","map","getByHid","hid","selection","constructor","historyId","buildCollection","remove","visible","empty","onadd","ftp_file","onremove","model_index","show","currentHistory","start","html","stop","defaults_only","compatible","enable_reset","enable_start","enable_build","enable_sources","show_table"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["import _l from \"utils/localization\";\n/** Renders contents of the collection uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/collection/collection-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: _l(\"Choose local files\"),\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: _l(\"Choose FTP files\"),\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: _l(\"Start\"),\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnBuild = new Ui.Button({\n            id: \"btn-build\",\n            title: _l(\"Build\"),\n            onclick: function() {\n                self._eventBuild();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: _l(\"Pause\"),\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: _l(\"Reset\"),\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: _l(\"Close\"),\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnBuild,\n                this.btnClose\n            ],\n            button => {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$(\".upload-box\").uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData([self.collection.get(index)], self.history_id);\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$(\".upload-box\").addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$(\".upload-box\").removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: _l(\"FTP files\"),\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, ext => !ext.composite_files),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        this.collectionType = \"list\";\n        this.select_collection = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-collection-type\"),\n            data: [\n                { id: \"list\", text: \"List\" },\n                { id: \"paired\", text: \"Paired\" },\n                { id: \"list:paired\", text: \"List of Pairs\" }\n            ],\n            value: \"list\",\n            onchange: function(collectionType) {\n                self.updateCollectionType(collectionType);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", e => {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", model => {\n            self._eventRemove(model);\n        });\n        this._updateScreen();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file,\n            extension: this.select_extension.value(),\n            genome: this.select_genome.value()\n        });\n        this.collection.add(new_model);\n        var upload_row = new UploadRow(this, { model: new_model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this._updateScreen();\n        upload_row.render();\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        // var hdaId = message[\"outputs\"][0][\"id\"];\n        var hids = _.pluck(message[\"outputs\"], \"hid\");\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\", hids: hids });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this._updateScreen();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this._updateScreen();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(model => {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this._updateScreen();\n    },\n\n    _eventBuild: function() {\n        var allHids = [];\n        _.forEach(this.collection.models, upload => {\n            allHids.push.apply(allHids, upload.get(\"hids\"));\n        });\n        var models = _.map(allHids, hid => Galaxy.currHistoryPanel.collection.getByHid(hid));\n        var selection = new Galaxy.currHistoryPanel.collection.constructor(models);\n        // I'm building the selection wrong because I need to set this historyId directly.\n        selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n        Galaxy.currHistoryPanel.buildCollection(this.collectionType, selection, true);\n        this.counter.running = 0;\n        this._updateScreen();\n        this._eventReset();\n        this.app.modal.hide();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        this.collection.each(model => {\n            if (model.get(\"status\") == \"init\") {\n                model.set(\"status\", \"queued\");\n                self.upload_size += model.get(\"file_size\");\n            }\n        });\n        this.ui_button.model.set({ percentage: 0, status: \"success\" });\n        this.counter.running = this.counter.announce;\n        this.history_id = this.app.currentHistory();\n        this.uploadbox.start();\n        this._updateScreen();\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this._updateScreen();\n        }\n    },\n\n    /** Update extension for all models */\n    updateExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension || !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function(collectionType) {\n        var self = this;\n        this.collectionType = collectionType;\n    },\n\n    /** Update genome for all models */\n    updateGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome || !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Set screen */\n    _updateScreen: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = `You added ${\n                    this.counter.announce\n                } file(s) to the queue. Add more files or click 'Start' to proceed.`;\n            } else {\n                message = `Please wait...${this.counter.announce} out of ${this.counter.running} remaining.`;\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n        var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n        var enable_build =\n            this.counter.running == 0 &&\n            this.counter.announce == 0 &&\n            this.counter.success > 0 &&\n            this.counter.error == 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n            '<span class=\"upload-footer-collection-type\"/>' +\n            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n"]}