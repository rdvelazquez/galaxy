{"version":3,"sources":["mvc/upload/default/default-row.js"],"names":["Backbone","View","extend","status_classes","init","queued","running","success","error","initialize","app","options","self","model","setElement","_template","$mode","$","$title","$text","$size","$info_text","$info_progress","$text_content","$settings","$symbol","$progress_bar","$percentage","settings","title","container","placement","default_genome","select_genome","value","default_extension","select_extension","css","data","list_genomes","onchange","genome","set","list_extensions","extension","on","_removeRow","showExtensionInfo","$el","e","target","text","preventDefault","_showSettings","url_paste","val","file_size","length","listenTo","_refreshPercentage","_refreshStatus","_refreshInfo","_refreshGenome","_refreshExtension","_refreshFileSize","render","_refreshType","remove","prototype","apply","attributes","html","_","escape","file_name","bytesToString","removeClass","addClass","file_mode","width","top","height","show","get","info","hide","percentage","parseInt","status","enabled","attr","enable","disable","indexOf","collection","visible","empty","append","id"],"mappings":"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","file":"../../../../scripts/mvc/upload/default/default-row.js","sourcesContent":["import _l from \"utils/localization\";\n/** Renders the default uploader rows */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: _l(\"Upload configuration\"),\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // create select genomes\n        this.select_genome = new Select.View({\n            css: \"upload-genome\",\n            data: self.app.list_genomes,\n            container: this.$(\".upload-genome\"),\n            value: default_genome,\n            onchange: function(genome) {\n                self.model.set(\"genome\", genome);\n            }\n        });\n\n        // create select extension\n        this.select_extension = new Select.View({\n            css: \"upload-extension\",\n            data: self.app.list_extensions,\n            container: this.$(\".upload-extension\"),\n            value: default_extension,\n            onchange: function(extension) {\n                self.model.set(\"extension\", extension);\n            }\n        });\n\n        // initialize genome and extension values\n        this.model.set({\n            genome: default_genome,\n            extension: default_extension\n        });\n\n        // handle click event\n        this.$symbol.on(\"click\", () => {\n            self._removeRow();\n        });\n\n        // handle extension info popover\n        this.$(\".upload-extension-info\")\n            .on(\"click\", e => {\n                self.app.showExtensionInfo({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value()\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // handle settings popover\n        this.$settings\n            .on(\"click\", e => {\n                self._showSettings();\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", e => {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", () => {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", () => {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", () => {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:genome\", () => {\n            self._refreshGenome();\n        });\n        this.listenTo(this.model, \"change:extension\", () => {\n            self._refreshExtension();\n        });\n        this.listenTo(this.model, \"change:file_size\", () => {\n            self._refreshFileSize();\n        });\n    },\n\n    render: function() {\n        this._refreshType();\n        this._refreshPercentage();\n        this._refreshStatus();\n        this._refreshInfo();\n        this._refreshGenome();\n        this._refreshExtension();\n        this._refreshFileSize();\n    },\n\n    /** Remove view */\n    remove: function() {\n        this.select_genome.remove();\n        this.select_extension.remove();\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    /** Render type */\n    _refreshType: function() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(Utils.bytesToString(options.file_size));\n        this.$mode\n            .removeClass()\n            .addClass(\"upload-mode\")\n            .addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text\n                .css({\n                    width: `${this.$el.width() - 16}px`,\n                    top: `${this.$el.height() - 8}px`\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Update extension */\n    _refreshExtension: function() {\n        this.select_extension.value(this.model.get(\"extension\"));\n    },\n\n    /** Update genome */\n    _refreshGenome: function() {\n        this.select_genome.value(this.model.get(\"genome\"));\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(`<strong>Failed: </strong>${info}`).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: `${percentage}%` });\n        this.$percentage.html(percentage != 100 ? `${percentage}%` : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$symbol\n            .removeClass()\n            .addClass(\"upload-symbol\")\n            .addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (enabled) {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        } else {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        }\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function() {\n        this.$size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function() {\n        if ([\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !== -1) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function(options) {\n        return `<tr id=\"upload-row-${\n            options.id\n        }\" class=\"upload-row\"><td><div class=\"upload-text-column\"><div class=\"upload-mode\"/><div class=\"upload-title\"/><div class=\"upload-text\"><div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div><textarea class=\"upload-text-content form-control\"/></div></div></td><td><div class=\"upload-size\"/></td><td><div class=\"upload-extension\" style=\"float: left;\"/>&nbsp;&nbsp<div class=\"upload-extension-info upload-icon-button fa fa-search\"/></td><td><div class=\"upload-genome\"/></td><td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td><td><div class=\"upload-info\"><div class=\"upload-info-text\"/><div class=\"upload-info-progress progress\"><div class=\"upload-progress-bar progress-bar progress-bar-success\"/><div class=\"upload-percentage\">0%</div></div></div></td><td><div class=\"upload-symbol ${\n            this.status_classes.init\n        }\"/></td></tr>`;\n    }\n});\n"]}