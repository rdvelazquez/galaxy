{"version":3,"sources":["mvc/collection/collection-view.js"],"names":["logNamespace","_super","ModelListPanel","CollectionView","extend","_logNamespace","className","prototype","DatasetDCEViewClass","DatasetDCEListItemView","modelCollectionKey","initialize","attributes","call","linkTarget","hasUser","panelStack","parentName","foldoutStyle","downloadUrl","Galaxy","root","model","id","getNestedDCDCEViewClass","NestedDCDCEListItemView","foldoutPanelClass","_queueNewRender","$newRender","speed","undefined","fxSpeed","panel","handleWarning","log","_swapNewRender","trigger","viewLength","views","length","elementCount","get","warning","$warns","find","html","_filterCollection","getVisibleContents","_getItemViewClass","TypeError","_getItemViewOptions","options","_","_setUpItemViewListeners","view","listenTo","v","drilldown","_expandDrilldownPanel","_collapseDrilldownPanel","push","$","add","$list","hide","$el","append","render","pop","events","close","event","remove","toString","templates","controlsTemplate","collection","subtitle","collectionDescription","escape","name","element_identifier","clone","controls","collectionTypeDescription","collectionType","itemsDescription","countDescription"],"mappings":"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","file":"../../../scripts/mvc/collection/collection-view.js","sourcesContent":["import LIST_VIEW from \"mvc/list/list-view\";\nimport DC_MODEL from \"mvc/collection/collection-model\";\nimport DC_LI from \"mvc/collection/collection-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"collections\";\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class non-editable, read-only View/Controller for a dataset collection.\n */\nvar _super = LIST_VIEW.ModelListPanel;\nvar CollectionView = _super.extend(\n    /** @lends CollectionView.prototype */ {\n        //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n        _logNamespace: logNamespace,\n\n        className: `${_super.prototype.className} dataset-collection-panel`,\n\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_LI.DatasetDCEListItemView,\n\n        /** key of attribute in model to assign to this.collection */\n        modelCollectionKey: \"elements\",\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n         *  @param {Object} attributes optional settings for the panel\n         */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n\n            this.hasUser = attributes.hasUser;\n            /** A stack of panels that currently cover or hide this panel */\n            this.panelStack = [];\n            /** The text of the link to go back to the panel containing this one */\n            this.parentName = attributes.parentName;\n            /** foldout or drilldown */\n            this.foldoutStyle = attributes.foldoutStyle || \"foldout\";\n            this.downloadUrl = `${Galaxy.root}api/dataset_collections/${this.model.attributes.id}/download`;\n        },\n\n        getNestedDCDCEViewClass: function() {\n            return DC_LI.NestedDCDCEListItemView.extend({\n                foldoutPanelClass: CollectionView\n            });\n        },\n\n        _queueNewRender: function($newRender, speed) {\n            speed = speed === undefined ? this.fxSpeed : speed;\n            var panel = this;\n            this.handleWarning($newRender);\n            panel.log(\"_queueNewRender:\", $newRender, speed);\n\n            // TODO: jquery@1.12 doesn't change display when the elem has display: flex\n            // this causes display: block for those elems after the use of show/hide animations\n            // animations are removed from this view for now until fixed\n            panel._swapNewRender($newRender);\n            panel.trigger(\"rendered\", panel);\n        },\n\n        handleWarning: function($newRender) {\n            var viewLength = this.views.length;\n            var elementCount = this.model.get(\"element_count\");\n            if (elementCount && elementCount !== viewLength) {\n                var warning = _l(`displaying only ${viewLength} of ${elementCount} items`);\n                var $warns = $newRender.find(\".elements-warning\");\n                $warns.html(`<div class=\"warningmessagesmall\">${warning}</div>`);\n            }\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** In this override, use model.getVisibleContents */\n        _filterCollection: function() {\n            //TODO: should *not* be model.getVisibleContents - visibility is not model related\n            return this.model.getVisibleContents();\n        },\n\n        /** override to return proper view class based on element_type */\n        _getItemViewClass: function(model) {\n            //this.debug( this + '._getItemViewClass:', model );\n            //TODO: subclasses use DCEViewClass - but are currently unused - decide\n            switch (model.get(\"element_type\")) {\n                case \"hda\":\n                    return this.DatasetDCEViewClass;\n                case \"dataset_collection\":\n                    return this.getNestedDCDCEViewClass();\n            }\n            throw new TypeError(\"Unknown element type:\", model.get(\"element_type\"));\n        },\n\n        /** override to add link target and anon */\n        _getItemViewOptions: function(model) {\n            var options = _super.prototype._getItemViewOptions.call(this, model);\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                hasUser: this.hasUser,\n                //TODO: could move to only nested: list:paired\n                foldoutStyle: this.foldoutStyle\n            });\n        },\n\n        // ------------------------------------------------------------------------ collection sub-views\n        /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            _super.prototype._setUpItemViewListeners.call(panel, view);\n\n            // use pub-sub to: handle drilldown expansion and collapse\n            panel.listenTo(view, {\n                \"expanded:drilldown\": function(v, drilldown) {\n                    this._expandDrilldownPanel(drilldown);\n                },\n                \"collapsed:drilldown\": function(v, drilldown) {\n                    this._collapseDrilldownPanel(drilldown);\n                }\n            });\n            return this;\n        },\n\n        /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n        _expandDrilldownPanel: function(drilldown) {\n            this.panelStack.push(drilldown);\n            // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n            this.$(\"> .controls\")\n                .add(this.$list())\n                .hide();\n            drilldown.parentName = this.model.get(\"name\");\n            this.$el.append(drilldown.render().$el);\n        },\n\n        /** Handle drilldown close by freeing the panel and re-rendering this panel */\n        _collapseDrilldownPanel: function(drilldown) {\n            this.panelStack.pop();\n            this.render();\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: {\n            \"click .navigation .back\": \"close\"\n        },\n\n        /** close/remove this collection panel */\n        close: function(event) {\n            this.remove();\n            this.trigger(\"close\");\n        },\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `CollectionView(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nCollectionView.prototype.templates = (() => {\n    var controlsTemplate = (collection, view) => {\n        var subtitle = collectionDescription(view.model);\n        return `\n        <div class=\"controls\">\n            <div class=\"navigation\">\n            <a class=\"back\" href=\"javascript:void(0)\">\n                <span class=\"fa fa-icon fa-angle-left\"></span>\n                ${_l(\"Back to \")}\n                ${_.escape(view.parentName)}\n            </a>\n            </div>\n            <div class=\"title\">\n                <div class=\"name\">${_.escape(collection.name) || _.escape(collection.element_identifier)}</div>\n                <div class=\"subtitle\">\n                    ${subtitle}\n                </div>\n            </div>\n            <div class=\"elements-warning\">\n            </div>\n            <div class=\"tags-display\"></div>\n            <div class=\"actions\">\n                <a class=\"download-btn icon-btn\" href=\"${view.downloadUrl}\"\n                   title=\"\" download=\"\" data-original-title=\"Download Collection\">\n                   <span class=\"fa fa-floppy-o\"></span>\n                </a>\n            </div>\n        </div>`;\n    };\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        controls: controlsTemplate\n    });\n})();\n\nfunction collectionTypeDescription(collection) {\n    var collectionType = collection.get(\"collection_type\");\n    var collectionTypeDescription;\n    if (collectionType == \"list\") {\n        collectionTypeDescription = _l(\"list\");\n    } else if (collectionType == \"paired\") {\n        collectionTypeDescription = _l(\"dataset pair\");\n    } else if (collectionType == \"list:paired\") {\n        collectionTypeDescription = _l(\"list of pairs\");\n    } else {\n        collectionTypeDescription = _l(\"nested list\");\n    }\n    return collectionTypeDescription;\n}\n\nfunction collectionDescription(collection) {\n    var elementCount = collection.get(\"element_count\");\n\n    var itemsDescription = `a ${collectionTypeDescription(collection)}`;\n    if (elementCount) {\n        var countDescription;\n        if (elementCount == 1) {\n            countDescription = \"with 1 item\";\n        } else if (elementCount) {\n            countDescription = `with ${elementCount} items`;\n        }\n        itemsDescription = `${itemsDescription} ${_l(countDescription)}`;\n    }\n    return itemsDescription;\n}\n\n//==============================================================================\nexport default {\n    collectionTypeDescription: collectionTypeDescription,\n    collectionDescription: collectionDescription,\n    CollectionView: CollectionView\n};\n"]}