{"version":3,"sources":["mvc/collection/collection-li.js"],"names":["FoldoutListItemView","ListItemView","DCListItemView","extend","className","prototype","id","model","get","join","initialize","attributes","linkTarget","hasUser","call","_setUpListeners","listenTo","options","_","has","changed","render","$","replaceWith","_renderSubtitle","templates","subtitle","toJSON","_getFoldoutPanelOptions","$selector","toString","modelString","warnings","error","wrapTemplate","purged","deleted","titleBarTemplate","subtitleTemplate","titleBar","DCEListItemView","logger","log","DatasetDCEListItemView","DatasetListItemView","_fetchModelDetails","view","inReadyState","hasDetails","fetch","silent","jQuery","when","NestedDCDCEListItemView","_swapNewRender","$newRender","state","$el","addClass"],"mappings":"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","file":"../../../scripts/mvc/collection/collection-li.js","sourcesContent":["import LIST_ITEM from \"mvc/list/list-item\";\nimport DATASET_LI from \"mvc/dataset/dataset-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar FoldoutListItemView = LIST_ITEM.FoldoutListItemView;\n\nvar ListItemView = LIST_ITEM.ListItemView;\n/** @class Read only view for DatasetCollection.\n */\nvar DCListItemView = FoldoutListItemView.extend(\n    /** @lends DCListItemView.prototype */ {\n        className: `${FoldoutListItemView.prototype.className} dataset-collection`,\n        id: function() {\n            return [\"dataset_collection\", this.model.get(\"id\")].join(\"-\");\n        },\n\n        /** override to add linkTarget */\n        initialize: function(attributes) {\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n            this.hasUser = attributes.hasUser;\n            FoldoutListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            FoldoutListItemView.prototype._setUpListeners.call(this);\n            this.listenTo(this.model, \"change\", function(model, options) {\n                // if the model has changed deletion status render it entirely\n                if (_.has(model.changed, \"deleted\")) {\n                    this.render();\n\n                    // if the model has been decorated after the fact with the element count,\n                    // render the subtitle where the count is displayed\n                } else if (_.has(model.changed, \"element_count\")) {\n                    this.$(\"> .title-bar .subtitle\").replaceWith(this._renderSubtitle());\n                }\n            });\n        },\n\n        // ......................................................................... rendering\n        /** render a subtitle to show the user what sort of collection this is */\n        _renderSubtitle: function() {\n            return $(this.templates.subtitle(this.model.toJSON(), this));\n        },\n\n        // ......................................................................... foldout\n        /** override to add linktarget to sub-panel */\n        _getFoldoutPanelOptions: function() {\n            var options = FoldoutListItemView.prototype._getFoldoutPanelOptions.call(this);\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                hasUser: this.hasUser\n            });\n        },\n\n        /** override to not catch sub-panel selectors */\n        $selector: function() {\n            return this.$(\"> .selector\");\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DCListItemView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCListItemView.prototype.templates = (() => {\n    var warnings = _.extend({}, FoldoutListItemView.prototype.templates.warnings, {\n        error: BASE_MVC.wrapTemplate([\n            // error during index fetch - show error on dataset\n            \"<% if( model.error ){ %>\",\n            '<div class=\"errormessagesmall\">',\n            _l(\"There was an error getting the data for this collection\"),\n            \": <%- model.error %>\",\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        purged: BASE_MVC.wrapTemplate([\n            \"<% if( model.purged ){ %>\",\n            '<div class=\"purged-msg warningmessagesmall\">',\n            _l(\"This collection has been deleted and removed from disk\"),\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        deleted: BASE_MVC.wrapTemplate([\n            // deleted not purged\n            \"<% if( model.deleted && !model.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This collection has been deleted\"),\n            \"</div>\",\n            \"<% } %>\"\n        ])\n    });\n\n    // use element identifier\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- collection.element_identifier || collection.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    // use element identifier\n    var subtitleTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"subtitle\">',\n            '<% var countText = collection.element_count? ( collection.element_count + \" \" ) : \"\"; %>',\n            '<%        if( collection.collection_type === \"list\" ){ %>',\n            _l(\"a list of <%- countText %>datasets\"),\n            '<% } else if( collection.collection_type === \"paired\" ){ %>',\n            _l(\"a pair of datasets\"),\n            '<% } else if( collection.collection_type === \"list:paired\" ){ %>',\n            _l(\"a list of <%- countText %>dataset pairs\"),\n            '<% } else if( collection.collection_type === \"list:list\" ){ %>',\n            _l(\"a list of <%- countText %>dataset lists\"),\n            \"<% } %>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, FoldoutListItemView.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemView = ListItemView.extend(\n    /** @lends DCEListItemView.prototype */ {\n        /** add the DCE class to the list item */\n        className: `${ListItemView.prototype.className} dataset-collection-element`,\n\n        /** set up */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(\"DCEListItemView.initialize:\", attributes);\n            ListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DCEListItemView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCEListItemView.prototype.templates = (() => {\n    // use the element identifier here - since that will persist and the user will need it\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.element_identifier %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemView = DATASET_LI.DatasetListItemView.extend(\n    /** @lends DatasetDCEListItemView.prototype */ {\n        className: `${DATASET_LI.DatasetListItemView.prototype.className} dataset-collection-element`,\n\n        /** set up */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(\"DatasetDCEListItemView.initialize:\", attributes);\n            DATASET_LI.DatasetListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        /** In this override, only get details if in the ready state.\n         *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n         */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DatasetDCEListItemView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemView.prototype.templates = (() => {\n    // use the element identifier here and not the dataset name\n    //TODO:?? can we steal the DCE titlebar?\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.element_identifier %></span>',\n            \"</div>\",\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    return _.extend({}, DATASET_LI.DatasetListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemView = DCListItemView.extend(\n    /** @lends NestedDCDCEListItemView.prototype */ {\n        className: `${DCListItemView.prototype.className} dataset-collection-element`,\n\n        /** In this override, add the state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            DCListItemView.prototype._swapNewRender.call(this, $newRender);\n            var state = this.model.get(\"state\") || \"ok\";\n            this.$el.addClass(`state-${state}`);\n            return this.$el;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `NestedDCDCEListItemView(${modelString})`;\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    DCListItemView: DCListItemView,\n    DCEListItemView: DCEListItemView,\n    DatasetDCEListItemView: DatasetDCEListItemView,\n    NestedDCDCEListItemView: NestedDCDCEListItemView\n};\n"]}