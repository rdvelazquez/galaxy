{"version":3,"sources":["mvc/list/list-view.js"],"names":["logNamespace","ListPanel","Backbone","View","extend","LoggableMixin","_logNamespace","viewClass","ListItemView","collectionClass","Collection","tagName","className","fxSpeed","emptyMsg","noneFoundMsg","searchPlaceholder","initialize","attributes","options","logger","log","_","has","filters","searchFor","selecting","undefined","selected","lastSelected","dragItems","views","collection","_createDefaultCollection","$scrollContainer","title","subtitle","_setUpListeners","off","on","error","model","xhr","msg","details","console","loading","_showLoadingIndicator","_hideLoadingIndicator","once","trigger","_setUpCollectionListeners","_setUpViewListeners","stopListening","listenTo","update","changes","renderAll","added","length","removed","renderItems","addItemView","first","removeItemView","view","ev","shiftKey","lastSelectedView","viewFromModelId","selectRange","altKey","showSelectors","push","id","without","render","speed","$newRender","_buildNewRender","_setUpBehaviors","_queueNewRender","debug","$","templates","el","_renderControls","_renderTitle","_renderSubtitle","_renderSearch","$controls","controls","find","replaceWith","$where","panel","queue","$el","fadeOut","next","_swapNewRender","fadeIn","empty","attr","append","children","tooltip","_renderMultiselectActionMenu","$menu","actions","multiselectActions","$newMenu","join","$actions","map","html","action","click","preventDefault","func","parent","$list","$messages","$emptyMessage","$whereTo","freeViews","shownModels","_filterCollection","_createItemView","itemModel","_attachItems","_renderEmptyMessage","toggle","filter","bind","_filterItem","every","fn","call","matchesAll","ViewClass","_getItemViewClass","_getItemViewOptions","_setUpItemViewListeners","_destroyItemView","_destroyItemViews","self","forEach","v","expanded","selectable","contains","draggable","args","Array","prototype","slice","arguments","apply","json","getSelectedModels","toJSON","dataTransfer","setData","JSON","stringify","_renderItemView$el","text","expandAll","each","expand","collapseAll","collapse","modelIndex","indexOf","is","_attachView","useFx","isUndefined","splice","_insertIntoListAt","hide","slideDown","show","index","$what","prepend","eq","after","remove","viewFromModel","viewsWhereModel","properties","isMatch","viewRange","viewA","viewB","indexA","indexB","searchInput","placeholder","initialVal","onfirstsearch","_firstSearch","onsearch","searchItems","onclear","clearSearch","force","$search","val","THROTTLE_SELECTOR_FX_AT","showSelector","hideSelectors","slideUp","hideSelector","toggleSelectors","selectAll","event","select","deselectAll","deselect","range","getSelectedViews","constructor","callback","indicator","LoadingIndicator","scrollPosition","scrollTop","scrollTo","pos","animate","scrollToTop","scrollToItem","scrollToId","events","toString","elTemplate","wrapTemplate","controlsTemplate","ModelListPanel","modelCollectionKey","setModel","freeModel","oldModelId","get","_setUpModelListeners","unshift","info","clone"],"mappings":"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","file":"../../../scripts/mvc/list/list-view.js","sourcesContent":["import LIST_ITEM from \"mvc/list/list-item\";\nimport LoadingIndicator from \"ui/loading-indicator\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/search-input\";\n\nvar logNamespace = \"list\";\n/* ============================================================================\nTODO:\n\n============================================================================ */\n/** @class View for a list/collection of models and the sub-views of those models.\n *      Sub-views must (at least have the interface if not) inherit from ListItemView.\n *      (For a list panel that also includes some 'container' model (History->HistoryContents)\n *      use ModelWithListPanel)\n *\n *  Allows for:\n *      searching collection/sub-views\n *      selecting/multi-selecting sub-views\n *\n *  Currently used:\n *      for dataset/dataset-choice\n *      as superclass of ModelListPanel\n */\nvar ListPanel = Backbone.View.extend(BASE_MVC.LoggableMixin).extend(\n    /** @lends ListPanel.prototype */ {\n        _logNamespace: logNamespace,\n\n        /** class to use for constructing the sub-views */\n        viewClass: LIST_ITEM.ListItemView,\n        /** class to used for constructing collection of sub-view models */\n        collectionClass: Backbone.Collection,\n\n        tagName: \"div\",\n        className: \"list-panel\",\n\n        /** (in ms) that jquery effects will use */\n        fxSpeed: \"fast\",\n\n        /** string to display when the collection has no contents */\n        emptyMsg: _l(\"This list is empty\"),\n        /** displayed when no items match the search terms */\n        noneFoundMsg: _l(\"No matching items found\"),\n        /** string used for search placeholder */\n        searchPlaceholder: _l(\"search\"),\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n         *  @param {Object} attributes optional settings for the list\n         */\n        initialize: function(attributes, options) {\n            attributes = attributes || {};\n            // set the logger if requested\n            if (attributes.logger) {\n                this.logger = attributes.logger;\n            }\n            this.log(`${this}.initialize:`, attributes);\n\n            // ---- instance vars\n            /** how quickly should jquery fx run? */\n            this.fxSpeed = _.has(attributes, \"fxSpeed\") ? attributes.fxSpeed : this.fxSpeed;\n\n            /** filters for displaying subviews */\n            this.filters = [];\n            /** current search terms */\n            this.searchFor = attributes.searchFor || \"\";\n\n            /** loading indicator */\n            // this.indicator = new LoadingIndicator( this.$el );\n\n            /** currently showing selectors on items? */\n            this.selecting = attributes.selecting !== undefined ? attributes.selecting : true;\n            //this.selecting = false;\n\n            /** cached selected item.model.ids to persist btwn renders */\n            this.selected = attributes.selected || [];\n            /** the last selected item.model.id */\n            this.lastSelected = null;\n\n            /** are sub-views draggable */\n            this.dragItems = attributes.dragItems || false;\n\n            /** list item view class (when passed models) */\n            this.viewClass = attributes.viewClass || this.viewClass;\n\n            /** list item views */\n            this.views = [];\n            /** list item models */\n            this.collection = attributes.collection || this._createDefaultCollection();\n\n            /** filter fns run over collection items to see if they should show in the list */\n            this.filters = attributes.filters || [];\n\n            /** override $scrollContainer fn via attributes - fn should return jq for elem to call scrollTo on */\n            this.$scrollContainer = attributes.$scrollContainer || this.$scrollContainer;\n\n            /** @type {String} generic title */\n            this.title = attributes.title || \"\";\n            /** @type {String} generic subtitle */\n            this.subtitle = attributes.subtitle || \"\";\n\n            this._setUpListeners();\n        },\n\n        // ------------------------------------------------------------------------ listeners\n        /** create any event listeners for the list */\n        _setUpListeners: function() {\n            this.off();\n\n            //TODO: move errorHandler down into list-view from history-view or\n            //  pass to global error handler (Galaxy)\n            this.on({\n                error: function(model, xhr, options, msg, details) {\n                    //this.errorHandler( model, xhr, options, msg, details );\n                    console.error(model, xhr, options, msg, details);\n                },\n                // show hide the loading indicator\n                loading: function() {\n                    this._showLoadingIndicator(\"loading...\", 40);\n                },\n                \"loading-done\": function() {\n                    this._hideLoadingIndicator(40);\n                }\n            });\n\n            // throw the first render up as a diff namespace using once (for outside consumption)\n            this.once(\"rendered\", function() {\n                this.trigger(\"rendered:initial\", this);\n            });\n\n            this._setUpCollectionListeners();\n            this._setUpViewListeners();\n            return this;\n        },\n\n        /** create and return a collection for when none is initially passed */\n        _createDefaultCollection: function() {\n            // override\n            return new this.collectionClass([]);\n        },\n\n        /** listening for collection events */\n        _setUpCollectionListeners: function() {\n            this.log(`${this}._setUpCollectionListeners`, this.collection);\n            this.stopListening(this.collection);\n\n            // bubble up error events\n            this.listenTo(this.collection, {\n                error: function(model, xhr, options, msg, details) {\n                    this.trigger(\"error\", model, xhr, options, msg, details);\n                },\n                update: function(collection, options) {\n                    var changes = options.changes;\n                    // console.info( collection + ', update:', changes, '\\noptions:', options );\n                    // more than one: render everything\n                    if (options.renderAll || changes.added.length + changes.removed.length > 1) {\n                        return this.renderItems();\n                    }\n                    // otherwise, let the single add/remove handlers do it\n                    if (changes.added.length === 1) {\n                        return this.addItemView(_.first(changes.added), collection, options);\n                    }\n                    if (changes.removed.length === 1) {\n                        return this.removeItemView(_.first(changes.removed), collection, options);\n                    }\n                }\n            });\n            return this;\n        },\n\n        /** listening for sub-view events that bubble up with the 'view:' prefix */\n        _setUpViewListeners: function() {\n            this.log(`${this}._setUpViewListeners`);\n\n            // shift to select a range\n            this.on({\n                \"view:selected\": function(view, ev) {\n                    if (ev && ev.shiftKey && this.lastSelected) {\n                        var lastSelectedView = this.viewFromModelId(this.lastSelected);\n                        if (lastSelectedView) {\n                            this.selectRange(view, lastSelectedView);\n                        }\n                    } else if (ev && ev.altKey && !this.selecting) {\n                        this.showSelectors();\n                    }\n                    this.selected.push(view.model.id);\n                    this.lastSelected = view.model.id;\n                },\n\n                \"view:de-selected\": function(view, ev) {\n                    this.selected = _.without(this.selected, view.model.id);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ rendering\n        /** Render this content, set up ui.\n         *  @param {Number or String} speed   the speed of the render\n         */\n        render: function(speed) {\n            this.log(`${this}.render`, speed);\n            var $newRender = this._buildNewRender();\n            this._setUpBehaviors($newRender);\n            this._queueNewRender($newRender, speed);\n            return this;\n        },\n\n        /** Build a temp div containing the new children for the view's $el. */\n        _buildNewRender: function() {\n            this.debug(`${this}(ListPanel)._buildNewRender`);\n            var $newRender = $(this.templates.el({}, this));\n            this._renderControls($newRender);\n            this._renderTitle($newRender);\n            this._renderSubtitle($newRender);\n            this._renderSearch($newRender);\n            this.renderItems($newRender);\n            return $newRender;\n        },\n\n        /** Build a temp div containing the new children for the view's $el. */\n        _renderControls: function($newRender) {\n            this.debug(`${this}(ListPanel)._renderControls`);\n            var $controls = $(this.templates.controls({}, this));\n            $newRender.find(\".controls\").replaceWith($controls);\n            return $controls;\n        },\n\n        /** return a jQuery object containing the title DOM */\n        _renderTitle: function($where) {\n            //$where = $where || this.$el;\n            //$where.find( '.title' ).replaceWith( ... )\n        },\n\n        /** return a jQuery object containing the subtitle DOM (if any) */\n        _renderSubtitle: function($where) {\n            //$where = $where || this.$el;\n            //$where.find( '.title' ).replaceWith( ... )\n        },\n\n        /** Fade out the old el, swap in the new contents, then fade in.\n         *  @param {Number or String} speed   jq speed to use for rendering effects\n         *  @fires rendered when rendered\n         */\n        _queueNewRender: function($newRender, speed) {\n            speed = speed === undefined ? this.fxSpeed : speed;\n            var panel = this;\n            panel.log(\"_queueNewRender:\", $newRender, speed);\n\n            $(panel).queue(\"fx\", [\n                next => {\n                    panel.$el.fadeOut(speed, next);\n                },\n                next => {\n                    panel._swapNewRender($newRender);\n                    next();\n                },\n                next => {\n                    panel.$el.fadeIn(speed, next);\n                },\n                next => {\n                    panel.trigger(\"rendered\", panel);\n                    next();\n                }\n            ]);\n        },\n\n        /** empty out the current el, move the $newRender's children in */\n        _swapNewRender: function($newRender) {\n            this.$el\n                .empty()\n                .attr(\"class\", this.className)\n                .append($newRender.children());\n            if (this.selecting) {\n                this.showSelectors(0);\n            }\n            return this;\n        },\n\n        /** Set up any behaviors, handlers (ep. plugins) that need to be called when the entire view has been built but\n         *  not attached to the page yet.\n         */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            this.$controls($where)\n                .find(\"[title]\")\n                .tooltip();\n            // set up the pupup for actions available when multi selecting\n            this._renderMultiselectActionMenu($where);\n            return this;\n        },\n\n        /** render a menu containing the actions available to sets of selected items */\n        _renderMultiselectActionMenu: function($where) {\n            $where = $where || this.$el;\n            var $menu = $where.find(\".list-action-menu\");\n            var actions = this.multiselectActions();\n            if (!actions.length) {\n                return $menu.empty();\n            }\n\n            var $newMenu = $(\n                [\n                    '<div class=\"list-action-menu btn-group\">',\n                    '<button class=\"list-action-menu-btn btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                    _l(\"For all selected\"),\n                    \"...\",\n                    \"</button>\",\n                    '<ul class=\"dropdown-menu pull-right\" role=\"menu\">',\n                    \"</ul>\",\n                    \"</div>\"\n                ].join(\"\")\n            );\n            var $actions = actions.map(action => {\n                var html = ['<li><a href=\"javascript:void(0);\">', action.html, \"</a></li>\"].join(\"\");\n                return $(html).click(ev => {\n                    ev.preventDefault();\n                    return action.func(ev);\n                });\n            });\n            $newMenu.find(\"ul\").append($actions);\n            $menu.replaceWith($newMenu);\n            return $newMenu;\n        },\n\n        /** return a list of plain objects used to render multiselect actions menu. Each object should have:\n         *      html: an html string used as the anchor contents\n         *      func: a function called when the anchor is clicked (passed the click event)\n         */\n        multiselectActions: function() {\n            return [];\n        },\n\n        // ------------------------------------------------------------------------ sub-$element shortcuts\n        /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n        $scrollContainer: function($where) {\n            // override or set via attributes.$scrollContainer\n            return ($where || this.$el).parent().parent();\n        },\n        /** convenience selector for the section that displays the list controls */\n        $controls: function($where) {\n            return ($where || this.$el).find(\"> .controls\");\n        },\n        /** list-items: where the subviews are contained in the view's dom */\n        $list: function($where) {\n            return ($where || this.$el).find(\"> .list-items\");\n        },\n        /** container where list messages are attached */\n        $messages: function($where) {\n            //TODO: controls isn't really correct here (only for ModelListPanel)\n            return ($where || this.$el).find(\"> .controls .messages\");\n        },\n        /** the message displayed when no views can be shown (no views, none matching search) */\n        $emptyMessage: function($where) {\n            return ($where || this.$el).find(\"> .empty-message\");\n        },\n\n        // ------------------------------------------------------------------------ hda sub-views\n        /** render the subviews for the list's collection */\n        renderItems: function($whereTo) {\n            $whereTo = $whereTo || this.$el;\n            var panel = this;\n            panel.log(`${this}.renderItems`, $whereTo);\n\n            var $list = panel.$list($whereTo);\n            panel.freeViews();\n            // console.log( 'views freed' );\n            //TODO:? cache and re-use views?\n            var shownModels = panel._filterCollection();\n            // console.log( 'models filtered:', shownModels );\n\n            panel.views = shownModels.map(itemModel => {\n                var view = panel._createItemView(itemModel);\n                return view;\n            });\n\n            $list.empty();\n            // console.log( 'list emptied' );\n            if (panel.views.length) {\n                panel._attachItems($whereTo);\n                // console.log( 'items attached' );\n            }\n            panel._renderEmptyMessage($whereTo).toggle(!panel.views.length);\n            panel.trigger(\"views:ready\", panel.views);\n\n            // console.log( '------------------------------------------- rendering items' );\n            return panel.views;\n        },\n\n        /** Filter the collection to only those models that should be currently viewed */\n        _filterCollection: function() {\n            // override this\n            var panel = this;\n            return panel.collection.filter(_.bind(panel._filterItem, panel));\n        },\n\n        /** Should the model be viewable in the current state?\n         *     Checks against this.filters and this.searchFor\n         */\n        _filterItem: function(model) {\n            // override this\n            var panel = this;\n            return (\n                _.every(panel.filters.map(fn => fn.call(model))) &&\n                (!panel.searchFor || model.matchesAll(panel.searchFor))\n            );\n        },\n\n        /** Create a view for a model and set up it's listeners */\n        _createItemView: function(model) {\n            var ViewClass = this._getItemViewClass(model);\n            var options = _.extend(this._getItemViewOptions(model), {\n                model: model\n            });\n            var view = new ViewClass(options);\n            this._setUpItemViewListeners(view);\n            return view;\n        },\n\n        /** Free a view for a model. Note: does not remove it from the DOM */\n        _destroyItemView: function(view) {\n            this.stopListening(view);\n            this.views = _.without(this.views, view);\n        },\n\n        _destroyItemViews: function(view) {\n            var self = this;\n            self.views.forEach(v => {\n                self.stopListening(v);\n            });\n            self.views = [];\n            return self;\n        },\n\n        /** free any sub-views the list has */\n        freeViews: function() {\n            return this._destroyItemViews();\n        },\n\n        /** Get the bbone view class based on the model */\n        _getItemViewClass: function(model) {\n            // override this\n            return this.viewClass;\n        },\n\n        /** Get the options passed to the new view based on the model */\n        _getItemViewOptions: function(model) {\n            // override this\n            return {\n                //logger      : this.logger,\n                fxSpeed: this.fxSpeed,\n                expanded: false,\n                selectable: this.selecting,\n                selected: _.contains(this.selected, model.id),\n                draggable: this.dragItems\n            };\n        },\n\n        /** Set up listeners for new models */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            // send all events to the panel, re-namspaceing them with the view prefix\n            this.listenTo(view, \"all\", function() {\n                var args = Array.prototype.slice.call(arguments, 0);\n                args[0] = `view:${args[0]}`;\n                panel.trigger.apply(panel, args);\n            });\n\n            // drag multiple - hijack ev.setData to add all selected items\n            this.listenTo(\n                view,\n                \"draggable:dragstart\",\n                function(ev, v) {\n                    //TODO: set multiple drag data here\n                    var json = {};\n\n                    var selected = this.getSelectedModels();\n                    if (selected.length) {\n                        json = selected.toJSON();\n                    } else {\n                        json = [v.model.toJSON()];\n                    }\n                    ev.dataTransfer.setData(\"text\", JSON.stringify(json));\n                    //ev.dataTransfer.setDragImage( v.el, 60, 60 );\n                },\n                this\n            );\n\n            return panel;\n        },\n\n        /** Attach views in this.views to the model based on $whereTo */\n        _attachItems: function($whereTo) {\n            var self = this;\n            // console.log( '_attachItems:', $whereTo, this.$list( $whereTo ) );\n            //ASSUMES: $list has been emptied\n            this.$list($whereTo).append(this.views.map(view => self._renderItemView$el(view)));\n            return this;\n        },\n\n        /** get a given subview's $el (or whatever may wrap it) and return it */\n        _renderItemView$el: function(view) {\n            // useful to wrap and override\n            return view.render(0).$el;\n        },\n\n        /** render the empty/none-found message */\n        _renderEmptyMessage: function($whereTo) {\n            this.debug(\"_renderEmptyMessage\", $whereTo, this.searchFor);\n            var text = this.searchFor ? this.noneFoundMsg : this.emptyMsg;\n            return this.$emptyMessage($whereTo).text(text);\n        },\n\n        /** expand all item views */\n        expandAll: function() {\n            _.each(this.views, view => {\n                view.expand();\n            });\n        },\n\n        /** collapse all item views */\n        collapseAll: function() {\n            _.each(this.views, view => {\n                view.collapse();\n            });\n        },\n\n        // ------------------------------------------------------------------------ collection/views syncing\n        /** Add a view (if the model should be viewable) to the panel */\n        addItemView: function(model, collection, options) {\n            // console.log( this + '.addItemView:', model );\n            var panel = this;\n            // get the index of the model in the list of filtered models shown by this list\n            // in order to insert the view in the proper place\n            //TODO:? potentially expensive\n            var modelIndex = panel._filterCollection().indexOf(model);\n            if (modelIndex === -1) {\n                return undefined;\n            }\n            var view = panel._createItemView(model);\n            // console.log( 'adding and rendering:', modelIndex, view.toString() );\n\n            $(view).queue(\"fx\", [\n                next => {\n                    // hide the empty message first if only view\n                    if (panel.$emptyMessage().is(\":visible\")) {\n                        panel.$emptyMessage().fadeOut(panel.fxSpeed, next);\n                    } else {\n                        next();\n                    }\n                },\n                next => {\n                    panel._attachView(view, modelIndex);\n                    next();\n                }\n            ]);\n            return view;\n        },\n\n        /** internal fn to add view (to both panel.views and panel.$list) */\n        _attachView: function(view, modelIndex, useFx) {\n            // console.log( this + '._attachView:', view, modelIndex, useFx );\n            useFx = _.isUndefined(useFx) ? true : useFx;\n            modelIndex = modelIndex || 0;\n            var panel = this;\n\n            // use the modelIndex to splice into views and insert at the proper index in the DOM\n            panel.views.splice(modelIndex, 0, view);\n            panel._insertIntoListAt(modelIndex, panel._renderItemView$el(view).hide());\n\n            panel.trigger(\"view:attached\", view);\n            if (useFx) {\n                view.$el.slideDown(panel.fxSpeed, () => {\n                    panel.trigger(\"view:attached:rendered\");\n                });\n            } else {\n                view.$el.show();\n                panel.trigger(\"view:attached:rendered\");\n            }\n            return view;\n        },\n\n        /** insert a jq object as a child of list-items at the specified *DOM index* */\n        _insertIntoListAt: function(index, $what) {\n            // console.log( this + '._insertIntoListAt:', index, $what );\n            var $list = this.$list();\n            if (index === 0) {\n                $list.prepend($what);\n            } else {\n                $list\n                    .children()\n                    .eq(index - 1)\n                    .after($what);\n            }\n            return $what;\n        },\n\n        /** Remove a view from the panel (if found) */\n        removeItemView: function(model, collection, options) {\n            var panel = this;\n            var view = _.find(panel.views, v => v.model === model);\n            if (!view) {\n                return undefined;\n            }\n            panel.views = _.without(panel.views, view);\n            panel.trigger(\"view:removed\", view);\n\n            // potentially show the empty message if no views left\n            // use anonymous queue here - since remove can happen multiple times\n            $({}).queue(\"fx\", [\n                next => {\n                    view.$el.fadeOut(panel.fxSpeed, next);\n                },\n                next => {\n                    view.remove();\n                    panel.trigger(\"view:removed:rendered\");\n                    if (!panel.views.length) {\n                        panel._renderEmptyMessage().fadeIn(panel.fxSpeed, next);\n                    } else {\n                        next();\n                    }\n                }\n            ]);\n            return view;\n        },\n\n        /** get views based on model.id */\n        viewFromModelId: function(id) {\n            return _.find(this.views, v => v.model.id === id);\n        },\n\n        /** get views based on model */\n        viewFromModel: function(model) {\n            return model ? this.viewFromModelId(model.id) : undefined;\n        },\n\n        /** get views based on model properties */\n        viewsWhereModel: function(properties) {\n            return this.views.filter(view => _.isMatch(view.model.attributes, properties));\n        },\n\n        /** A range of views between (and including) viewA and viewB */\n        viewRange: function(viewA, viewB) {\n            if (viewA === viewB) {\n                return viewA ? [viewA] : [];\n            }\n\n            var indexA = this.views.indexOf(viewA);\n            var indexB = this.views.indexOf(viewB);\n\n            // handle not found\n            if (indexA === -1 || indexB === -1) {\n                if (indexA === indexB) {\n                    return [];\n                }\n                return indexA === -1 ? [viewB] : [viewA];\n            }\n            // reverse if indeces are\n            //note: end inclusive\n            return indexA < indexB ? this.views.slice(indexA, indexB + 1) : this.views.slice(indexB, indexA + 1);\n        },\n\n        // ------------------------------------------------------------------------ searching\n        /** render a search input for filtering datasets shown\n         *      (see SearchableMixin in base-mvc for implementation of the actual searching)\n         *      return will start the search\n         *      esc will clear the search\n         *      clicking the clear button will clear the search\n         *      uses searchInput in ui.js\n         */\n        _renderSearch: function($where) {\n            $where.find(\".controls .search-input\").searchInput({\n                placeholder: this.searchPlaceholder,\n                initialVal: this.searchFor,\n                onfirstsearch: _.bind(this._firstSearch, this),\n                onsearch: _.bind(this.searchItems, this),\n                onclear: _.bind(this.clearSearch, this)\n            });\n            return $where;\n        },\n\n        /** What to do on the first search entered */\n        _firstSearch: function(searchFor) {\n            // override to load model details if necc.\n            this.log(\"onFirstSearch\", searchFor);\n            return this.searchItems(searchFor);\n        },\n\n        /** filter view list to those that contain the searchFor terms */\n        searchItems: function(searchFor, force) {\n            this.log(\"searchItems\", searchFor, this.searchFor, force);\n            if (!force && this.searchFor === searchFor) {\n                return this;\n            }\n            this.searchFor = searchFor;\n            this.renderItems();\n            this.trigger(\"search:searching\", searchFor, this);\n            var $search = this.$(\"> .controls .search-query\");\n            if ($search.val() !== searchFor) {\n                $search.val(searchFor);\n            }\n            return this;\n        },\n\n        /** clear the search filters and show all views that are normally shown */\n        clearSearch: function(searchFor) {\n            //this.log( 'onSearchClear', this );\n            this.searchFor = \"\";\n            this.trigger(\"search:clear\", this);\n            this.$(\"> .controls .search-query\").val(\"\");\n            this.renderItems();\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ selection\n        /** @type Integer when the number of list item views is >= to this, don't animate selectors */\n        THROTTLE_SELECTOR_FX_AT: 20,\n\n        /** show selectors on all visible itemViews and associated controls */\n        showSelectors: function(speed) {\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            this.selecting = true;\n            this.$(\".list-actions\").slideDown(speed);\n            speed = this.views.length >= this.THROTTLE_SELECTOR_FX_AT ? 0 : speed;\n            _.each(this.views, view => {\n                view.showSelector(speed);\n            });\n            //this.selected = [];\n            //this.lastSelected = null;\n        },\n\n        /** hide selectors on all visible itemViews and associated controls */\n        hideSelectors: function(speed) {\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            this.selecting = false;\n            this.$(\".list-actions\").slideUp(speed);\n            speed = this.views.length >= this.THROTTLE_SELECTOR_FX_AT ? 0 : speed;\n            _.each(this.views, view => {\n                view.hideSelector(speed);\n            });\n            this.selected = [];\n            this.lastSelected = null;\n        },\n\n        /** show or hide selectors on all visible itemViews and associated controls */\n        toggleSelectors: function() {\n            if (!this.selecting) {\n                this.showSelectors();\n            } else {\n                this.hideSelectors();\n            }\n        },\n\n        /** select all visible items */\n        selectAll: function(event) {\n            _.each(this.views, view => {\n                view.select(event);\n            });\n        },\n\n        /** deselect all visible items */\n        deselectAll: function(event) {\n            this.lastSelected = null;\n            _.each(this.views, view => {\n                view.deselect(event);\n            });\n        },\n\n        /** select a range of datasets between A and B */\n        selectRange: function(viewA, viewB) {\n            var range = this.viewRange(viewA, viewB);\n            _.each(range, view => {\n                view.select();\n            });\n            return range;\n        },\n\n        /** return an array of all currently selected itemViews */\n        getSelectedViews: function() {\n            return _.filter(this.views, v => v.selected);\n        },\n\n        /** return a collection of the models of all currenly selected items */\n        getSelectedModels: function() {\n            // console.log( '(getSelectedModels)' );\n            return new this.collection.constructor(_.map(this.getSelectedViews(), view => view.model));\n        },\n\n        // ------------------------------------------------------------------------ loading indicator\n        /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n        _showLoadingIndicator: function(msg, speed, callback) {\n            this.debug(\"_showLoadingIndicator\", this.indicator, msg, speed, callback);\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            if (!this.indicator) {\n                this.indicator = new LoadingIndicator.LoadingIndicator(this.$el);\n                this.debug(\"\\t created\", this.indicator);\n            }\n            if (!this.$el.is(\":visible\")) {\n                this.indicator.show(0, callback);\n            } else {\n                this.$el.fadeOut(speed);\n                this.indicator.show(msg, speed, callback);\n            }\n        },\n\n        /** hide the loading indicator */\n        _hideLoadingIndicator: function(speed, callback) {\n            this.debug(\"_hideLoadingIndicator\", this.indicator, speed, callback);\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            if (this.indicator) {\n                this.indicator.hide(speed, callback);\n            }\n        },\n\n        // ------------------------------------------------------------------------ scrolling\n        /** get the current scroll position of the panel in its parent */\n        scrollPosition: function() {\n            return this.$scrollContainer().scrollTop();\n        },\n\n        /** set the current scroll position of the panel in its parent */\n        scrollTo: function(pos, speed) {\n            speed = speed || 0;\n            this.$scrollContainer().animate({ scrollTop: pos }, speed);\n            return this;\n        },\n\n        /** Scrolls the panel to the top. */\n        scrollToTop: function(speed) {\n            return this.scrollTo(0, speed);\n        },\n\n        /** scroll to the given view in list-items */\n        scrollToItem: function(view, speed) {\n            if (!view) {\n                return this;\n            }\n            return this;\n        },\n\n        /** Scrolls the panel to show the content with the given id. */\n        scrollToId: function(id, speed) {\n            return this.scrollToItem(this.viewFromModelId(id), speed);\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: {\n            \"click .select-all\": \"selectAll\",\n            \"click .deselect-all\": \"deselectAll\"\n        },\n\n        // ------------------------------------------------------------------------ misc\n        /** Return a string rep of the panel */\n        toString: function() {\n            return `ListPanel(${this.collection})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListPanel.prototype.templates = (() => {\n    var elTemplate = BASE_MVC.wrapTemplate([\n        // temp container\n        \"<div>\",\n        '<div class=\"controls\"></div>',\n        '<div class=\"list-items\"></div>',\n        '<div class=\"empty-message infomessagesmall\"></div>',\n        \"</div>\"\n    ]);\n\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n        '<div class=\"title\">',\n        '<div class=\"name\"><%- view.title %></div>',\n        \"</div>\",\n        '<div class=\"subtitle\"><%- view.subtitle %></div>',\n        // buttons, controls go here\n        '<div class=\"actions\"></div>',\n        // deleted msg, etc.\n        '<div class=\"messages\"></div>',\n\n        '<div class=\"search\">',\n        '<div class=\"search-input\"></div>',\n        \"</div>\",\n\n        // show when selectors are shown\n        '<div class=\"list-actions\">',\n        '<div class=\"btn-group\">',\n        '<button class=\"select-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"All\"),\n        \"</button>\",\n        '<button class=\"deselect-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"None\"),\n        \"</button>\",\n        \"</div>\",\n        '<div class=\"list-action-menu btn-group\">',\n        \"</div>\",\n        \"</div>\",\n        \"</div>\"\n    ]);\n\n    return {\n        el: elTemplate,\n        controls: controlsTemplate\n    };\n})();\n\n//=============================================================================\n/** View for a model that has a sub-collection (e.g. History, DatasetCollection)\n *  Allows:\n *      the model to be reset\n *      auto assign panel.collection to panel.model[ panel.modelCollectionKey ]\n *\n */\nvar ModelListPanel = ListPanel.extend({\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey: \"contents\",\n\n    initialize: function(attributes) {\n        ListPanel.prototype.initialize.call(this, attributes);\n        this.selecting = attributes.selecting !== undefined ? attributes.selecting : false;\n\n        this.setModel(this.model, attributes);\n    },\n\n    /** release/free/shutdown old models and set up panel for new models\n     *  @fires new-model with the panel as parameter\n     */\n    setModel: function(model, attributes) {\n        attributes = attributes || {};\n        this.debug(`${this}.setModel:`, model, attributes);\n\n        this.freeModel();\n        this.freeViews();\n\n        if (model) {\n            var oldModelId = this.model ? this.model.get(\"id\") : null;\n\n            // set up the new model with user, logger, storage, events\n            this.model = model;\n            if (this.logger) {\n                this.model.logger = this.logger;\n            }\n            this._setUpModelListeners();\n\n            //TODO: relation btwn model, collection becoming tangled here\n            // free the collection, and assign the new collection to either\n            //  the model[ modelCollectionKey ], attributes.collection, or an empty vanilla collection\n            this.stopListening(this.collection);\n            this.collection =\n                this.model[this.modelCollectionKey] || attributes.collection || this._createDefaultCollection();\n            this._setUpCollectionListeners();\n\n            if (oldModelId && model.get(\"id\") !== oldModelId) {\n                this.trigger(\"new-model\", this);\n            }\n        }\n        return this;\n    },\n\n    /** free the current model and all listeners for it, free any views for the model */\n    freeModel: function() {\n        // stop/release the previous model, and clear cache to sub-views\n        if (this.model) {\n            this.stopListening(this.model);\n            //TODO: see base-mvc\n            //this.model.free();\n            //this.model = null;\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ listening\n    /** listening for model events */\n    _setUpModelListeners: function() {\n        // override\n        this.log(`${this}._setUpModelListeners`, this.model);\n        // bounce model errors up to the panel\n        this.listenTo(\n            this.model,\n            \"error\",\n            function() {\n                var args = Array.prototype.slice.call(arguments, 0);\n                //args.unshift( 'model:error' );\n                args.unshift(\"error\");\n                this.trigger.apply(this, args);\n            },\n            this\n        );\n\n        // debugging\n        if (this.logger) {\n            this.listenTo(this.model, \"all\", function(event) {\n                this.info(`${this}(model)`, event, arguments);\n            });\n        }\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     */\n    _renderControls: function($newRender) {\n        this.debug(`${this}(ModelListPanel)._renderControls`);\n        var json = this.model ? this.model.toJSON() : {};\n        var $controls = $(this.templates.controls(json, this));\n        $newRender.find(\".controls\").replaceWith($controls);\n        return $controls;\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString: function() {\n        return `ModelListPanel(${this.model})`;\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nModelListPanel.prototype.templates = (() => {\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n        '<div class=\"title\">',\n        //TODO: this is really the only difference - consider factoring titlebar out\n        '<div class=\"name\"><%- model.name %></div>',\n        \"</div>\",\n        '<div class=\"subtitle\"><%- view.subtitle %></div>',\n        '<div class=\"actions\"></div>',\n        '<div class=\"messages\"></div>',\n\n        '<div class=\"search\">',\n        '<div class=\"search-input\"></div>',\n        \"</div>\",\n\n        '<div class=\"list-actions\">',\n        '<div class=\"btn-group\">',\n        '<button class=\"select-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"All\"),\n        \"</button>\",\n        '<button class=\"deselect-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"None\"),\n        \"</button>\",\n        \"</div>\",\n        '<div class=\"list-action-menu btn-group\">',\n        \"</div>\",\n        \"</div>\",\n        \"</div>\"\n    ]);\n\n    return _.extend(_.clone(ListPanel.prototype.templates), {\n        controls: controlsTemplate\n    });\n})();\n\n//=============================================================================\nexport default {\n    ListPanel: ListPanel,\n    ModelListPanel: ModelListPanel\n};\n"]}