{"version":3,"sources":["mvc/list/list-item.js"],"names":["logNamespace","ExpandableView","Backbone","View","extend","LoggableMixin","_logNamespace","initialize","attributes","expanded","log","fxSpeed","undefined","render","speed","$newRender","_buildNewRender","_setUpBehaviors","_queueNewRender","$","templates","el","model","toJSON","$details","replaceWith","_renderDetails","show","view","_swapNewRender","trigger","queue","$el","fadeOut","next","fadeIn","empty","attr","_","isFunction","className","append","children","$where","find","tooltip","placement","$newDetails","details","toggleExpanded","expand","collapse","_fetchModelDetails","always","_expand","hasDetails","fetch","jQuery","when","slideDown","debug","slideUp","ListItemView","mixin","SelectableViewMixin","DraggableViewMixin","tagName","prototype","call","_setUpListeners","on","isSelectable","hide","_renderWarnings","_renderTitleBar","_renderPrimaryActions","_renderSubtitle","selectable","showSelector","draggable","draggableOn","$warnings","json","each","warnings","templateFn","titleBar","subtitle","events","_clickTitleBar","event","stopPropagation","altKey","toggleSelect","_keyDownTitleBar","KEYCODE_SPACE","KEYCODE_RETURN","type","keyCode","toString","modelString","elTemplato","wrapTemplate","titleBarTemplate","subtitleTemplate","detailsTemplate","FoldoutListItemView","foldoutStyle","foldoutPanelClass","foldout","_createFoldoutPanel","_attachFoldout","FoldoutClass","_getFoldoutPanelClass","options","_getFoldoutPanelOptions","$whereTo","_expandByDrilldown","listenTo"],"mappings":"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","file":"../../../scripts/mvc/list/list-item.js","sourcesContent":["import BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"list\";\n//==============================================================================\n/** A view which, when first rendered, shows only summary data/attributes, but\n *      can be expanded to show further details (and optionally fetch those\n *      details from the server).\n */\nvar ExpandableView = Backbone.View.extend(BASE_MVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: Although the reasoning behind them is different, this shares a lot with HiddenUntilActivated above: combine them\n    //PRECONDITION: model must have method hasDetails\n    //PRECONDITION: subclasses must have templates.el and templates.details\n\n    initialize: function(attributes) {\n        /** are the details of this view expanded/shown or not? */\n        this.expanded = attributes.expanded || false;\n        this.log(\"\\t expanded:\", this.expanded);\n        this.fxSpeed = attributes.fxSpeed !== undefined ? attributes.fxSpeed : this.fxSpeed;\n    },\n\n    // ........................................................................ render main\n    /** jq fx speed */\n    fxSpeed: \"fast\",\n\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render: function(speed) {\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors($newRender);\n        this._queueNewRender($newRender, speed);\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     *      If the view is already expanded, build the details as well.\n     */\n    _buildNewRender: function() {\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = $(this.templates.el(this.model.toJSON(), this));\n        if (this.expanded) {\n            this.$details($newRender).replaceWith(this._renderDetails().show());\n        }\n        return $newRender;\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender: function($newRender, speed) {\n        speed = speed === undefined ? this.fxSpeed : speed;\n        var view = this;\n\n        if (speed === 0) {\n            view._swapNewRender($newRender);\n            view.trigger(\"rendered\", view);\n        } else {\n            $(view).queue(\"fx\", [\n                next => {\n                    view.$el.fadeOut(speed, next);\n                },\n                next => {\n                    view._swapNewRender($newRender);\n                    next();\n                },\n                next => {\n                    view.$el.fadeIn(speed, next);\n                },\n                next => {\n                    view.trigger(\"rendered\", view);\n                    next();\n                }\n            ]);\n        }\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender: function($newRender) {\n        return this.$el\n            .empty()\n            .attr(\"class\", _.isFunction(this.className) ? this.className() : this.className)\n            .append($newRender.children());\n    },\n\n    /** set up js behaviors, event handlers for elements within the given container\n     *  @param {jQuery} $container jq object that contains the elements to process (defaults to this.$el)\n     */\n    _setUpBehaviors: function($where) {\n        $where = $where || this.$el;\n        // set up canned behavior on children (bootstrap, popupmenus, editable_text, etc.)\n        //make_popup_menus( $where );\n        $where.find(\"[title]\").tooltip({ placement: \"bottom\" });\n    },\n\n    // ......................................................................... details\n    /** shortcut to details DOM (as jQ) */\n    $details: function($where) {\n        $where = $where || this.$el;\n        return $where.find(\"> .details\");\n    },\n\n    /** build the DOM for the details and set up behaviors on it */\n    _renderDetails: function() {\n        var $newDetails = $(this.templates.details(this.model.toJSON(), this));\n        this._setUpBehaviors($newDetails);\n        return $newDetails;\n    },\n\n    // ......................................................................... expansion/details\n    /** Show or hide the details\n     *  @param {Boolean} expand if true, expand; if false, collapse\n     */\n    toggleExpanded: function(expand) {\n        expand = expand === undefined ? !this.expanded : expand;\n        if (expand) {\n            this.expand();\n        } else {\n            this.collapse();\n        }\n        return this;\n    },\n\n    /** Render and show the full, detailed body of this view including extra data and controls.\n     *      note: if the model does not have detailed data, fetch that data before showing the body\n     *  @fires expanded when a body has been expanded\n     */\n    expand: function() {\n        var view = this;\n        return view._fetchModelDetails().always(() => {\n            view._expand();\n        });\n    },\n\n    /** Check for model details and, if none, fetch them.\n     *  @returns {jQuery.promise} the model.fetch.xhr if details are being fetched, an empty promise if not\n     */\n    _fetchModelDetails: function() {\n        if (!this.model.hasDetails()) {\n            return this.model.fetch();\n        }\n        return jQuery.when();\n    },\n\n    /** Inner fn called when expand (public) has fetched the details */\n    _expand: function() {\n        var view = this;\n        var $newDetails = view._renderDetails();\n        view.$details().replaceWith($newDetails);\n        // needs to be set after the above or the slide will not show\n        view.expanded = true;\n        view.$details().slideDown(view.fxSpeed, () => {\n            view.trigger(\"expanded\", view);\n        });\n    },\n\n    /** Hide the body/details of an HDA.\n     *  @fires collapsed when a body has been collapsed\n     */\n    collapse: function() {\n        this.debug(`${this}(ExpandableView).collapse`);\n        var view = this;\n        view.expanded = false;\n        this.$details().slideUp(view.fxSpeed, () => {\n            view.trigger(\"collapsed\", view);\n        });\n    }\n});\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *      Inherits from Expandable, Selectable, Draggable.\n *  The DOM contains warnings, a title bar, and a series of primary action controls.\n *      Primary actions are meant to be easily accessible item functions (such as delete)\n *      that are rendered in the title bar.\n *\n *  Details are rendered when the user clicks the title bar or presses enter/space when\n *      the title bar is in focus.\n *\n *  Designed as a base class for history panel contents - but usable elsewhere (I hope).\n */\nvar ListItemView = ExpandableView.extend(\n    BASE_MVC.mixin(BASE_MVC.SelectableViewMixin, BASE_MVC.DraggableViewMixin, {\n        tagName: \"div\",\n        className: \"list-item\",\n\n        /** Set up the base class and all mixins */\n        initialize: function(attributes) {\n            ExpandableView.prototype.initialize.call(this, attributes);\n            BASE_MVC.SelectableViewMixin.initialize.call(this, attributes);\n            BASE_MVC.DraggableViewMixin.initialize.call(this, attributes);\n            this._setUpListeners();\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            // hide the primary actions in the title bar when selectable and narrow\n            this.on(\n                \"selectable\",\n                function(isSelectable) {\n                    if (isSelectable) {\n                        this.$(\".primary-actions\").hide();\n                    } else {\n                        this.$(\".primary-actions\").show();\n                    }\n                },\n                this\n            );\n            return this;\n        },\n\n        // ........................................................................ rendering\n        /** In this override, call methods to build warnings, titlebar and primary actions */\n        _buildNewRender: function() {\n            var $newRender = ExpandableView.prototype._buildNewRender.call(this);\n            $newRender.children(\".warnings\").replaceWith(this._renderWarnings());\n            $newRender.children(\".title-bar\").replaceWith(this._renderTitleBar());\n            $newRender.children(\".primary-actions\").append(this._renderPrimaryActions());\n            $newRender.find(\"> .title-bar .subtitle\").replaceWith(this._renderSubtitle());\n            return $newRender;\n        },\n\n        /** In this override, render the selector controls and set up dragging before the swap */\n        _swapNewRender: function($newRender) {\n            ExpandableView.prototype._swapNewRender.call(this, $newRender);\n            if (this.selectable) {\n                this.showSelector(0);\n            }\n            if (this.draggable) {\n                this.draggableOn();\n            }\n            return this.$el;\n        },\n\n        /** Render any warnings the item may need to show (e.g. \"I'm deleted\") */\n        _renderWarnings: function() {\n            var view = this;\n            var $warnings = $('<div class=\"warnings\"></div>');\n            var json = view.model.toJSON();\n            //TODO:! unordered (map)\n            _.each(view.templates.warnings, templateFn => {\n                $warnings.append($(templateFn(json, view)));\n            });\n            return $warnings;\n        },\n\n        /** Render the title bar (the main/exposed SUMMARY dom element) */\n        _renderTitleBar: function() {\n            return $(this.templates.titleBar(this.model.toJSON(), this));\n        },\n\n        /** Return an array of jQ objects containing common/easily-accessible item controls */\n        _renderPrimaryActions: function() {\n            // override this\n            return [];\n        },\n\n        /** Render the title bar (the main/exposed SUMMARY dom element) */\n        _renderSubtitle: function() {\n            return $(this.templates.subtitle(this.model.toJSON(), this));\n        },\n\n        // ......................................................................... events\n        /** event map */\n        events: {\n            // expand the body when the title is clicked or when in focus and space or enter is pressed\n            \"click .title-bar\": \"_clickTitleBar\",\n            \"keydown .title-bar\": \"_keyDownTitleBar\",\n            \"click .selector\": \"toggleSelect\"\n        },\n\n        /** expand when the title bar is clicked */\n        _clickTitleBar: function(event) {\n            event.stopPropagation();\n            if (event.altKey) {\n                this.toggleSelect(event);\n                if (!this.selectable) {\n                    this.showSelector();\n                }\n            } else {\n                this.toggleExpanded();\n            }\n        },\n\n        /** expand when the title bar is in focus and enter or space is pressed */\n        _keyDownTitleBar: function(event) {\n            // bail (with propagation) if keydown and not space or enter\n            var KEYCODE_SPACE = 32;\n\n            var KEYCODE_RETURN = 13;\n            if (\n                event &&\n                event.type === \"keydown\" &&\n                (event.keyCode === KEYCODE_SPACE || event.keyCode === KEYCODE_RETURN)\n            ) {\n                this.toggleExpanded();\n                event.stopPropagation();\n                return false;\n            }\n            return true;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `ListItemView(${modelString})`;\n        }\n    })\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListItemView.prototype.templates = (() => {\n    var elTemplato = BASE_MVC.wrapTemplate([\n        '<div class=\"list-element\">',\n        // errors, messages, etc.\n        '<div class=\"warnings\"></div>',\n\n        // multi-select checkbox\n        '<div class=\"selector\">',\n        '<span class=\"fa fa-2x fa-square-o\"></span>',\n        \"</div>\",\n        // space for title bar buttons - gen. floated to the right\n        '<div class=\"primary-actions\"></div>',\n        '<div class=\"title-bar\"></div>',\n\n        // expandable area for more details\n        '<div class=\"details\"></div>',\n        \"</div>\"\n    ]);\n\n    var warnings = {};\n\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            // adding a tabindex here allows focusing the title bar and the use of keydown to expand the dataset display\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            //TODO: prob. belongs in dataset-list-item\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    var subtitleTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"subtitle\"></div>'\n    ]);\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"details\"></div>'\n    ]);\n\n    return {\n        el: elTemplato,\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate,\n        details: detailsTemplate\n    };\n})();\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *  *AND* can display some sub-list of it's own when expanded (e.g. dataset collections).\n *  This list will 'foldout' when the item is expanded depending on this.foldoutStyle:\n *      If 'foldout': will expand vertically to show the nested list\n *      If 'drilldown': will overlay the parent list\n *\n *  Inherits from ListItemView.\n *\n *  _renderDetails does the work of creating this.details: a sub-view that shows the nested list\n */\nvar FoldoutListItemView = ListItemView.extend({\n    /** If 'foldout': show the sub-panel inside the expanded item\n     *  If 'drilldown': only fire events and handle by pub-sub\n     *      (allow the panel containing this item to attach it, hide itself, etc.)\n     */\n    foldoutStyle: \"foldout\",\n    /** Panel view class to instantiate for the sub-panel */\n    foldoutPanelClass: null,\n\n    /** override to:\n     *      add attributes foldoutStyle and foldoutPanelClass for config poly\n     *      disrespect attributes.expanded if drilldown\n     */\n    initialize: function(attributes) {\n        if (this.foldoutStyle === \"drilldown\") {\n            this.expanded = false;\n        }\n        this.foldoutStyle = attributes.foldoutStyle || this.foldoutStyle;\n        this.foldoutPanelClass = attributes.foldoutPanelClass || this.foldoutPanelClass;\n\n        ListItemView.prototype.initialize.call(this, attributes);\n        this.foldout = this._createFoldoutPanel();\n    },\n\n    /** in this override, attach the foldout panel when rendering details */\n    _renderDetails: function() {\n        if (this.foldoutStyle === \"drilldown\") {\n            return $();\n        }\n        var $newDetails = ListItemView.prototype._renderDetails.call(this);\n        return this._attachFoldout(this.foldout, $newDetails);\n    },\n\n    /** In this override, handle collection expansion. */\n    _createFoldoutPanel: function() {\n        var model = this.model;\n        var FoldoutClass = this._getFoldoutPanelClass(model);\n        var options = this._getFoldoutPanelOptions(model);\n\n        var foldout = new FoldoutClass(\n            _.extend(options, {\n                model: model\n            })\n        );\n\n        return foldout;\n    },\n\n    /** Stub to return proper foldout panel class */\n    _getFoldoutPanelClass: function() {\n        // override\n        return this.foldoutPanelClass;\n    },\n\n    /** Stub to return proper foldout panel options */\n    _getFoldoutPanelOptions: function() {\n        return {\n            // propagate foldout style down\n            foldoutStyle: this.foldoutStyle,\n            fxSpeed: this.fxSpeed\n        };\n    },\n\n    /** Render the foldout panel inside the view, hiding controls */\n    _attachFoldout: function(foldout, $whereTo) {\n        $whereTo = $whereTo || this.$(\"> .details\");\n        this.foldout = foldout.render(0);\n        foldout.$(\"> .controls\").hide();\n        return $whereTo.append(foldout.$el);\n    },\n\n    /** In this override, branch on foldoutStyle to show expanded */\n    expand: function() {\n        var view = this;\n        return view._fetchModelDetails().always(() => {\n            if (view.foldoutStyle === \"foldout\") {\n                view._expand();\n            } else if (view.foldoutStyle === \"drilldown\") {\n                view._expandByDrilldown();\n            }\n        });\n    },\n\n    /** For drilldown, set up close handler and fire expanded:drilldown\n     *      containing views can listen to this and handle other things\n     *      (like hiding themselves) by listening for expanded/collapsed:drilldown\n     */\n    _expandByDrilldown: function() {\n        var view = this;\n        // attachment and rendering done by listener\n        view.listenTo(view.foldout, \"close\", () => {\n            view.trigger(\"collapsed:drilldown\", view, view.foldout);\n        });\n        view.trigger(\"expanded:drilldown\", view, view.foldout);\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nFoldoutListItemView.prototype.templates = (() => {\n    var detailsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"details\">',\n            // override with more info (that goes above the panel)\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        details: detailsTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    ExpandableView: ExpandableView,\n    ListItemView: ListItemView,\n    FoldoutListItemView: FoldoutListItemView\n};\n"]}