{"version":3,"sources":["mvc/workflow/workflow-node.js"],"names":["Node","Backbone","Model","extend","initialize","app","attr","element","input_terminals","output_terminals","errors","workflow_outputs","getWorkflowOutput","outputName","_","findWhere","output_name","isWorkflowOutput","undefined","removeWorkflowOutput","splice","addWorkflowOutput","label","output","push","labelWorkflowOutput","changed","oldLabel","workflowOutput","workflow","updateOutputLabel","markChanged","nodeView","redrawWorkflowOutputs","connectedOutputTerminals","_connectedTerminals","terminals","connectedTerminals","$","each","t","connectors","length","hasConnectedOutputTerminals","outputTerminals","connectedMappedInputTerminals","_connectedMappedTerminals","hasConnectedMappedInputTerminals","inputTerminals","inputName","inputTerminal","isMappedOver","mapped_outputs","mapOver","isCollection","mappedInputTerminals","_mappedTerminals","mappedTerminals","hasMappedOverInputTerminals","found","redraw","clone","copiedData","name","annotation","post_job_actions","node","create_node","type","content_id","request","url","Galaxy","root","data","tool_id","inputs","tool_state","success","newData","Object","assign","init_field_data","update_field_data","activate_node","destroy","k","remove_node","remove","make_active","addClass","make_inactive","get","p","removeChild","appendChild","parentNode","removeClass","set_tool_version","config_form","tool_version","version","id","tooltip","uuid","el","data_inputs","i","input","addDataInput","data_outputs","addRule","addDataOutput","render","node_changed","unused_outputs","outputViews","output_view","cur_name","data_names","cur_name_in_data_outputs","data_name","unused_output","terminalElement","terminal","x","wf_output","datatypes","extensions","destroyInvalidConnections","pja_in","renderToolErrors","old_body","new_body","newInputsDiv","newTerminalViews","terminalView","difference","values","terminalViews","unusedView","updateDataOutput","replaceWith","error","text","b","find","tmp","html"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow-node.js","sourcesContent":["import Utils from \"utils/utils\";\nimport NodeView from \"mvc/workflow/workflow-view-node\";\nvar Node = Backbone.Model.extend({\n    initialize: function(app, attr) {\n        this.app = app;\n        this.element = attr.element;\n        this.input_terminals = {};\n        this.output_terminals = {};\n        this.errors = {};\n        this.workflow_outputs = [];\n    },\n    getWorkflowOutput: function(outputName) {\n        return _.findWhere(this.workflow_outputs, {\n            output_name: outputName\n        });\n    },\n    isWorkflowOutput: function(outputName) {\n        return this.getWorkflowOutput(outputName) !== undefined;\n    },\n    removeWorkflowOutput: function(outputName) {\n        while (this.isWorkflowOutput(outputName)) {\n            this.workflow_outputs.splice(this.getWorkflowOutput(outputName), 1);\n        }\n    },\n    addWorkflowOutput: function(outputName, label) {\n        if (!this.isWorkflowOutput(outputName)) {\n            var output = { output_name: outputName };\n            if (label) {\n                output.label = label;\n            }\n            this.workflow_outputs.push(output);\n            return true;\n        }\n        return false;\n    },\n    labelWorkflowOutput: function(outputName, label) {\n        var changed = false;\n        var oldLabel = null;\n        if (this.isWorkflowOutput(outputName)) {\n            var workflowOutput = this.getWorkflowOutput(outputName);\n            oldLabel = workflowOutput.label;\n            workflowOutput.label = label;\n            changed = oldLabel != label;\n        } else {\n            changed = this.addWorkflowOutput(outputName, label);\n        }\n        if (changed) {\n            this.app.workflow.updateOutputLabel(oldLabel, label);\n            this.markChanged();\n            this.nodeView.redrawWorkflowOutputs();\n        }\n        return changed;\n    },\n    connectedOutputTerminals: function() {\n        return this._connectedTerminals(this.output_terminals);\n    },\n    _connectedTerminals: function(terminals) {\n        var connectedTerminals = [];\n        $.each(terminals, (_, t) => {\n            if (t.connectors.length > 0) {\n                connectedTerminals.push(t);\n            }\n        });\n        return connectedTerminals;\n    },\n    hasConnectedOutputTerminals: function() {\n        // return this.connectedOutputTerminals().length > 0; <- optimized this\n        var outputTerminals = this.output_terminals;\n        for (var outputName in outputTerminals) {\n            if (outputTerminals[outputName].connectors.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    },\n    connectedMappedInputTerminals: function() {\n        return this._connectedMappedTerminals(this.input_terminals);\n    },\n    hasConnectedMappedInputTerminals: function() {\n        // return this.connectedMappedInputTerminals().length > 0; <- optimized this\n        var inputTerminals = this.input_terminals;\n        for (var inputName in inputTerminals) {\n            var inputTerminal = inputTerminals[inputName];\n            if (inputTerminal.connectors.length > 0 && inputTerminal.isMappedOver()) {\n                return true;\n            }\n        }\n        return false;\n    },\n    _connectedMappedTerminals: function(terminals) {\n        var mapped_outputs = [];\n        $.each(terminals, (_, t) => {\n            var mapOver = t.mapOver();\n            if (mapOver.isCollection) {\n                if (t.connectors.length > 0) {\n                    mapped_outputs.push(t);\n                }\n            }\n        });\n        return mapped_outputs;\n    },\n    mappedInputTerminals: function() {\n        return this._mappedTerminals(this.input_terminals);\n    },\n    _mappedTerminals: function(terminals) {\n        var mappedTerminals = [];\n        $.each(terminals, (_, t) => {\n            var mapOver = t.mapOver();\n            if (mapOver.isCollection) {\n                mappedTerminals.push(t);\n            }\n        });\n        return mappedTerminals;\n    },\n    hasMappedOverInputTerminals: function() {\n        var found = false;\n        _.each(this.input_terminals, t => {\n            var mapOver = t.mapOver();\n            if (mapOver.isCollection) {\n                found = true;\n            }\n        });\n        return found;\n    },\n    redraw: function() {\n        $.each(this.input_terminals, (_, t) => {\n            t.redraw();\n        });\n        $.each(this.output_terminals, (_, t) => {\n            t.redraw();\n        });\n    },\n    clone: function() {\n        var copiedData = {\n            name: this.name,\n            label: this.label,\n            annotation: this.annotation,\n            post_job_actions: this.post_job_actions\n        };\n        var node = this.app.workflow.create_node(this.type, this.name, this.content_id);\n\n        Utils.request({\n            type: \"POST\",\n            url: `${Galaxy.root}api/workflows/build_module`,\n            data: {\n                type: this.type,\n                tool_id: this.content_id,\n                inputs: this.tool_state\n            },\n            success: data => {\n                var newData = Object.assign({}, data, copiedData);\n                node.init_field_data(newData);\n                node.update_field_data(newData);\n                this.app.workflow.activate_node(node);\n            }\n        });\n    },\n    destroy: function() {\n        $.each(this.input_terminals, (k, t) => {\n            t.destroy();\n        });\n        $.each(this.output_terminals, (k, t) => {\n            t.destroy();\n        });\n        this.app.workflow.remove_node(this);\n        $(this.element).remove();\n    },\n    make_active: function() {\n        $(this.element).addClass(\"toolForm-active\");\n    },\n    make_inactive: function() {\n        // Keep inactive nodes stacked from most to least recently active\n        // by moving element to the end of parent's node list\n        var element = this.element.get(0);\n        (p => {\n            p.removeChild(element);\n            p.appendChild(element);\n        })(element.parentNode);\n        // Remove active class\n        $(element).removeClass(\"toolForm-active\");\n    },\n    set_tool_version: function() {\n        if (this.type === \"tool\" && this.config_form) {\n            this.tool_version = this.config_form.version;\n            this.content_id = this.config_form.id;\n        }\n    },\n    init_field_data: function(data) {\n        if (data.type) {\n            this.type = data.type;\n        }\n        this.name = data.name;\n        this.config_form = data.config_form;\n        this.set_tool_version();\n        this.tool_state = data.tool_state;\n        this.errors = data.errors;\n        this.tooltip = data.tooltip ? data.tooltip : \"\";\n        this.annotation = data.annotation;\n        this.post_job_actions = data.post_job_actions ? data.post_job_actions : {};\n        this.label = data.label;\n        this.uuid = data.uuid;\n        this.workflow_outputs = data.workflow_outputs ? data.workflow_outputs : [];\n        var node = this;\n        var nodeView = new NodeView({\n            el: this.element[0],\n            node: node\n        });\n        node.nodeView = nodeView;\n        $.each(data.data_inputs, (i, input) => {\n            nodeView.addDataInput(input);\n        });\n        if (data.data_inputs.length > 0 && data.data_outputs.length > 0) {\n            nodeView.addRule();\n        }\n        $.each(data.data_outputs, (i, output) => {\n            nodeView.addDataOutput(output);\n        });\n        nodeView.render();\n        this.app.workflow.node_changed(this, true);\n    },\n    update_field_data: function(data) {\n        var node = this;\n        var nodeView = node.nodeView;\n        // remove unused output views and remove pre-existing output views from data.data_outputs,\n        // so that these are not added twice.\n        var unused_outputs = [];\n        // nodeView.outputViews contains pre-existing outputs,\n        // while data.data_output contains what should be displayed.\n        // Now we gather the unused outputs\n        $.each(nodeView.outputViews, (i, output_view) => {\n            var cur_name = output_view.output.name;\n            var data_names = data.data_outputs;\n            var cur_name_in_data_outputs = false;\n            _.each(data_names, data_name => {\n                if (data_name.name == cur_name) {\n                    cur_name_in_data_outputs = true;\n                }\n            });\n            if (cur_name_in_data_outputs === false) {\n                unused_outputs.push(cur_name);\n            }\n        });\n\n        // Remove the unused outputs\n        _.each(unused_outputs, unused_output => {\n            _.each(nodeView.outputViews[unused_output].terminalElement.terminal.connectors, x => {\n                if (x) {\n                    x.destroy(); // Removes the noodle connectors\n                }\n            });\n            nodeView.outputViews[unused_output].remove(); // removes the rendered output\n            delete nodeView.outputViews[unused_output]; // removes the reference to the output\n            delete node.output_terminals[unused_output]; // removes the output terminal\n        });\n        $.each(node.workflow_outputs, (i, wf_output) => {\n            if (wf_output && !node.output_terminals[wf_output.output_name]) {\n                node.workflow_outputs.splice(i, 1); // removes output from list of workflow outputs\n            }\n        });\n        $.each(data.data_outputs, (i, output) => {\n            if (!nodeView.outputViews[output.name]) {\n                nodeView.addDataOutput(output); // add data output if it does not yet exist\n            } else {\n                // the output already exists, but the output formats may have changed.\n                // Therefore we update the datatypes and destroy invalid connections.\n                node.output_terminals[output.name].datatypes = output.extensions;\n                node.output_terminals[output.name].destroyInvalidConnections();\n            }\n        });\n        this.tool_state = data.tool_state;\n        this.config_form = data.config_form;\n        this.set_tool_version();\n        this.errors = data.errors;\n        this.annotation = data.annotation;\n        this.label = data.label;\n        if (\"post_job_actions\" in data) {\n            // Won't be present in response for data inputs\n            var pja_in = data.post_job_actions;\n            this.post_job_actions = pja_in ? pja_in : {};\n        }\n        node.nodeView.renderToolErrors();\n        // Update input rows\n        var old_body = nodeView.$(\"div.inputs\");\n        var new_body = nodeView.newInputsDiv();\n        var newTerminalViews = {};\n        _.each(data.data_inputs, input => {\n            var terminalView = node.nodeView.addDataInput(input, new_body);\n            newTerminalViews[input.name] = terminalView;\n        });\n        // Cleanup any leftover terminals\n        _.each(_.difference(_.values(nodeView.terminalViews), _.values(newTerminalViews)), unusedView => {\n            unusedView.el.terminal.destroy();\n        });\n        nodeView.terminalViews = newTerminalViews;\n        node.nodeView.render();\n        // In general workflow editor assumes tool outputs don't change in # or\n        // type (not really valid right?) but adding special logic here for\n        // data collection input parameters that can have their collection\n        // change.\n        if (data.data_outputs.length == 1 && \"collection_type\" in data.data_outputs[0]) {\n            nodeView.updateDataOutput(data.data_outputs[0]);\n        }\n        old_body.replaceWith(new_body);\n        if (\"workflow_outputs\" in data) {\n            // Won't be present in response for data inputs\n            this.workflow_outputs = data.workflow_outputs ? data.workflow_outputs : [];\n        }\n        // If active, reactivate with new config_form\n        this.markChanged();\n        this.redraw();\n    },\n    error: function(text) {\n        var b = $(this.element).find(\".toolFormBody\");\n        b.find(\"div\").remove();\n        var tmp = `<div style='color: red; text-style: italic;'>${text}</div>`;\n        this.config_form = tmp;\n        b.html(tmp);\n        this.app.workflow.node_changed(this);\n    },\n    markChanged: function() {\n        this.app.workflow.node_changed(this);\n    }\n});\nexport default Node;\n"]}