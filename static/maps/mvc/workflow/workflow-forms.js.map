{"version":3,"sources":["mvc/workflow/workflow-forms.js"],"names":["Default","Backbone","View","extend","initialize","options","self","node","form","merge","onchange","request","type","url","Galaxy","root","data","id","content_id","inputs","create","success","update_field_data","_addLabelAnnotation","render","Tool","text_enable","text_disable","narrow","initial_errors","cls","initialmodel","process","_customize","resolve","buildmodel","model","get","postchange","attributes","current_state","tool_id","tool_version","version","$","emit","debug","set","config_form","update","errors","error","response","reject","deepeach","input","indexOf","info","name","textify","extensions","value","__class__","fixed","collapsible_value","is_workflow","length","test_param","undefined","_addSections","workflow","unshift","label","annotation","area","help","new_label","duplicate","i","nodes","n","input_id","match","input_element","element_list","trigger","_visit","head","head_list","output_id","post_job_actions","push","action","pja_arg","payload","p_id","d","j","expanded","action_arguments","slice","_makeSection","input_terminal_names","datatypes","key","input_terminals","sort","a","b","output","input_config","title","flat","getWorkflowOutput","new_value","attemptUpdateOutputLabel","ignore","join","output_terminals","Object","keys","String","Boolean","host","window","location"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow-forms.js","sourcesContent":["import _l from \"utils/localization\";\nimport Utils from \"utils/utils\";\nimport Form from \"mvc/form/form-view\";\nimport ToolFormBase from \"mvc/tool/tool-form-base\";\n/** Default form wrapper for non-tool modules in the workflow editor. */\nvar Default = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        var node = options.node;\n        this.form = new Form(\n            Utils.merge(options, {\n                onchange: function() {\n                    Utils.request({\n                        type: \"POST\",\n                        url: `${Galaxy.root}api/workflows/build_module`,\n                        data: {\n                            id: node.id,\n                            type: node.type,\n                            content_id: node.content_id,\n                            inputs: self.form.data.create()\n                        },\n                        success: function(data) {\n                            node.update_field_data(data);\n                        }\n                    });\n                }\n            })\n        );\n        _addLabelAnnotation(this.form);\n        this.form.render();\n    }\n});\n\n/** Tool form wrapper for the workflow editor. */\nvar Tool = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        var node = options.node;\n        this.form = new ToolFormBase(\n            Utils.merge(options, {\n                text_enable: \"Set in Advance\",\n                text_disable: \"Set at Runtime\",\n                narrow: true,\n                initial_errors: true,\n                cls: \"ui-portlet-narrow\",\n                initialmodel: function(process, form) {\n                    self._customize(form);\n                    process.resolve();\n                },\n                buildmodel: function(process, form) {\n                    form.model.get(\"postchange\")(process, form);\n                },\n                postchange: function(process, form) {\n                    var options = form.model.attributes;\n                    var current_state = {\n                        tool_id: options.id,\n                        tool_version: options.version,\n                        type: \"tool\",\n                        inputs: $.extend(true, {}, form.data.create())\n                    };\n                    Galaxy.emit.debug(\"tool-form-workflow::postchange()\", \"Sending current state.\", current_state);\n                    Utils.request({\n                        type: \"POST\",\n                        url: `${Galaxy.root}api/workflows/build_module`,\n                        data: current_state,\n                        success: function(data) {\n                            form.model.set(data.config_form);\n                            self._customize(form);\n                            form.update(data.config_form);\n                            form.errors(data.config_form);\n                            // This hasn't modified the workflow, just returned\n                            // module information for the tool to update the workflow\n                            // state stored on the client with. User needs to save\n                            // for this to take effect.\n                            node.update_field_data(data);\n                            Galaxy.emit.debug(\"tool-form-workflow::postchange()\", \"Received new model.\", data);\n                            process.resolve();\n                        },\n                        error: function(response) {\n                            Galaxy.emit.debug(\"tool-form-workflow::postchange()\", \"Refresh request failed.\", response);\n                            process.reject();\n                        }\n                    });\n                }\n            })\n        );\n    },\n\n    _customize: function(form) {\n        var options = form.model.attributes;\n        Utils.deepeach(options.inputs, input => {\n            if (input.type) {\n                if ([\"data\", \"data_collection\"].indexOf(input.type) != -1) {\n                    input.type = \"hidden\";\n                    input.info = `Data input '${input.name}' (${Utils.textify(input.extensions)})`;\n                    input.value = { __class__: \"RuntimeValue\" };\n                } else if (!input.fixed) {\n                    input.collapsible_value = {\n                        __class__: \"RuntimeValue\"\n                    };\n                    input.is_workflow =\n                        (input.options && input.options.length === 0) || [\"integer\", \"float\"].indexOf(input.type) != -1;\n                }\n            }\n        });\n        Utils.deepeach(options.inputs, input => {\n            if (input.type === \"conditional\") {\n                input.test_param.collapsible_value = undefined;\n            }\n        });\n        _addSections(form);\n        _addLabelAnnotation(form);\n    }\n});\n\n/** Augments the module form definition by adding label and annotation fields */\nfunction _addLabelAnnotation(form) {\n    var options = form.model.attributes;\n    var workflow = options.workflow;\n    var node = options.node;\n    options.inputs.unshift({\n        type: \"text\",\n        name: \"__annotation\",\n        label: \"Annotation\",\n        fixed: true,\n        value: node.annotation,\n        area: true,\n        help: \"Add an annotation or notes to this step. Annotations are available when a workflow is viewed.\"\n    });\n    options.inputs.unshift({\n        type: \"text\",\n        name: \"__label\",\n        label: \"Label\",\n        value: node.label,\n        help: _l(\"Add a step label.\"),\n        fixed: true,\n        onchange: function(new_label) {\n            var duplicate = false;\n            for (var i in workflow.nodes) {\n                var n = workflow.nodes[i];\n                if (n.label && n.label == new_label && n.id != node.id) {\n                    duplicate = true;\n                    break;\n                }\n            }\n            var input_id = form.data.match(\"__label\");\n            var input_element = form.element_list[input_id];\n            input_element.model.set(\n                \"error_text\",\n                duplicate && \"Duplicate label. Please fix this before saving the workflow.\"\n            );\n            form.trigger(\"change\");\n        }\n    });\n}\n\n/** Visit input nodes and enrich by name/value pairs from server data */\nfunction _visit(head, head_list, output_id, options) {\n    var post_job_actions = options.node.post_job_actions;\n    head_list = head_list || [];\n    head_list.push(head);\n    for (var i in head.inputs) {\n        var input = head.inputs[i];\n        var action = input.action;\n        if (action) {\n            input.name = `pja__${output_id}__${input.action}`;\n            if (input.pja_arg) {\n                input.name += `__${input.pja_arg}`;\n            }\n            if (input.payload) {\n                for (var p_id in input.payload) {\n                    input.payload[`${input.name}__${p_id}`] = input.payload[p_id];\n                    delete input.payload[p_id];\n                }\n            }\n            var d = post_job_actions[input.action + output_id];\n            if (d) {\n                for (var j in head_list) {\n                    head_list[j].expanded = true;\n                }\n                if (input.pja_arg) {\n                    input.value = (d.action_arguments && d.action_arguments[input.pja_arg]) || input.value;\n                } else {\n                    input.value = \"true\";\n                }\n            }\n        }\n        if (input.inputs) {\n            _visit(input, head_list.slice(0), output_id, options);\n        }\n    }\n}\n\n/** Builds sub section with step actions/annotation */\nfunction _makeSection(output_id, options) {\n    var extensions = [];\n    var input_terminal_names = [];\n    var datatypes = options.datatypes;\n    var node = options.node;\n    var workflow = options.workflow;\n\n    for (var key in datatypes) {\n        extensions.push({ 0: datatypes[key], 1: datatypes[key] });\n    }\n    for (key in node.input_terminals) {\n        input_terminal_names.push(node.input_terminals[key].name);\n    }\n    extensions.sort((a, b) => (a.label > b.label ? 1 : a.label < b.label ? -1 : 0));\n    extensions.unshift({\n        0: \"Sequences\",\n        1: \"Sequences\"\n    });\n    extensions.unshift({\n        0: \"Roadmaps\",\n        1: \"Roadmaps\"\n    });\n    extensions.unshift({\n        0: \"Leave unchanged\",\n        1: \"__empty__\"\n    });\n    var output;\n    var input_config = {\n        title: `Configure Output: '${output_id}'`,\n        type: \"section\",\n        flat: true,\n        inputs: [\n            {\n                label: \"Label\",\n                type: \"text\",\n                value: ((output = node.getWorkflowOutput(output_id)) && output.label) || \"\",\n                help: \"This will provide a short name to describe the output - this must be unique across workflows.\",\n                onchange: function(new_value) {\n                    workflow.attemptUpdateOutputLabel(node, output_id, new_value);\n                }\n            },\n            {\n                action: \"RenameDatasetAction\",\n                pja_arg: \"newname\",\n                label: \"Rename dataset\",\n                type: \"text\",\n                value: \"\",\n                ignore: \"\",\n                help: `This action will rename the output dataset. Click <a href=\"https://galaxyproject.org/learn/advanced-workflow/variables/\">here</a> for more information. Valid inputs are: <strong>${input_terminal_names.join(\n                    \", \"\n                )}</strong>.`\n            },\n            {\n                action: \"ChangeDatatypeAction\",\n                pja_arg: \"newtype\",\n                label: \"Change datatype\",\n                type: \"select\",\n                ignore: \"__empty__\",\n                value: \"__empty__\",\n                options: extensions,\n                help: \"This action will change the datatype of the output to the indicated value.\"\n            },\n            {\n                action: \"TagDatasetAction\",\n                pja_arg: \"tags\",\n                label: \"Add Tags\",\n                type: \"text\",\n                value: \"\",\n                ignore: \"\",\n                help: \"This action will set tags for the dataset.\"\n            },\n            {\n                action: \"RemoveTagDatasetAction\",\n                pja_arg: \"tags\",\n                label: \"Remove Tags\",\n                type: \"text\",\n                value: \"\",\n                ignore: \"\",\n                help: \"This action will remove tags for the dataset.\"\n            },\n            {\n                title: _l(\"Assign columns\"),\n                type: \"section\",\n                flat: true,\n                inputs: [\n                    {\n                        action: \"ColumnSetAction\",\n                        pja_arg: \"chromCol\",\n                        label: \"Chrom column\",\n                        type: \"integer\",\n                        value: \"\",\n                        ignore: \"\"\n                    },\n                    {\n                        action: \"ColumnSetAction\",\n                        pja_arg: \"startCol\",\n                        label: \"Start column\",\n                        type: \"integer\",\n                        value: \"\",\n                        ignore: \"\"\n                    },\n                    {\n                        action: \"ColumnSetAction\",\n                        pja_arg: \"endCol\",\n                        label: \"End column\",\n                        type: \"integer\",\n                        value: \"\",\n                        ignore: \"\"\n                    },\n                    {\n                        action: \"ColumnSetAction\",\n                        pja_arg: \"strandCol\",\n                        label: \"Strand column\",\n                        type: \"integer\",\n                        value: \"\",\n                        ignore: \"\"\n                    },\n                    {\n                        action: \"ColumnSetAction\",\n                        pja_arg: \"nameCol\",\n                        label: \"Name column\",\n                        type: \"integer\",\n                        value: \"\",\n                        ignore: \"\"\n                    }\n                ],\n                help: \"This action will set column assignments in the output dataset. Blank fields are ignored.\"\n            }\n        ]\n    };\n    _visit(input_config, [], output_id, options);\n    return input_config;\n}\n\n/** Builds all sub sections */\nfunction _addSections(form) {\n    var options = form.model.attributes;\n    var inputs = options.inputs;\n    var node = options.node;\n    var post_job_actions = node.post_job_actions;\n    var output_id = node.output_terminals && Object.keys(node.output_terminals)[0];\n\n    if (output_id) {\n        inputs.push({\n            name: `pja__${output_id}__EmailAction`,\n            label: \"Email notification\",\n            type: \"boolean\",\n            value: String(Boolean(post_job_actions[`EmailAction${output_id}`])),\n            ignore: \"false\",\n            help: _l(\"An email notification will be sent when the job has completed.\"),\n            payload: {\n                host: window.location.host\n            }\n        });\n        inputs.push({\n            name: `pja__${output_id}__DeleteIntermediatesAction`,\n            label: \"Output cleanup\",\n            type: \"boolean\",\n            value: String(Boolean(post_job_actions[`DeleteIntermediatesAction${output_id}`])),\n            ignore: \"false\",\n            help:\n                \"Upon completion of this step, delete non-starred outputs from completed workflow steps if they are no longer required as inputs.\"\n        });\n        for (var i in node.output_terminals) {\n            inputs.push(_makeSection(i, options));\n        }\n    }\n}\n\nexport default {\n    Default: Default,\n    Tool: Tool\n};\n"]}