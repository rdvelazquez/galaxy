{"version":3,"sources":["mvc/workflow/workflow-view-node.js"],"names":["_","Backbone","View","extend","initialize","options","node","output_width","Math","max","$el","width","tool_body","find","remove","newInputsDiv","appendTo","terminalViews","outputViews","render","renderToolLabel","renderToolErrors","css","min","$","text","label","name","errors","addClass","removeClass","updateMaxWidth","newWidth","addRule","append","addDataInput","input","body","skipResize","terminalView","terminalViewClass","input_type","InputCollectionTerminalView","InputTerminalView","el","terminal","destroy","update","destroyInvalidConnections","terminalElement","inputView","DataInputView","nodeView","ib","prepend","terminalElements","addDataOutput","output","collection","OutputCollectionTerminalView","OutputTerminalView","outputView","DataOutputView","redrawWorkflowOutputs","each","redrawWorkflowOutput","updateDataOutput","outputTerminal","output_terminals"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow-view-node.js","sourcesContent":["import * as _ from \"libs/underscore\";\nimport TerminalViews from \"mvc/workflow/workflow-view-terminals\";\nimport DataViews from \"mvc/workflow/workflow-view-data\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        this.node = options.node;\n        this.output_width = Math.max(150, this.$el.width());\n        this.tool_body = this.$el.find(\".toolFormBody\");\n        this.tool_body.find(\"div\").remove();\n        this.newInputsDiv().appendTo(this.tool_body);\n        this.terminalViews = {};\n        this.outputViews = {};\n    },\n\n    render: function() {\n        this.renderToolLabel();\n        this.renderToolErrors();\n        this.$el.css(\"width\", Math.min(250, Math.max(this.$el.width(), this.output_width)));\n    },\n\n    renderToolLabel: function() {\n        this.$(\".nodeTitle\").text(this.node.label || this.node.name);\n    },\n\n    renderToolErrors: function() {\n        this.node.errors ? this.$el.addClass(\"tool-node-error\") : this.$el.removeClass(\"tool-node-error\");\n    },\n\n    newInputsDiv: function() {\n        return $(\"<div/>\").addClass(\"inputs\");\n    },\n\n    updateMaxWidth: function(newWidth) {\n        this.output_width = Math.max(this.output_width, newWidth);\n    },\n\n    addRule: function() {\n        this.tool_body.append($(\"<div/>\").addClass(\"rule\"));\n    },\n\n    addDataInput: function(input, body) {\n        var skipResize = true;\n        if (!body) {\n            body = this.$(\".inputs\");\n            // initial addition to node - resize input to help calculate node\n            // width.\n            skipResize = false;\n        }\n        var terminalView = this.terminalViews[input.name];\n        var terminalViewClass =\n            input.input_type == \"dataset_collection\"\n                ? TerminalViews.InputCollectionTerminalView\n                : TerminalViews.InputTerminalView;\n        if (terminalView && !(terminalView instanceof terminalViewClass)) {\n            terminalView.el.terminal.destroy();\n            terminalView = null;\n        }\n        if (!terminalView) {\n            terminalView = new terminalViewClass({\n                node: this.node,\n                input: input\n            });\n        } else {\n            var terminal = terminalView.el.terminal;\n            terminal.update(input);\n            terminal.destroyInvalidConnections();\n        }\n        this.terminalViews[input.name] = terminalView;\n        var terminalElement = terminalView.el;\n        var inputView = new DataViews.DataInputView({\n            terminalElement: terminalElement,\n            input: input,\n            nodeView: this,\n            skipResize: skipResize\n        });\n        var ib = inputView.$el;\n        body.append(ib.prepend(terminalView.terminalElements()));\n        return terminalView;\n    },\n\n    addDataOutput: function(output) {\n        var terminalViewClass = output.collection\n            ? TerminalViews.OutputCollectionTerminalView\n            : TerminalViews.OutputTerminalView;\n        var terminalView = new terminalViewClass({\n            node: this.node,\n            output: output\n        });\n        var outputView = new DataViews.DataOutputView({\n            output: output,\n            terminalElement: terminalView.el,\n            nodeView: this\n        });\n        this.outputViews[output.name] = outputView;\n        this.tool_body.append(outputView.$el.append(terminalView.terminalElements()));\n    },\n\n    redrawWorkflowOutputs: function() {\n        _.each(this.outputViews, outputView => {\n            outputView.redrawWorkflowOutput();\n        });\n    },\n\n    updateDataOutput: function(output) {\n        var outputTerminal = this.node.output_terminals[output.name];\n        outputTerminal.update(output);\n    }\n});\n"]}