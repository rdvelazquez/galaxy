{"version":3,"sources":["mvc/workflow/workflow.js"],"names":["mod_toastr","WorkflowItemView","Backbone","View","extend","tagName","initialize","_","bindAll","options","timeOut","events","render","$","el","html","_rowTemplate","showInToolPanel","model","save","show_in_tool_panel","get","success","window","location","Galaxy","root","removeWorkflow","wfName","confirm","destroy","remove","renameWorkflow","oldName","newName","prompt","name","copyWorkflow","getJSON","urlRoot","id","currentOwner","user","attributes","username","wfJson","collection","create","at","wait","error","resp","errorThrown","jqXHR","textStatus","responseJSON","err_msg","show","wfId","checkboxHtml","trHtml","escape","_templateActions","renderTagEditor","TagEditor","TagsEditor","find","workflow_mode","toggle","WorkflowListView","title","markViewAsLoading","WorkflowCollection","fetch","done","bind","appendItem","on","dragleave","drop","dragover","ev","addClass","preventDefault","unhighlightDropZone","removeClass","e","files","dataTransfer","i","f","readWorkflowFiles","reader","FileReader","onload","wf_json","JSON","parse","result","readAsText","_showArgErrors","once","msg_text","msg_status","info","header","_templateHeader","templateActions","_templateActionButtons","tableTemplate","_templateWorkflowTable","$el","models","each","item","confirmDelete","minQueryLength","searchWorkflow","adjustActiondropdown","workflowItemView","append","workflow","$el_shared_wf_link","click","$el_searchinput","$el_tabletr","min_querylen","query","val","length","regular_expression","RegExp","hide","filter","test","text","css","_templateNoWorkflow","tableHtml","ImportWorkflowView","setElement","empty","_mainTemplate","url","myexperiment_target_url"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow.js","sourcesContent":["/** Workflow view */\nimport * as mod_toastr from \"libs/toastr\";\nimport TAGS from \"mvc/tag\";\nimport WORKFLOWS from \"mvc/workflow/workflow-model\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\nimport _l from \"utils/localization\";\nimport LoadingIndicator from \"ui/loading-indicator\";\n\n/** View of the individual workflows */\nconst WorkflowItemView = Backbone.View.extend({\n    tagName: \"tr\", // name of (orphan) root tag in this.el\n    initialize: function() {\n        _.bindAll(\n            this,\n            \"render\",\n            \"_rowTemplate\",\n            \"renderTagEditor\",\n            \"_templateActions\",\n            \"removeWorkflow\",\n            \"copyWorkflow\"\n        ); // every function that uses 'this' as the current object should be in here\n        mod_toastr.options.timeOut = 1500;\n    },\n\n    events: {\n        \"click #show-in-tool-panel\": \"showInToolPanel\",\n        \"click #delete-workflow\": \"removeWorkflow\",\n        \"click #rename-workflow\": \"renameWorkflow\",\n        \"click #copy-workflow\": \"copyWorkflow\"\n    },\n\n    render: function() {\n        $(this.el).html(this._rowTemplate());\n        return this;\n    },\n\n    showInToolPanel: function() {\n        // This reloads the whole page, so that the workflow appears in the tool panel.\n        // Ideally we would notify only the tool panel of a change\n        this.model.save(\n            { show_in_tool_panel: !this.model.get(\"show_in_tool_panel\") },\n            {\n                success: function() {\n                    window.location = `${Galaxy.root}workflows/list`;\n                }\n            }\n        );\n    },\n\n    removeWorkflow: function() {\n        const wfName = this.model.get(\"name\");\n        if (window.confirm(`Are you sure you want to delete workflow '${wfName}'?`)) {\n            this.model.destroy({\n                success: function() {\n                    mod_toastr.success(`Successfully deleted workflow '${wfName}'`);\n                }\n            });\n            this.remove();\n        }\n    },\n\n    renameWorkflow: function() {\n        const oldName = this.model.get(\"name\");\n        const newName = window.prompt(`Enter a new Name for workflow '${oldName}'`, oldName);\n        if (newName) {\n            this.model.save(\n                { name: newName },\n                {\n                    success: function() {\n                        mod_toastr.success(`Successfully renamed workflow '${oldName}' to '${newName}'`);\n                    }\n                }\n            );\n            this.render();\n        }\n    },\n\n    copyWorkflow: function() {\n        const oldName = this.model.get(\"name\");\n        $.getJSON(`${this.model.urlRoot}/${this.model.id}/download`, wfJson => {\n            let newName = `Copy of ${oldName}`;\n            const currentOwner = this.model.get(\"owner\");\n            if (currentOwner != Galaxy.user.attributes.username) {\n                newName += ` shared by user ${currentOwner}`;\n            }\n            wfJson.name = newName;\n            this.collection.create(wfJson, {\n                at: 0,\n                wait: true,\n                success: function() {\n                    mod_toastr.success(`Successfully copied workflow '${oldName}' to '${newName}'`);\n                },\n                error: function(model, resp, options) {\n                    // signature seems to have changed over the course of backbone dev\n                    // see https://github.com/jashkenas/backbone/issues/2606#issuecomment-19289483\n                    mod_toastr.error(options.errorThrown);\n                }\n            });\n        }).error((jqXHR, textStatus, errorThrown) => {\n            mod_toastr.error(jqXHR.responseJSON.err_msg);\n        });\n    },\n\n    _rowTemplate: function() {\n        let show = this.model.get(\"show_in_tool_panel\");\n        let wfId = this.model.id;\n        const checkboxHtml = `<input id=\"show-in-tool-panel\" type=\"checkbox\" class=\"show-in-tool-panel\" ${\n            show ? `checked=\"${show}\"` : \"\"\n        } value=\"${wfId}\">`;\n        const trHtml = `<td><div class=\"dropdown\"><button class=\"menubutton\" type=\"button\" data-toggle=\"dropdown\">${_.escape(\n            this.model.get(\"name\")\n        )}<span class=\"caret\"></span></button>${this._templateActions()}</div></td><td><span><div class=\"${wfId} tags-display\"></div></td><td>${\n            this.model.get(\"owner\") === Galaxy.user.attributes.username ? \"You\" : this.model.get(\"owner\")\n        }</span></td><td>${this.model.get(\"number_of_steps\")}</td><td>${\n            this.model.get(\"published\") ? \"Yes\" : \"No\"\n        }</td><td>${checkboxHtml}</td>`;\n        return trHtml;\n    },\n\n    renderTagEditor: function() {\n        const TagEditor = new TAGS.TagsEditor({\n            model: this.model,\n            el: $.find(`.${this.model.id}.tags-display`),\n            workflow_mode: true\n        });\n        TagEditor.toggle(true);\n        TagEditor.render();\n    },\n\n    /** Template for user actions for workflows */\n    _templateActions: function() {\n        if (this.model.get(\"owner\") === Galaxy.user.attributes.username) {\n            return `<ul class=\"dropdown-menu action-dpd\"><li><a href=\"${Galaxy.root}workflow/editor?id=${\n                this.model.id\n            }\">Edit</a></li><li><a href=\"${Galaxy.root}workflows/run?id=${this.model.id}\">Run</a></li><li><a href=\"${\n                Galaxy.root\n            }workflow/sharing?id=${this.model.id}\">Share</a></li><li><a href=\"${Galaxy.root}api/workflows/${\n                this.model.id\n            }/download?format=json-download\">Download</a></li><li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li><li><a id=\"rename-workflow\" style=\"cursor: pointer;\">Rename</a></li><li><a href=\"${\n                Galaxy.root\n            }workflow/display_by_id?id=${\n                this.model.id\n            }\">View</a></li><li><a id=\"delete-workflow\" style=\"cursor: pointer;\">Delete</a></li></ul>`;\n        } else {\n            return `<ul class=\"dropdown-menu action-dpd\"><li><a href=\"${\n                Galaxy.root\n            }workflow/display_by_username_and_slug?username=${this.model.get(\"owner\")}&slug=${this.model.get(\n                \"slug\"\n            )}\">View</a></li><li><a href=\"${Galaxy.root}workflows/run?id=${\n                this.model.id\n            }\">Run</a></li><li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li><li><a class=\"link-confirm-shared-${\n                this.model.id\n            }\" href=\"${Galaxy.root}workflow/sharing?unshare_me=True&id=${this.model.id}\">Remove</a></li></ul>`;\n        }\n    }\n});\n\n/** View of the main workflow list page */\nconst WorkflowListView = Backbone.View.extend({\n    title: _l(\"Workflows\"),\n    initialize: function() {\n        LoadingIndicator.markViewAsLoading(this);\n        _.bindAll(this, \"adjustActiondropdown\");\n        this.collection = new WORKFLOWS.WorkflowCollection();\n        this.collection.fetch().done(this.render());\n        this.collection.bind(\"add\", this.appendItem);\n        this.collection.on(\"sync\", this.render, this);\n    },\n\n    events: {\n        dragleave: \"unhighlightDropZone\",\n        drop: \"drop\",\n        dragover: function(ev) {\n            $(\".hidden_description_layer\").addClass(\"dragover\");\n            $(\".menubutton\").addClass(\"background-none\");\n            ev.preventDefault();\n        }\n    },\n\n    unhighlightDropZone: function() {\n        $(\".hidden_description_layer\").removeClass(\"dragover\");\n        $(\".menubutton\").removeClass(\"background-none\");\n    },\n\n    drop: function(e) {\n        // TODO: check that file is valid galaxy workflow\n        this.unhighlightDropZone();\n        e.preventDefault();\n        const files = e.dataTransfer.files;\n        for (let i = 0, f; (f = files[i]); i++) {\n            this.readWorkflowFiles(f);\n        }\n    },\n\n    readWorkflowFiles: function(f) {\n        const reader = new FileReader();\n        reader.onload = theFile => {\n            let wf_json;\n            try {\n                wf_json = JSON.parse(reader.result);\n            } catch (e) {\n                mod_toastr.error(`Could not read file '${f.name}'. Verify it is a valid Galaxy workflow`);\n                wf_json = null;\n            }\n            if (wf_json) {\n                this.collection.create(wf_json, {\n                    at: 0,\n                    wait: true,\n                    success: function() {\n                        mod_toastr.success(`Successfully imported workflow '${wf_json.name}'`);\n                    },\n                    error: function(model, resp, options) {\n                        mod_toastr.error(options.errorThrown);\n                    }\n                });\n            }\n        };\n        reader.readAsText(f, \"utf-8\");\n    },\n\n    _showArgErrors: _.once(() => {\n        // Parse args out of params, display if there's a message.\n        const msg_text = QueryStringParsing.get(\"message\");\n        const msg_status = QueryStringParsing.get(\"status\");\n        if (msg_status === \"error\") {\n            mod_toastr.error(_.escape(msg_text || \"Unknown Error, please report this to an administrator.\"));\n        } else if (msg_text) {\n            mod_toastr.info(_.escape(msg_text));\n        }\n    }),\n\n    render: function() {\n        // Add workflow header\n        const header = this._templateHeader();\n        // Add the actions buttons\n        const templateActions = this._templateActionButtons();\n        const tableTemplate = this._templateWorkflowTable();\n        this.$el.html(header + templateActions + tableTemplate);\n        _(this.collection.models).each(item => {\n            // in case collection is not empty\n            this.appendItem(item);\n            this.confirmDelete(item);\n        }, this);\n        const minQueryLength = 3;\n        this.searchWorkflow(this.$(\".search-wf\"), this.$(\".workflow-search tr\"), minQueryLength);\n        this.adjustActiondropdown();\n        this._showArgErrors();\n        return this;\n    },\n\n    appendItem: function(item) {\n        const workflowItemView = new WorkflowItemView({\n            model: item,\n            collection: this.collection\n        });\n        $(\".workflow-search\").append(workflowItemView.render().el);\n        workflowItemView.renderTagEditor();\n    },\n\n    /** Add confirm box before removing/unsharing workflow */\n    confirmDelete: function(workflow) {\n        const $el_shared_wf_link = this.$(`.link-confirm-shared-${workflow.id}`);\n        $el_shared_wf_link.click(() =>\n            window.confirm(`Are you sure you want to remove the shared workflow '${workflow.attributes.name}'?`)\n        );\n    },\n\n    /** Implement client side workflow search/filtering */\n    searchWorkflow: function($el_searchinput, $el_tabletr, min_querylen) {\n        $el_searchinput.on(\"keyup\", function() {\n            const query = $(this).val();\n            // Filter when query is at least 3 characters\n            // otherwise show all rows\n            if (query.length >= min_querylen) {\n                // Ignore the query's case using 'i'\n                const regular_expression = new RegExp(query, \"i\");\n                $el_tabletr.hide();\n                $el_tabletr\n                    .filter(function() {\n                        // Apply regular expression on each row's text\n                        // and show when there is a match\n                        return regular_expression.test($(this).text());\n                    })\n                    .show();\n            } else {\n                $el_tabletr.show();\n            }\n        });\n    },\n\n    /** Ajust the position of dropdown with respect to table */\n    adjustActiondropdown: function() {\n        $(this.el).on(\"show.bs.dropdown\", function() {\n            $(this.el).css(\"overflow\", \"inherit\");\n        });\n        $(this.el).on(\"hide.bs.dropdown\", function() {\n            $(this.el).css(\"overflow\", \"auto\");\n        });\n    },\n\n    /** Template for no workflow */\n    _templateNoWorkflow: function() {\n        return '<div class=\"wf-nodata\"> You have no workflows. </div>';\n    },\n\n    /** Template for actions buttons */\n    _templateActionButtons: function() {\n        return `<ul class=\"manage-table-actions\"><li><input class=\"search-wf form-control\" type=\"text\" autocomplete=\"off\" placeholder=\"search for workflow...\"></li><li><a class=\"action-button fa fa-plus wf-action\" id=\"new-workflow\" title=\"Create new workflow\" href=\"${\n            Galaxy.root\n        }workflows/create\"></a></li><li><a class=\"action-button fa fa-upload wf-action\" id=\"import-workflow\" title=\"Upload or import workflow\" href=\"${\n            Galaxy.root\n        }workflows/import_workflow\"></a></li></ul>`;\n    },\n\n    /** Template for workflow table */\n    _templateWorkflowTable: function() {\n        const tableHtml =\n            '<table class=\"table colored\"><thead>' +\n            '<tr class=\"header\">' +\n            \"<th>Name</th>\" +\n            \"<th>Tags</th>\" +\n            \"<th>Owner</th>\" +\n            \"<th># of Steps</th>\" +\n            \"<th>Published</th>\" +\n            \"<th>Show in tools panel</th>\" +\n            \"</tr></thead>\";\n        return `${tableHtml}<tbody class=\"workflow-search \"><div class=\"hidden_description_layer\"><p>Drop workflow files here to import</p></tbody></table></div>`;\n    },\n\n    /** Main template */\n    _templateHeader: function() {\n        return (\n            '<div class=\"page-container\">' +\n            '<div class=\"user-workflows wf\">' +\n            '<div class=\"response-message\"></div>' +\n            \"<h2>\" +\n            _l(\"Your workflows\") +\n            \"</h2>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nconst ImportWorkflowView = Backbone.View.extend({\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    /** Open page to import workflow */\n    render: function() {\n        $.getJSON(`${Galaxy.root}workflow/upload_import_workflow`, options => {\n            this.$el.empty().append(this._mainTemplate(options));\n        });\n    },\n\n    /** Template for the import workflow page */\n    _mainTemplate: function(options) {\n        return `<div class='toolForm'><div class='toolFormTitle'>Import Galaxy workflow</div><div class='toolFormBody'><form name='import_workflow' id='import_workflow' action='${\n            Galaxy.root\n        }workflow/upload_import_workflow' enctype='multipart/form-data' method='POST'><div class='form-row'><label>Galaxy workflow URL:</label><input type='text' name='url' class='input-url' value='${\n            options.url\n        }' size='40'><div class='toolParamHelp' style='clear: both;'>If the workflow is accessible via a URL, enter the URL above and click <b>Import</b>.</div><div style='clear: both'></div></div><div class='form-row'><label>Galaxy workflow file:</label><div class='form-row-input'><input type='file' name='file_data' class='input-file'/></div><div class='toolParamHelp' style='clear: both;'>If the workflow is in a file on your computer, choose it and then click <b>Import</b>.</div><div style='clear: both'></div></div><div class='form-row'><input type='submit' class='primary-button wf-import' name='import_button' value='Import'></div></form><hr/><div class='form-row'><label>Import a Galaxy workflow from myExperiment:</label><div class='form-row-input'><a href='${\n            options.myexperiment_target_url\n        }'> Visit myExperiment</a></div><div class='toolParamHelp' style='clear: both;'>Click the link above to visit myExperiment and browse for Galaxy workflows.</div><div style='clear: both'></div></div></div></div>`;\n    }\n});\n\nexport default {\n    View: WorkflowListView,\n    ImportWorkflowView: ImportWorkflowView\n};\n"]}