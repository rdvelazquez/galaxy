{"version":3,"sources":["layout/masthead.js"],"names":["View","Backbone","extend","initialize","options","self","setElement","_template","$navbarBrandLink","$","$navbarBrandImage","$navbarBrandTitle","$navbarTabs","$quoteMeter","collection","Collection","on","append","Tab","model","render","$el","empty","each","callback","m","fetch","Galaxy","frame","quotaMeter","UserQuotaMeter","user","el","window","$download_link","e","target","closest","length","attr","hide","preventDefault","text","q","get","html","brand","logo_url","logo_src"],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AACA,QAAIA,OAAOC,SAASD,IAAT,CAAcE,MAAd,CAAqB;AAC5BC,oBAAY,oBAASC,OAAT,EAAkB;AAC1B,gBAAIC,OAAO,IAAX;AACA,iBAAKD,OAAL,GAAeA,OAAf;AACA,iBAAKE,UAAL,CAAgB,KAAKC,SAAL,EAAhB;AACA,iBAAKC,gBAAL,GAAwB,KAAKC,CAAL,CAAO,oBAAP,CAAxB;AACA,iBAAKC,iBAAL,GAAyB,KAAKD,CAAL,CAAO,qBAAP,CAAzB;AACA,iBAAKE,iBAAL,GAAyB,KAAKF,CAAL,CAAO,qBAAP,CAAzB;AACA,iBAAKG,WAAL,GAAmB,KAAKH,CAAL,CAAO,cAAP,CAAnB;AACA,iBAAKI,WAAL,GAAmB,KAAKJ,CAAL,CAAO,wBAAP,CAAnB;;AAEA;AACA,iBAAKK,UAAL,GAAkB,IAAI,eAAKC,UAAT,EAAlB;AACA,iBAAKD,UAAL,CACKE,EADL,CACQ,KADR,EACe,iBAAS;AAChBX,qBAAKO,WAAL,CAAiBK,MAAjB,CAAwB,IAAI,eAAKC,GAAT,CAAa,EAAEC,OAAOA,KAAT,EAAb,EAA+BC,MAA/B,GAAwCC,GAAhE;AACH,aAHL,EAIKL,EAJL,CAIQ,OAJR,EAIiB,YAAM;AACfX,qBAAKO,WAAL,CAAiBU,KAAjB;AACH,aANL,EAOKN,EAPL,CAOQ,UAPR,EAOoB,oBAAY;AACxBX,qBAAKS,UAAL,CAAgBS,IAAhB,CAAqB,aAAK;AACtBC,6BAASC,CAAT;AACH,iBAFD;AAGH,aAXL,EAYKC,KAZL,CAYW,KAAKtB,OAZhB;;AAcA;AACAuB,mBAAOC,KAAP,GAAe,KAAKA,KAAL,GAAa,0BAAgB;AACxCd,4BAAY,KAAKA;AADuB,aAAhB,CAA5B;;AAIA;AACA;AACAa,mBAAOE,UAAP,GAAoB,KAAKA,UAAL,GAAkB,IAAI,yBAAWC,cAAf,CAA8B;AAChEX,uBAAOQ,OAAOI,IADkD;AAEhEC,oBAAI,KAAKnB;AAFuD,aAA9B,CAAtC;;AAKA;AACAJ,cAAEwB,MAAF,EACKjB,EADL,CACQ,OADR,EACiB,aAAK;AACd,oBAAIkB,iBAAiBzB,EAAE0B,EAAEC,MAAJ,EAAYC,OAAZ,CAAoB,aAApB,CAArB;AACA,oBAAIH,eAAeI,MAAf,IAAyB,CAA7B,EAAgC;AAC5B,wBAAI7B,EAAE,qBAAF,EAAyB6B,MAAzB,KAAoC,CAAxC,EAA2C;AACvC7B,0BAAE,MAAF,EAAUQ,MAAV,CACIR,EAAE,WAAF,EACK8B,IADL,CACU,IADV,EACgB,UADhB,EAEKC,IAFL,EADJ;AAKH;AACD/B,sBAAE,qBAAF,EAAyB8B,IAAzB,CAA8B,KAA9B,EAAqCL,eAAeK,IAAf,CAAoB,MAApB,CAArC;AACAJ,sBAAEM,cAAF;AACH;AACJ,aAdL,EAeKzB,EAfL,CAeQ,cAfR,EAewB,YAAM;AACtB,oBAAI0B,OAAO,EAAX;AACArC,qBAAKS,UAAL,CAAgBS,IAAhB,CAAqB,iBAAS;AAC1B,wBAAIoB,IAAIxB,MAAMyB,GAAN,CAAU,gBAAV,KAA+BzB,MAAMyB,GAAN,CAAU,gBAAV,GAAvC;AACA,wBAAID,CAAJ,EAAO;AACHD,gCAAWC,CAAX;AACH;AACJ,iBALD;AAMA,oBAAID,SAAS,EAAb,EAAiB;AACb,2BAAOA,IAAP;AACH;AACJ,aA1BL;AA2BH,SAnE2B;;AAqE5BtB,gBAAQ,kBAAW;AACf,iBAAKT,iBAAL,CAAuBkC,IAAvB,cAAuC,KAAKzC,OAAL,CAAa0C,KAAb,WAA2B,KAAK1C,OAAL,CAAa0C,KAAzC,IAAqD,EAA3F;AACA,iBAAKtC,gBAAL,CAAsB+B,IAAtB,CAA2B,MAA3B,EAAmC,KAAKnC,OAAL,CAAa2C,QAAhD;AACA,iBAAKrC,iBAAL,CAAuB6B,IAAvB,CAA4B,KAA5B,EAAmC,KAAKnC,OAAL,CAAa4C,QAAhD;AACA,iBAAKnB,UAAL,CAAgBT,MAAhB;AACA,mBAAO,IAAP;AACH,SA3E2B;;AA6E5B;AACAb,mBAAW,qBAAW;AAClB,mBACI,uEACA,6BADA,GAEA,4BAFA,GAGA,QAHA,GAIA,4BAJA,GAKA,+BALA,GAMA,mCANA,GAOA,oCAPA,GAQA,MARA,GASA,QATA,GAUA,sCAVA,GAWA,6BAXA,GAYA,QAbJ;AAeH;AA9F2B,KAArB,CAAX;;sBAiGe;AACXP,cAAMA;AADK,K","file":"../../scripts/layout/masthead.js","sourcesContent":["import Menu from \"layout/menu\";\nimport Scratchbook from \"layout/scratchbook\";\nimport QuotaMeter from \"mvc/user/user-quotameter\";\n\n/** Masthead **/\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.options = options;\n        this.setElement(this._template());\n        this.$navbarBrandLink = this.$(\".navbar-brand-link\");\n        this.$navbarBrandImage = this.$(\".navbar-brand-image\");\n        this.$navbarBrandTitle = this.$(\".navbar-brand-title\");\n        this.$navbarTabs = this.$(\".navbar-tabs\");\n        this.$quoteMeter = this.$(\".quota-meter-container\");\n\n        // build tabs\n        this.collection = new Menu.Collection();\n        this.collection\n            .on(\"add\", model => {\n                self.$navbarTabs.append(new Menu.Tab({ model: model }).render().$el);\n            })\n            .on(\"reset\", () => {\n                self.$navbarTabs.empty();\n            })\n            .on(\"dispatch\", callback => {\n                self.collection.each(m => {\n                    callback(m);\n                });\n            })\n            .fetch(this.options);\n\n        // scratchbook\n        Galaxy.frame = this.frame = new Scratchbook({\n            collection: this.collection\n        });\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter({\n            model: Galaxy.user,\n            el: this.$quoteMeter\n        });\n\n        // loop through beforeunload functions if the user attempts to unload the page\n        $(window)\n            .on(\"click\", e => {\n                var $download_link = $(e.target).closest(\"a[download]\");\n                if ($download_link.length == 1) {\n                    if ($(\"iframe[id=download]\").length === 0) {\n                        $(\"body\").append(\n                            $(\"<iframe/>\")\n                                .attr(\"id\", \"download\")\n                                .hide()\n                        );\n                    }\n                    $(\"iframe[id=download]\").attr(\"src\", $download_link.attr(\"href\"));\n                    e.preventDefault();\n                }\n            })\n            .on(\"beforeunload\", () => {\n                var text = \"\";\n                self.collection.each(model => {\n                    var q = model.get(\"onbeforeunload\") && model.get(\"onbeforeunload\")();\n                    if (q) {\n                        text += `${q} `;\n                    }\n                });\n                if (text !== \"\") {\n                    return text;\n                }\n            });\n    },\n\n    render: function() {\n        this.$navbarBrandTitle.html(`Galaxy ${(this.options.brand && `/ ${this.options.brand}`) || \"\"}`);\n        this.$navbarBrandLink.attr(\"href\", this.options.logo_url);\n        this.$navbarBrandImage.attr(\"src\", this.options.logo_src);\n        this.quotaMeter.render();\n        return this;\n    },\n\n    /** body template */\n    _template: function() {\n        return (\n            '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n            '<div class=\"navbar-header\">' +\n            '<div class=\"navbar-tabs\"/>' +\n            \"</div>\" +\n            '<div class=\"navbar-brand\">' +\n            '<a class=\"navbar-brand-link\">' +\n            '<img class=\"navbar-brand-image\"/>' +\n            '<span class=\"navbar-brand-title\"/>' +\n            \"</a>\" +\n            \"</div>\" +\n            '<div class=\"quota-meter-container\"/>' +\n            '<div class=\"navbar-icons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}