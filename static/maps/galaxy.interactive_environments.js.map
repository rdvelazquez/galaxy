{"version":3,"sources":["galaxy.interactive_environments.js"],"names":["append_notebook","clear_main_area","display_spinner","make_spin_state","spin_error","spin","test_ie_availability","load_when_ready","url","$","append","remove","children","galaxy_root","type","ajax_timeout_init","ajax_timeout_max","ajax_timeout_step","sleep_init","sleep_max","sleep_step","log_attempts","s","ajax_timeout","sleep","count","console_msg","user_msg","clear","console","log","toastr","error","closeButton","timeOut","extendedTimeOut","tapToDismiss","spin_again","spin_state","window","setTimeout","spinner","bool_response","success_callback","timeout_callback","error_callback","ajax_params","xhrFields","withCredentials","timeout","success","data","status","jqxhr","ajax","spin_until","messages","warn_at","message_once","message","info","wrapped_success","timeout_error","warning","waiting","wait_warn","not_ready","unknown_response"],"mappings":"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","file":"../scripts/galaxy.interactive_environments.js","sourcesContent":["/**\n * Internal function to remove content from the main area and add the notebook.\n * Not idempotent\n * TODO: This isn't just internal, some notebooks are calling it?\n */\nexport function append_notebook(url) {\n    clear_main_area();\n    $(\"#main\").append(\n        `<iframe frameBorder=\"0\" seamless=\"seamless\" style=\"width: 100%; height: 100%; overflow:hidden;\" scrolling=\"no\" src=\"${url}\"></iframe>`\n    );\n}\n\nexport function clear_main_area() {\n    $(\"#spinner\").remove();\n    $(\"#main\")\n        .children()\n        .remove();\n}\n\nexport function display_spinner() {\n    $(\"#main\").append(\n        `<img id=\"spinner\" src=\"${galaxy_root}static/style/largespinner.gif\" style=\"position:absolute;margin:auto;top:0;left:0;right:0;bottom:0;\">`\n    );\n}\n\n/* Create a spin_state object used by spin() and spin_again() */\nexport function make_spin_state(\n    type,\n    ajax_timeout_init,\n    ajax_timeout_max,\n    ajax_timeout_step,\n    sleep_init,\n    sleep_max,\n    sleep_step,\n    log_attempts\n) {\n    var s = {\n        type: typeof type !== \"undefined\" ? type : \"GIE spin\",\n        ajax_timeout: typeof ajax_timeout_init !== \"undefined\" ? ajax_timeout_init : 2000,\n        ajax_timeout_max: typeof ajax_timeout_max !== \"undefined\" ? ajax_timeout_max : 16000,\n        ajax_timeout_step: typeof ajax_timeout_step !== \"undefined\" ? ajax_timeout_step : 500,\n        sleep: typeof sleep_init !== \"undefined\" ? sleep_init : 500,\n        sleep_max: typeof sleep_max !== \"undefined\" ? sleep_max : 8000,\n        sleep_step: typeof sleep_step !== \"undefined\" ? sleep_step : 100,\n        log_attempts: typeof log_attempts !== \"undefined\" ? log_attempts : true,\n        count: 0\n    };\n    return s;\n}\n\n/* Log/display an error when spinning fails. */\nexport function spin_error(console_msg, user_msg, clear) {\n    console.log(console_msg);\n    if (clear) clear_main_area();\n    if (typeof user_msg == \"string\") {\n        toastr.clear();\n        toastr.error(user_msg, \"Error\", {\n            closeButton: true,\n            timeOut: 0,\n            extendedTimeOut: 0,\n            tapToDismiss: false\n        });\n    }\n}\n\n/* Increase sleep time and spin again. */\nfunction spin_again(spin_state) {\n    if (spin_state.sleep < spin_state.sleep_max) {\n        spin_state.sleep += spin_state.sleep_step;\n    }\n    if (spin_state.log_attempts) {\n        console.log(\n            `${spin_state.type} request ${spin_state.count} request timeout ${\n                spin_state.ajax_timeout\n            }ms sleeping ${spin_state.sleep / 1000}s`\n        );\n    }\n    window.setTimeout(spin_state.spinner, spin_state.sleep);\n}\n\n/*\n * Spin on a URL as long as it times out, otherwise, call the provided success or error callback. If the callback\n * returns `true`, the condition is considered \"resolved\" and spinning stops. Otherwise, continue spinning, increasing\n * AJAX timeouts and/or sleep values as configured in the spin_state.\n */\nexport function spin(url, bool_response, success_callback, timeout_callback, error_callback, spin_state) {\n    var spinner = () => {\n        var ajax_params = {\n            url: url,\n            xhrFields: {\n                withCredentials: true\n            },\n            type: \"GET\",\n            timeout: spin_state.ajax_timeout,\n            success: function(data, status, jqxhr) {\n                if (!success_callback(data, status, jqxhr)) {\n                    spin_state.count++;\n                    spin_again(spin_state);\n                }\n            },\n            error: function(jqxhr, status, error) {\n                if (status == \"timeout\") {\n                    if (spin_state.ajax_timeout < spin_state.ajax_timeout_max) {\n                        spin_state.ajax_timeout += spin_state.ajax_timeout_step;\n                    }\n                    spin_state.count++;\n                    if (!timeout_callback(jqxhr, status, error)) spin_again(spin_state);\n                } else {\n                    spin_state.count++;\n                    if (!error_callback(jqxhr, status, error)) spin_again(spin_state);\n                }\n            }\n        };\n        if (bool_response) ajax_params[\"dataType\"] = \"json\";\n        $.ajax(ajax_params);\n    };\n    console.log(`Setting up new spinner for ${spin_state.type} on ${url}`);\n    spin_state.spinner = spinner;\n    window.setTimeout(spinner, spin_state.sleep);\n}\n\n/*\n * Spin on a URL forever until there is an acceptable response. \n * @param {String} url: URL to test response of. Must return a 200 (302->200 is OK).\n * @param {Boolean} bool_response: If set to `true`, do not stop spinning until the response is `true`. Otherwise, stop\n *     as soon as a successful response is received.\n */\nfunction spin_until(url, bool_response, messages, success_callback, spin_state) {\n    var warn_at = 40; // ~2 mins\n    var message_once = (message, spin_state) => {\n        if (spin_state.count == 1) {\n            display_spinner();\n            toastr.info(message, null, {\n                closeButton: true,\n                timeOut: 0,\n                extendedTimeOut: 0,\n                tapToDismiss: false\n            });\n        }\n    };\n    var wrapped_success = data => {\n        if (!bool_response || (bool_response && data == true)) {\n            console.log(messages[\"success\"]);\n            clear_main_area();\n            toastr.clear();\n            success_callback();\n        } else if (bool_response && data == false) {\n            message_once(messages[\"not_ready\"], spin_state);\n            return false; // keep spinning\n        } else {\n            spin_error(`Invalid response to ${spin_state.type} request`, messages[\"invalid_response\"], true);\n        }\n        return true; // stop spinning\n    };\n    var timeout_error = (jqxhr, status, error) => {\n        message_once(messages[\"waiting\"], spin_state);\n        if (spin_state.count == warn_at) {\n            toastr.warning(messages[\"wait_warn\"], \"Warning\", {\n                closeButton: true,\n                timeOut: 0,\n                extendedTimeOut: 0,\n                tapToDismiss: false\n            });\n        }\n        return false; // keep spinning\n    };\n    spin(url, bool_response, wrapped_success, timeout_error, timeout_error, spin_state);\n}\n\n/**\n * Test availability of a URL, and call a callback when done.\n * http://stackoverflow.com/q/25390206/347368\n * @param {String} url: URL to test availability of. Must return a 200 (302->200 is OK).\n * @param {String} callback: function to call once successfully connected.\n *\n */\nexport function test_ie_availability(url, success_callback) {\n    var messages = {\n        success: \"IE connection succeeded, returning\",\n        waiting: \"Interactive environment container is running, attempting to connect to the IE. Please wait...\",\n        wait_warn:\n            \"It is taking an usually long time to connect to the interactive environment. Attempts will continue but you may want to report this condition to a Galaxy administrator if it does not succeed soon.\",\n        error:\n            \"An error was encountered while attempting to connect to the interactive environment, contact your administrator.\"\n    };\n    var spin_state = make_spin_state(\"IE availability\");\n    spin_until(url, false, messages, success_callback, spin_state);\n}\n\n/**\n * Test a boolean (json) response from a URL, and call a callback when done.\n * http://stackoverflow.com/q/25390206/347368\n * @param {String} url: URL to test response of. Must return a 200 (302->200 is OK) and either `true` or `false`.\n * @param {String} callback: function to call once successfully connected.\n *\n */\nexport function load_when_ready(url, success_callback) {\n    var messages = {\n        success: \"Galaxy reports IE container ready, returning\",\n        not_ready: \"Galaxy is launching a container in which to run this interactive environment. Please wait...\",\n        unknown_response:\n            \"Galaxy failed to launch a container in which to run this interactive environment, contact a Galaxy administrator.\",\n        waiting: \"Galaxy is launching a container in which to run this interactive environment. Please wait...\",\n        wait_warn:\n            \"It is taking an usually long time to start a container. Attempts will continue but you may want to report this condition to a Galaxy administrator if it does not succeed soon.\",\n        error:\n            \"Galaxy encountered an error while attempting to determine the readiness of this interactive environment's container, contact a Galaxy administrator.\"\n    };\n    var spin_state = make_spin_state(\"IE container readiness\");\n    spin_until(url, true, messages, success_callback, spin_state);\n}\n"]}