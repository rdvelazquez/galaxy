{"version":3,"sources":["ui/filter-control.js"],"names":["$","dropDownSelect","options","selected","_","isEmpty","$select","join","length","find","addClass","attr","append","map","option","selectThis","event","$this","parents","newSelection","text","trigger","click","FilterControl","element","init","prototype","DATA_KEY","_init","filters","$element","extend","defaults","currFilter","render","_render","empty","_renderKeySelect","_renderOpSelect","_renderValueInput","__renderKeySelect","filterControl","keys","filter","key","$keySelect","on","selection","findWhere","_triggerChange","__renderOpSelect","ops","$opSelect","__renderValueInput","values","$valueSelect","value","val","_val","op","$value","hasClass","__triggerChange","fn","$filterControl","nonOptionsArgs","makeArray","arguments","slice","data","type","apply"],"mappings":"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","file":"../../scripts/ui/filter-control.js","sourcesContent":["import jQuery from \"jquery\";\n(\"use_strict\");\n\nvar $ = jQuery;\n//==============================================================================\n/**\n *  Template function that produces a bootstrap dropdown to replace the\n *  vanilla HTML select input. Pass in an array of options and an initial selection:\n *  $( '.my-div' ).append( dropDownSelect( [ 'option1', 'option2' ], 'option2' );\n *\n *  When the user changes the selected option a 'change.dropdown-select' event will\n *  fire with both the jq event and the new selection text as arguments.\n *\n *  Get the currently selected choice using:\n *  var userChoice = $( '.my-div .dropdown-select .dropdown-select-selected' ).text();\n *\n */\nfunction dropDownSelect(options, selected) {\n    // replacement for vanilla select element using bootstrap dropdowns instead\n    selected = selected || (!_.isEmpty(options) ? options[0] : \"\");\n    var $select = $(\n        [\n            '<div class=\"dropdown-select btn-group\">',\n            '<button type=\"button\" class=\"btn btn-default\">',\n            `<span class=\"dropdown-select-selected\">${selected}</span>`,\n            \"</button>\",\n            \"</div>\"\n        ].join(\"\\n\")\n    );\n\n    // if there's only one option, do not style/create as buttons, dropdown - use simple span\n    // otherwise, a dropdown displaying the current selection\n    if (options && options.length > 1) {\n        $select\n            .find(\"button\")\n            .addClass(\"dropdown-toggle\")\n            .attr(\"data-toggle\", \"dropdown\")\n            .append(' <span class=\"caret\"></span>');\n        $select.append(\n            [\n                '<ul class=\"dropdown-menu\" role=\"menu\">',\n                _.map(options, option => ['<li><a href=\"javascript:void(0)\">', option, \"</a></li>\"].join(\"\")).join(\n                    \"\\n\"\n                ),\n                \"</ul>\"\n            ].join(\"\\n\")\n        );\n    }\n\n    // trigger 'change.dropdown-select' when a new selection is made using the dropdown\n    function selectThis(event) {\n        var $this = $(this);\n        var $select = $this.parents(\".dropdown-select\");\n        var newSelection = $this.text();\n        $select.find(\".dropdown-select-selected\").text(newSelection);\n        $select.trigger(\"change.dropdown-select\", newSelection);\n    }\n\n    $select.find(\"a\").click(selectThis);\n    return $select;\n}\n\n//==============================================================================\n/**\n *  Creates a three part bootstrap button group (key, op, value) meant to\n *  allow the user control of filters (e.g. { key: 'name', op: 'contains', value: 'my_history' })\n *\n *  Each field uses a dropDownSelect (from ui.js) to allow selection\n *  (with the 'value' field appearing as an input when set to do so).\n *\n *  Any change or update in any of the fields will trigger a 'change.filter-control'\n *  event which will be passed an object containing those fields (as the example above).\n *\n *  Pass in an array of possible filter objects to control what the user can select.\n *  Each filter object should have:\n *      key : generally the attribute name on which to filter something\n *      ops : an array of 1 or more filter operations (e.g. [ 'is', '<', 'contains', '!=' ])\n *      values (optional) : an array of possible values for the filter (e.g. [ 'true', 'false' ])\n *  @example:\n *  $( '.my-div' ).filterControl({\n *      filters : [\n *          { key: 'name',    ops: [ 'is exactly', 'contains' ] }\n *          { key: 'deleted', ops: [ 'is' ], values: [ 'true', 'false' ] }\n *      ]\n *  });\n *  // after initialization, you can prog. get the current value using:\n *  $( '.my-div' ).filterControl( 'val' )\n *\n */\nfunction FilterControl(element, options) {\n    return this.init(element, options);\n}\n/** the data key that this object will be stored under in the DOM element */\nFilterControl.prototype.DATA_KEY = \"filter-control\";\n\n/** parses options, sets up instance vars, and does initial render */\nFilterControl.prototype.init = function _init(element, options) {\n    options = options || { filters: [] };\n    this.$element = $(element).addClass(\"filter-control btn-group\");\n    this.options = jQuery.extend(true, {}, this.defaults, options);\n\n    this.currFilter = this.options.filters[0];\n    return this.render();\n};\n\n/** render (or re-render) the controls on the element */\nFilterControl.prototype.render = function _render() {\n    this.$element.empty().append([this._renderKeySelect(), this._renderOpSelect(), this._renderValueInput()]);\n    return this;\n};\n\n/** render the key dropDownSelect, bind a change event to it, and return it */\nFilterControl.prototype._renderKeySelect = function __renderKeySelect() {\n    var filterControl = this;\n    var keys = this.options.filters.map(filter => filter.key);\n    this.$keySelect = dropDownSelect(keys, this.currFilter.key)\n        .addClass(\"filter-control-key\")\n        .on(\"change.dropdown-select\", (event, selection) => {\n            filterControl.currFilter = _.findWhere(filterControl.options.filters, { key: selection });\n            // when the filter/key changes, re-render the control entirely\n            filterControl.render()._triggerChange();\n        });\n    return this.$keySelect;\n};\n\n/** render the op dropDownSelect, bind a change event to it, and return it */\nFilterControl.prototype._renderOpSelect = function __renderOpSelect() {\n    var filterControl = this;\n    var ops = this.currFilter.ops;\n    //TODO: search for currOp in avail. ops: use that for selected if there; otherwise: first op\n    this.$opSelect = dropDownSelect(ops, ops[0])\n        .addClass(\"filter-control-op\")\n        .on(\"change.dropdown-select\", (event, selection) => {\n            filterControl._triggerChange();\n        });\n    return this.$opSelect;\n};\n\n/** render the value control, bind a change event to it, and return it */\nFilterControl.prototype._renderValueInput = function __renderValueInput() {\n    var filterControl = this;\n    // if a values attribute is prov. on the filter - make this a dropdown; otherwise, use an input\n    if (this.currFilter.values) {\n        this.$valueSelect = dropDownSelect(this.currFilter.values, this.currFilter.values[0]).on(\n            \"change.dropdown-select\",\n            (event, selection) => {\n                filterControl._triggerChange();\n            }\n        );\n    } else {\n        //TODO: allow setting a value type (mainly for which html5 input to use: range, number, etc.)\n        this.$valueSelect = $(\"<input/>\")\n            .addClass(\"form-control\")\n            .on(\"change\", (event, value) => {\n                filterControl._triggerChange();\n            });\n    }\n    this.$valueSelect.addClass(\"filter-control-value\");\n    return this.$valueSelect;\n};\n\n/** return the current state/setting for the filter as a three key object: key, op, value */\nFilterControl.prototype.val = function _val() {\n    var key = this.$element.find(\".filter-control-key .dropdown-select-selected\").text();\n\n    var op = this.$element.find(\".filter-control-op .dropdown-select-selected\").text();\n\n    var // handle either a dropdown or plain input\n    $value = this.$element.find(\".filter-control-value\");\n\n    var value = $value.hasClass(\"dropdown-select\") ? $value.find(\".dropdown-select-selected\").text() : $value.val();\n\n    return { key: key, op: op, value: value };\n};\n\n// single point of change for change event\nFilterControl.prototype._triggerChange = function __triggerChange() {\n    this.$element.trigger(\"change.filter-control\", this.val());\n};\n\n// as jq plugin\njQuery.fn.extend({\n    filterControl: function $filterControl(options) {\n        var nonOptionsArgs = jQuery.makeArray(arguments).slice(1);\n        return this.map(function() {\n            var $this = $(this);\n            var data = $this.data(FilterControl.prototype.DATA_KEY);\n\n            if (jQuery.type(options) === \"object\") {\n                data = new FilterControl($this, options);\n                $this.data(FilterControl.prototype.DATA_KEY, data);\n            }\n            if (data && jQuery.type(options) === \"string\") {\n                var fn = data[options];\n                if (jQuery.type(fn) === \"function\") {\n                    return fn.apply(data, nonOptionsArgs);\n                }\n            }\n            return this;\n        });\n    }\n});\n"]}