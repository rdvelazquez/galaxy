{"version":3,"sources":["ui/autocom_tagging.js"],"names":["$","init_tag_click_function","tag_elt","click_func","find","each","click","tag_str","text","tag_name_and_value","split","fn","autocomplete_tagging","options","defaults","get_toggle_link_text_fn","tags","num_tags","_","size","tag_click_fn","name","value","editable","input_size","in_form","use_toggle_link","item_id","add_tag_img","add_tag_img_rollover","delete_tag_img","ajax_autocomplete_tag_url","ajax_retag_url","ajax_delete_tag_url","ajax_add_tag_url","settings","extend","this_obj","tag_area","toggle_link","tag_input_field","add_tag_button","after_toggle_fn","is","length","blur","slideToggle","hide","keyup","e","keyCode","trigger","new_value","indexOf","substring","trim","new_tag_button","build_tag_button","tag_buttons","children","last_tag_button","slice","after","prepend","new_text","zz","ajax","url","data","new_tag","error","remove","alert","success","cacheFlush","format_item_func","key","row_position","num_rows","search_term","autocomplete_options","selectFirst","formatItem","autoFill","highlight","autocomplete_verheul","init_delete_tag_image","bind","show","removeClass","is_active","hasClass","target","addClass","focus","handle_document_click","check_click","tag_area_id","attr","window","unbind","build_tag_str","tag_name","tag_value","delete_img","mouseenter","delete_tag_img_rollover","mouseleave","tag_button","parent","tag_name_elt","eq","prev_button","prev","append"],"mappings":"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","file":"../../scripts/ui/autocom_tagging.js","sourcesContent":["import jQuery from \"jquery\";\n(\"use_strict\");\n\nvar $ = jQuery;\n\n// ============================================================================\n/**\n * JQuery extension for tagging with autocomplete.\n * @author: Jeremy Goecks\n * @require: jquery.autocomplete plugin\n */\n//\n// Initialize \"tag click functions\" for tags.\n//\nfunction init_tag_click_function(tag_elt, click_func) {\n    $(tag_elt)\n        .find(\".tag-name\")\n        .each(function() {\n            $(this).click(function() {\n                var tag_str = $(this).text();\n                var tag_name_and_value = tag_str.split(\":\");\n                click_func(tag_name_and_value[0], tag_name_and_value[1]);\n                return true;\n            });\n        });\n}\n\njQuery.fn.autocomplete_tagging = function(options) {\n    var defaults = {\n        get_toggle_link_text_fn: function(tags) {\n            var text = \"\";\n            var num_tags = _.size(tags);\n            if (num_tags > 0) {\n                text = num_tags + (num_tags > 1 ? \" Tags\" : \" Tag\");\n            } else {\n                text = \"Add tags\";\n            }\n            return text;\n        },\n        tag_click_fn: function(name, value) {},\n        editable: true,\n        input_size: 20,\n        in_form: false,\n        tags: {},\n        use_toggle_link: true,\n        item_id: \"\",\n        add_tag_img: \"\",\n        add_tag_img_rollover: \"\",\n        delete_tag_img: \"\",\n        ajax_autocomplete_tag_url: \"\",\n        ajax_retag_url: \"\",\n        ajax_delete_tag_url: \"\",\n        ajax_add_tag_url: \"\"\n    };\n\n    var settings = jQuery.extend(defaults, options);\n\n    //\n    // Initalize object's elements.\n    //\n\n    // Get elements for this object. For this_obj, assume the last element with the id is the \"this\"; this is somewhat of a hack to address the problem\n    // that there may be two tagging elements for a single item if there are both community and individual tags for an element.\n    var this_obj = $(this);\n    var tag_area = this_obj.find(\".tag-area\");\n    var toggle_link = this_obj.find(\".toggle-link\");\n    var tag_input_field = this_obj.find(\".tag-input\");\n    var add_tag_button = this_obj.find(\".add-tag-button\");\n\n    // Initialize toggle link.\n    toggle_link.click(function() {\n        // Take special actions depending on whether toggle is showing or hiding link.\n        var after_toggle_fn;\n        if (tag_area.is(\":hidden\")) {\n            after_toggle_fn = function() {\n                // If there are no tags, go right to editing mode by generating a click on the area.\n                var num_tags = $(this).find(\".tag-button\").length;\n                if (num_tags === 0) {\n                    tag_area.click();\n                }\n            };\n        } else {\n            after_toggle_fn = () => {\n                tag_area.blur();\n            };\n        }\n        tag_area.slideToggle(\"fast\", after_toggle_fn);\n        return $(this);\n    });\n\n    // Initialize tag input field.\n    if (settings.editable) {\n        tag_input_field.hide();\n    }\n    tag_input_field.keyup(function(e) {\n        if (e.keyCode === 27) {\n            // Escape key\n            $(this).trigger(\"blur\");\n        } else if (\n            e.keyCode === 13 || // Return Key\n            e.keyCode === 188 || // Comma\n            e.keyCode === 32 // Space\n        ) {\n            //\n            // Check input.\n            //\n\n            var new_value = this.value;\n\n            // Suppress space after a \":\"\n            if (new_value.indexOf(\": \", new_value.length - 2) !== -1) {\n                this.value = new_value.substring(0, new_value.length - 1);\n                return false;\n            }\n\n            // Remove trigger keys from input.\n            if (e.keyCode === 188 || e.keyCode === 32) {\n                new_value = new_value.substring(0, new_value.length - 1);\n            }\n\n            // Trim whitespace.\n            new_value = $.trim(new_value);\n\n            // Too short?\n            if (new_value.length < 2) {\n                return false;\n            }\n\n            //\n            // New tag OK - apply it.\n            //\n\n            this.value = \"\"; // Reset text field now that tag is being added\n\n            // Add button for tag after all other tag buttons.\n            var new_tag_button = build_tag_button(new_value);\n            var tag_buttons = tag_area.children(\".tag-button\");\n            if (tag_buttons.length !== 0) {\n                var last_tag_button = tag_buttons.slice(tag_buttons.length - 1);\n                last_tag_button.after(new_tag_button);\n            } else {\n                tag_area.prepend(new_tag_button);\n            }\n\n            // Add tag to internal list.\n            var tag_name_and_value = new_value.split(\":\");\n            settings.tags[tag_name_and_value[0]] = tag_name_and_value[1];\n\n            // Update toggle link text.\n            var new_text = settings.get_toggle_link_text_fn(settings.tags);\n            toggle_link.text(new_text);\n\n            // Commit tag to server.\n            var zz = $(this);\n            $.ajax({\n                url: settings.ajax_add_tag_url,\n                data: { new_tag: new_value },\n                error: function() {\n                    // Failed. Roll back changes and show alert.\n                    new_tag_button.remove();\n                    delete settings.tags[tag_name_and_value[0]];\n                    var new_text = settings.get_toggle_link_text_fn(settings.tags);\n                    toggle_link.text(new_text);\n                    alert(\"Add tag failed\");\n                },\n                success: function() {\n                    // Flush autocomplete cache because it's not out of date.\n                    // TODO: in the future, we could remove the particular item\n                    // that was chosen from the cache rather than flush it.\n                    zz.data(\"autocompleter\").cacheFlush();\n                }\n            });\n\n            return false;\n        }\n    });\n\n    // Add autocomplete to input.\n    var format_item_func = (key, row_position, num_rows, value, search_term) => {\n        var tag_name_and_value = value.split(\":\");\n        return tag_name_and_value.length === 1 ? tag_name_and_value[0] : tag_name_and_value[1];\n    };\n    var autocomplete_options = {\n        selectFirst: false,\n        formatItem: format_item_func,\n        autoFill: false,\n        highlight: false\n    };\n    tag_input_field.autocomplete_verheul(settings.ajax_autocomplete_tag_url, autocomplete_options);\n\n    // Initialize delete tag images for current tags.\n    this_obj.find(\".delete-tag-img\").each(function() {\n        init_delete_tag_image($(this));\n    });\n\n    // Initialize tag click function.\n    init_tag_click_function($(this), settings.tag_click_fn);\n\n    // Initialize \"add tag\" button.\n    add_tag_button.click(function() {\n        $(this).hide();\n\n        // Clicking on button is the same as clicking on the tag area.\n        tag_area.click();\n        return false;\n    });\n\n    //\n    // Set up tag area interactions; these are needed only if tags are editable.\n    //\n    if (settings.editable) {\n        // When the tag area blurs, go to \"view tag\" mode.\n        tag_area.bind(\"blur\", e => {\n            if (_.size(settings.tags) > 0) {\n                add_tag_button.show();\n                tag_input_field.hide();\n                tag_area.removeClass(\"active-tag-area\");\n                // tag_area.addClass(\"tooltip\");\n            } else {\n                // No tags, so do nothing to ensure that input is still visible.\n            }\n        });\n\n        // On click, enable user to add tags.\n        tag_area.click(function(e) {\n            var is_active = $(this).hasClass(\"active-tag-area\");\n\n            // If a \"delete image\" object was pressed and area is inactive, do nothing.\n            if ($(e.target).hasClass(\"delete-tag-img\") && !is_active) {\n                return false;\n            }\n\n            // If a \"tag name\" object was pressed and area is inactive, do nothing.\n            if ($(e.target).hasClass(\"tag-name\") && !is_active) {\n                return false;\n            }\n\n            // Remove tooltip.\n            // $(this).removeClass(\"tooltip\");\n\n            // Hide add tag button, show tag_input field. Change background to show\n            // area is active.\n            $(this).addClass(\"active-tag-area\");\n            add_tag_button.hide();\n            tag_input_field.show();\n            tag_input_field.focus();\n\n            // Add handler to document that will call blur when the tag area is blurred;\n            // a tag area is blurred when a user clicks on an element outside the area.\n            var handle_document_click = e => {\n                var check_click = function(tag_area, target) {\n                    var tag_area_id = tag_area.attr(\"id\");\n                    // Blur the tag area if the element clicked on is not in the tag area.\n                    if (target !== tag_area) {\n                        tag_area.blur();\n                        $(window).unbind(\"click.tagging_blur\");\n                        $(this).addClass(\"tooltip\");\n                    }\n                };\n                check_click(tag_area, $(e.target));\n            };\n            // TODO: we should attach the click handler to all frames in order to capture\n            // clicks outside the frame that this element is in.\n            //window.parent.document.onclick = handle_document_click;\n            //var temp = $(window.parent.document.body).contents().find(\"iframe\").html();\n            //alert(temp);\n            //$(document).parent().click(handle_document_click);\n            $(window).bind(\"click.tagging_blur\", handle_document_click);\n\n            return false;\n        });\n    }\n\n    // If using toggle link, hide the tag area. Otherwise, show the tag area.\n    if (settings.use_toggle_link) {\n        tag_area.hide();\n    }\n\n    //\n    // Helper functions.\n    //\n\n    //\n    // Collapse tag name + value into a single string.\n    //\n    function build_tag_str(tag_name, tag_value) {\n        return tag_name + (tag_value ? `:${tag_value}` : \"\");\n    }\n\n    // Initialize a \"delete tag image\": when click, delete tag from UI and send delete request to server.\n    function init_delete_tag_image(delete_img) {\n        $(delete_img).mouseenter(function() {\n            $(this).attr(\"src\", settings.delete_tag_img_rollover);\n        });\n        $(delete_img).mouseleave(function() {\n            $(this).attr(\"src\", settings.delete_tag_img);\n        });\n        $(delete_img).click(function() {\n            // Tag button is image's parent.\n            var tag_button = $(this).parent();\n\n            // Get tag name, value.\n            var tag_name_elt = tag_button.find(\".tag-name\").eq(0);\n            var tag_str = tag_name_elt.text();\n            var tag_name_and_value = tag_str.split(\":\");\n            var tag_name = tag_name_and_value[0];\n            var tag_value = tag_name_and_value[1];\n\n            var prev_button = tag_button.prev();\n            tag_button.remove();\n\n            // Remove tag from local list for consistency.\n            delete settings.tags[tag_name];\n\n            // Update toggle link text.\n            var new_text = settings.get_toggle_link_text_fn(settings.tags);\n            toggle_link.text(new_text);\n\n            // Delete tag.\n            $.ajax({\n                url: settings.ajax_delete_tag_url,\n                data: { tag_name: tag_name },\n                error: function() {\n                    // Failed. Roll back changes and show alert.\n                    settings.tags[tag_name] = tag_value;\n                    if (prev_button.hasClass(\"tag-button\")) {\n                        prev_button.after(tag_button);\n                    } else {\n                        tag_area.prepend(tag_button);\n                    }\n                    alert(\"Remove tag failed\");\n\n                    toggle_link.text(settings.get_toggle_link_text_fn(settings.tags));\n\n                    // TODO: no idea why it's necessary to set this up again.\n                    delete_img.mouseenter(function() {\n                        $(this).attr(\"src\", settings.delete_tag_img_rollover);\n                    });\n                    delete_img.mouseleave(function() {\n                        $(this).attr(\"src\", settings.delete_tag_img);\n                    });\n                },\n                success: function() {}\n            });\n\n            return true;\n        });\n    }\n\n    //\n    // Function that builds a tag button.\n    //\n    function build_tag_button(tag_str) {\n        // Build \"delete tag\" image.\n        var delete_img = $(\"<img/>\")\n            .attr(\"src\", settings.delete_tag_img)\n            .addClass(\"delete-tag-img\");\n        init_delete_tag_image(delete_img);\n\n        // Build tag button.\n        var tag_name_elt = $(\"<span>\")\n            .text(tag_str)\n            .addClass(\"tag-name\");\n        tag_name_elt.click(() => {\n            var tag_name_and_value = tag_str.split(\":\");\n            settings.tag_click_fn(tag_name_and_value[0], tag_name_and_value[1]);\n            return true;\n        });\n\n        var tag_button = $(\"<span></span>\").addClass(\"tag-button\");\n        tag_button.append(tag_name_elt);\n        // Allow delete only if element is editable.\n        if (settings.editable) {\n            tag_button.append(delete_img);\n        }\n\n        return tag_button;\n    }\n};\n\n// ============================================================================\nexport default init_tag_click_function;\n"]}