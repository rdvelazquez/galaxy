{"version":3,"sources":["ui/editable-text.js"],"names":["$","fn","make_text_editable","config_dict","num_cols","num_rows","use_textarea","on_finish","help_text","container","addClass","click","e","children","length","removeClass","set_text","find","remove","new_text","text","html","cur_text","input_elt","button_elt","attr","rows","cols","trim","keyup","keyCode","val","value","size","blur","trigger","stopPropagation","append","focus","select","tooltip"],"mappings":"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","file":"../../scripts/ui/editable-text.js","sourcesContent":["import jQuery from \"jquery\";\n(\"use_strict\");\n\nvar $ = jQuery;\n\n// ============================================================================\n/**\n * Make an element with text editable: (a) when user clicks on text, a textbox/area\n * is provided for editing; (b) when enter key pressed, element's text is set and on_finish\n * is called.\n */\n$.fn.make_text_editable = function(config_dict) {\n    // Get config options.\n    var num_cols = \"num_cols\" in config_dict ? config_dict.num_cols : 30;\n\n    var num_rows = \"num_rows\" in config_dict ? config_dict.num_rows : 4;\n\n    var use_textarea = \"use_textarea\" in config_dict ? config_dict.use_textarea : false;\n\n    var on_finish = \"on_finish\" in config_dict ? config_dict.on_finish : null;\n    var help_text = \"help_text\" in config_dict ? config_dict.help_text : null;\n\n    // Add element behavior.\n    var container = $(this);\n    container.addClass(\"editable-text\").click(function(e) {\n        // If there's already an input element, editing is active, so do nothing.\n        if ($(this).children(\":input\").length > 0) {\n            return;\n        }\n\n        container.removeClass(\"editable-text\");\n\n        // Handler for setting element text.\n        var set_text = new_text => {\n            container.find(\":input\").remove();\n\n            if (new_text !== \"\") {\n                container.text(new_text);\n            } else {\n                // No text; need a line so that there is a click target.\n                container.html(\"<br>\");\n            }\n            container.addClass(\"editable-text\");\n\n            if (on_finish) {\n                on_finish(new_text);\n            }\n        };\n\n        // Create input element(s) for editing.\n        var cur_text = \"cur_text\" in config_dict ? config_dict.cur_text : container.text();\n\n        var input_elt;\n        var button_elt;\n\n        if (use_textarea) {\n            input_elt = $(\"<textarea/>\")\n                .attr({ rows: num_rows, cols: num_cols })\n                .text($.trim(cur_text))\n                .keyup(e => {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        set_text(cur_text);\n                    }\n                });\n            button_elt = $(\"<button/>\")\n                .text(\"Done\")\n                .click(() => {\n                    set_text(input_elt.val());\n                    // Return false so that click does not propogate to container.\n                    return false;\n                });\n        } else {\n            input_elt = $(\"<input type='text'/>\")\n                .attr({ value: $.trim(cur_text), size: num_cols })\n                .blur(() => {\n                    set_text(cur_text);\n                })\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        $(this).trigger(\"blur\");\n                    } else if (e.keyCode === 13) {\n                        // Enter key.\n                        set_text($(this).val());\n                    }\n\n                    // Do not propogate event to avoid unwanted side effects.\n                    e.stopPropagation();\n                });\n        }\n\n        // Replace text with input object(s) and focus & select.\n        container.text(\"\");\n        container.append(input_elt);\n        if (button_elt) {\n            container.append(button_elt);\n        }\n        input_elt.focus();\n        input_elt.select();\n\n        // Do not propogate to elements below b/c that blurs input and prevents it from being used.\n        e.stopPropagation();\n    });\n\n    // Add help text if there some.\n    if (help_text) {\n        container.attr(\"title\", help_text).tooltip();\n    }\n\n    return container;\n};\n\n// ============================================================================\n"]}