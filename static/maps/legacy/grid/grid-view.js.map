{"version":3,"sources":["legacy/grid/grid-view.js"],"names":["jQuery","ajaxSettings","traditional","Backbone","View","extend","grid","initialize","grid_config","dict_format","title","self","window","add_tag_to_grid_filter","tag_name","tag_value","tag","undefined","advanced_search","$","is","slideToggle","add_filter_condition","setElement","url_base","items","url_data","_","each","filters","v","k","ajax","url","param","success","response","embedded","init_grid","use_panels","css","padding","overflow","handle_refresh","refresh_frames","inArray","top","Galaxy","currHistoryPanel","loadCurrentHistory","set","options","attributes","allow_title_display","setWindowTitle","get","replace","$el","html","find","header","body","footer","message","use_hide_message","setTimeout","init_grid_elements","init_grid_controls","init_refresh_on_change","off","click","submit_operation","select","keyup","set_sort_condition","attr","submit","column_key","text_input_obj","text_input","val","parent","remove","remove_filter_condition","set_categorical_filter","on","check_all_items","checkboxes","check_count","update_checked","text","filter","length","change","rating","set_page","execute","href","target","items_length","item","index","button","encode_id","popup","operations","_add_operation","operation","settings","operation_config","label","allowed","allow_popup","addItem","url_args","confirmation_text","confirm","func","e","preventDefault","onclick","findItemByHtml","name","value","add_filter","t","filter_element","container","append","go_page_one","remove_filter","col_key","cur_sort","new_sort","indexOf","substring","sort_arrow","addClass","new_value","category_filter","cur_value","trim","filter_value","empty","removeClass","new_page","id","page_num","parseInt","split","cur_page","children","operation_button","operation_name","number_of_checked_ids","findWhere","item_ids","push","check","state","prop","c","href_parts","href_parms_str","href_parms","toLowerCase","location","get_url_data","can_async_op","update_grid","go_to","async","method","show","type","data","error","alert","response_text","insert","json","parseJSON","hide","complete"],"mappings":"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","file":"../../../scripts/legacy/grid/grid-view.js","sourcesContent":["// This is necessary so that, when nested arrays are used in ajax/post/get methods, square brackets ('[]') are\n// not appended to the identifier of a nested array.\njQuery.ajaxSettings.traditional = true;\n\n// dependencies\nimport Utils from \"utils/utils\";\nimport GridModel from \"legacy/grid/grid-model\";\nimport Templates from \"legacy/grid/grid-template\";\nimport PopupMenu from \"mvc/ui/popup-menu\";\n// grid view\nexport default Backbone.View.extend({\n    // model\n    grid: null,\n\n    // Initialize\n    initialize: function(grid_config) {\n        this.grid = new GridModel();\n        this.dict_format = grid_config.dict_format;\n        this.title = grid_config.title;\n        var self = this;\n        window.add_tag_to_grid_filter = (tag_name, tag_value) => {\n            // Put tag name and value together.\n            var tag = tag_name + (tag_value !== undefined && tag_value !== \"\" ? `:${tag_value}` : \"\");\n            var advanced_search = $(\"#advanced-search\").is(\":visible\");\n            if (!advanced_search) {\n                $(\"#standard-search\").slideToggle(\"fast\");\n                $(\"#advanced-search\").slideToggle(\"fast\");\n            }\n            self.add_filter_condition(\"tags\", tag);\n        };\n\n        // set element\n        if (this.dict_format) {\n            this.setElement(\"<div/>\");\n            if (grid_config.url_base && !grid_config.items) {\n                var url_data = grid_config.url_data || {};\n                _.each(grid_config.filters, (v, k) => {\n                    url_data[`f-${k}`] = v;\n                });\n                $.ajax({\n                    url: `${grid_config.url_base}?${$.param(url_data)}`,\n                    success: function(response) {\n                        response.embedded = grid_config.embedded;\n                        response.filters = grid_config.filters || {};\n                        self.init_grid(response);\n                    }\n                });\n            } else {\n                this.init_grid(grid_config);\n            }\n        } else {\n            this.setElement(\"#grid-container\");\n            this.init_grid(grid_config);\n        }\n\n        // fix padding\n        if (grid_config.use_panels) {\n            $(\"#center\").css({\n                padding: \"10px\",\n                overflow: \"auto\"\n            });\n        }\n    },\n\n    // refresh frames\n    handle_refresh: function(refresh_frames) {\n        if (refresh_frames) {\n            if ($.inArray(\"history\", refresh_frames) > -1) {\n                if (window.top.Galaxy && window.top.Galaxy.currHistoryPanel) {\n                    window.top.Galaxy.currHistoryPanel.loadCurrentHistory();\n                }\n            }\n        }\n    },\n\n    // Initialize\n    init_grid: function(grid_config) {\n        this.grid.set(grid_config);\n\n        // get options\n        var options = this.grid.attributes;\n\n        if (this.allow_title_display && options.title) {\n            Utils.setWindowTitle(options.title);\n        }\n        // handle refresh requests\n        this.handle_refresh(options.refresh_frames);\n\n        // strip protocol and domain\n        var url = this.grid.get(\"url_base\");\n        url = url.replace(/^.*\\/\\/[^\\/]+/, \"\");\n        this.grid.set(\"url_base\", url);\n\n        // append main template\n        this.$el.html(Templates.grid(options));\n\n        // update div contents\n        this.$el.find(\"#grid-table-header\").html(Templates.header(options));\n        this.$el.find(\"#grid-table-body\").html(Templates.body(options));\n        this.$el.find(\"#grid-table-footer\").html(Templates.footer(options));\n\n        // update message\n        if (options.message) {\n            this.$el.find(\"#grid-message\").html(Templates.message(options));\n            var self = this;\n            if (options.use_hide_message) {\n                setTimeout(() => {\n                    self.$el.find(\"#grid-message\").html(\"\");\n                }, 5000);\n            }\n        }\n\n        // configure elements\n        this.init_grid_elements();\n        this.init_grid_controls();\n\n        // attach global event handler\n        // TODO: redundant (the onload/standard page handlers do this) - but needed because these are constructed after page ready\n        if (window.init_refresh_on_change) {\n            window.init_refresh_on_change();\n        }\n    },\n\n    // Initialize grid controls\n    init_grid_controls: function() {\n        // link\n        var self = this;\n\n        // Initialize grid operation button.\n        this.$el.find(\".operation-button\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                self.submit_operation(this);\n                return false;\n            });\n        });\n\n        // Initialize text filters to select text on click and use normal font when user is typing.\n        this.$el.find(\"input[type=text]\").each(function() {\n            $(this).off();\n            $(this)\n                .click(function() {\n                    $(this).select();\n                })\n                .keyup(function() {\n                    $(this).css(\"font-style\", \"normal\");\n                });\n        });\n\n        // Initialize sort links.\n        this.$el.find(\".sort-link\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                self.set_sort_condition($(this).attr(\"sort_key\"));\n                return false;\n            });\n        });\n\n        // Initialize text filters.\n        this.$el.find(\".text-filter-form\").each(function() {\n            $(this).off();\n            $(this).submit(function() {\n                var column_key = $(this).attr(\"column_key\");\n                var text_input_obj = $(`#input-${column_key}-filter`);\n                var text_input = text_input_obj.val();\n                text_input_obj.val(\"\");\n                self.add_filter_condition(column_key, text_input);\n                return false;\n            });\n        });\n\n        // Initialize categorical filters.\n        this.$el.find(\".text-filter-val > a\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                // Remove visible element.\n                $(this)\n                    .parent()\n                    .remove();\n\n                // Remove filter condition.\n                self.remove_filter_condition($(this).attr(\"filter_key\"), $(this).attr(\"filter_val\"));\n\n                // Return\n                return false;\n            });\n        });\n\n        // Initialize categorical filters.\n        this.$el.find(\".categorical-filter > a\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                self.set_categorical_filter($(this).attr(\"filter_key\"), $(this).attr(\"filter_val\"));\n                return false;\n            });\n        });\n\n        // Initialize standard, advanced search toggles.\n        this.$el.find(\".advanced-search-toggle\").each(function() {\n            $(this).off();\n            $(this).click(() => {\n                self.$el.find(\"#standard-search\").slideToggle(\"fast\");\n                self.$el.find(\"#advanced-search\").slideToggle(\"fast\");\n                return false;\n            });\n        });\n\n        // Add event to check all box\n        this.$el.find(\"#check_all\").off();\n        this.$el.find(\"#check_all\").on(\"click\", () => {\n            self.check_all_items();\n        });\n    },\n\n    // Initialize grid elements.\n    init_grid_elements: function() {\n        // Initialize grid selection checkboxes.\n        this.$el.find(\".grid\").each(function() {\n            var checkboxes = $(this).find(\"input.grid-row-select-checkbox\");\n            var check_count = $(this).find(\"span.grid-selected-count\");\n            var update_checked = () => {\n                check_count.text($(checkboxes).filter(\":checked\").length);\n            };\n\n            $(checkboxes).each(function() {\n                $(this).change(update_checked);\n            });\n            update_checked();\n        });\n\n        // Initialize ratings.\n        if (this.$el.find(\".community_rating_star\").length !== 0) this.$el.find(\".community_rating_star\").rating({});\n\n        // get options\n        var options = this.grid.attributes;\n        var self = this;\n\n        //\n        // add page click events\n        //\n        this.$el.find(\".page-link > a\").each(function() {\n            $(this).click(function() {\n                self.set_page($(this).attr(\"page_num\"));\n                return false;\n            });\n        });\n\n        //\n        // add inbound/outbound events\n        //\n        this.$el.find(\".use-target\").each(function() {\n            $(this).click(function() {\n                self.execute({\n                    href: $(this).attr(\"href\"),\n                    target: $(this).attr(\"target\")\n                });\n                return false;\n            });\n        });\n\n        // empty grid?\n        var items_length = options.items.length;\n        if (items_length === 0) {\n            return;\n        }\n\n        // add operation popup menus\n        _.each(options.items, (item, index) => {\n            var button = self.$(`#grid-${item.encode_id}-popup`).off();\n            var popup = new PopupMenu(button);\n            _.each(options.operations, operation => {\n                self._add_operation(popup, operation, item);\n            });\n        });\n    },\n\n    /** Add an operation to the items menu */\n    _add_operation: function(popup, operation, item) {\n        var self = this;\n        var settings = item.operation_config[operation.label];\n        if (settings.allowed && operation.allow_popup) {\n            popup.addItem({\n                html: operation.label,\n                href: settings.url_args,\n                target: settings.target,\n                confirmation_text: operation.confirm,\n                func: function(e) {\n                    e.preventDefault();\n                    var label = $(e.target).html();\n                    if (operation.onclick) {\n                        operation.onclick(item.encode_id);\n                    } else {\n                        self.execute(this.findItemByHtml(label));\n                    }\n                }\n            });\n        }\n    },\n\n    // Add a condition to the grid filter; this adds the condition and refreshes the grid.\n    add_filter_condition: function(name, value) {\n        // Do nothing is value is empty.\n        if (value === \"\") {\n            return false;\n        }\n\n        // Add condition to grid.\n        this.grid.add_filter(name, value, true);\n\n        // Add button that displays filter and provides a button to delete it.\n        var t = $(Templates.filter_element(name, value));\n        var self = this;\n        t.click(function() {\n            // Remove visible element.\n            $(this).remove();\n\n            // Remove filter condition.\n            self.remove_filter_condition(name, value);\n        });\n\n        // append to container\n        var container = this.$el.find(`#${name}-filtering-criteria`);\n        container.append(t);\n\n        // execute\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Remove a condition to the grid filter; this adds the condition and refreshes the grid.\n    remove_filter_condition: function(name, value) {\n        // Remove filter condition.\n        this.grid.remove_filter(name, value);\n\n        // Execute\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set sort condition for grid.\n    set_sort_condition: function(col_key) {\n        // Set new sort condition. New sort is col_key if sorting new column; if reversing sort on\n        // currently sorted column, sort is reversed.\n        var cur_sort = this.grid.get(\"sort_key\");\n        var new_sort = col_key;\n        if (cur_sort.indexOf(col_key) !== -1) {\n            // Reverse sort.\n            if (cur_sort.substring(0, 1) !== \"-\") {\n                new_sort = `-${col_key}`;\n            }\n        }\n\n        // Remove sort arrows elements.\n        this.$el.find(\".sort-arrow\").remove();\n\n        // Add sort arrow element to new sort column.\n        var sort_arrow = new_sort.substring(0, 1) == \"-\" ? \"&uarr;\" : \"&darr;\";\n        var t = $(`<span>${sort_arrow}</span>`).addClass(\"sort-arrow\");\n\n        // Add to header\n        this.$el.find(`#${col_key}-header`).append(t);\n\n        // Update grid.\n        this.grid.set(\"sort_key\", new_sort);\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set new value for categorical filter.\n    set_categorical_filter: function(name, new_value) {\n        // Update filter hyperlinks to reflect new filter value.\n        var category_filter = this.grid.get(\"categorical_filters\")[name];\n\n        var cur_value = this.grid.get(\"filters\")[name];\n        var self = this;\n        this.$el.find(`.${name}-filter`).each(function() {\n            var text = $.trim($(this).text());\n            var filter = category_filter[text];\n            var filter_value = filter[name];\n            if (filter_value == new_value) {\n                // Remove filter link since grid will be using this filter. It is assumed that\n                // this element has a single child, a hyperlink/anchor with text.\n                $(this).empty();\n                $(this).addClass(\"current-filter\");\n                $(this).append(text);\n            } else if (filter_value == cur_value) {\n                // Add hyperlink for this filter since grid will no longer be using this filter. It is assumed that\n                // this element has a single child, a hyperlink/anchor.\n                $(this).empty();\n                var t = $(`<a href=\"#\">${text}</a>`);\n                t.click(() => {\n                    self.set_categorical_filter(name, filter_value);\n                });\n                $(this).removeClass(\"current-filter\");\n                $(this).append(t);\n            }\n        });\n\n        // Update grid.\n        this.grid.add_filter(name, new_value);\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set page to view.\n    set_page: function(new_page) {\n        // Update page hyperlink to reflect new page.\n        var self = this;\n        this.$el.find(\".page-link\").each(function() {\n            var id = $(this).attr(\"id\");\n\n            var // Id has form 'page-link-<page_num>\n            page_num = parseInt(id.split(\"-\")[2], 10);\n\n            var cur_page = self.grid.get(\"cur_page\");\n            var text;\n            if (page_num === new_page) {\n                // Remove link to page since grid will be on this page. It is assumed that\n                // this element has a single child, a hyperlink/anchor with text.\n                text = $(this)\n                    .children()\n                    .text();\n                $(this).empty();\n                $(this).addClass(\"inactive-link\");\n                $(this).text(text);\n            } else if (page_num === cur_page) {\n                // Add hyperlink to this page since grid will no longer be on this page. It is assumed that\n                // this element has a single child, a hyperlink/anchor.\n                text = $(this).text();\n                $(this).empty();\n                $(this).removeClass(\"inactive-link\");\n                var t = $(`<a href=\"#\">${text}</a>`);\n                t.click(() => {\n                    self.set_page(page_num);\n                });\n                $(this).append(t);\n            }\n        });\n\n        if (new_page === \"all\") {\n            this.grid.set(\"cur_page\", new_page);\n        } else {\n            this.grid.set(\"cur_page\", parseInt(new_page, 10));\n        }\n        this.execute();\n    },\n\n    // confirmation/submission of operation request\n    submit_operation: function(operation_button, confirmation_text) {\n        // identify operation\n        var operation_name = $(operation_button).val();\n\n        // verify any item is selected\n        var number_of_checked_ids = this.$el.find('input[name=\"id\"]:checked').length;\n        if (number_of_checked_ids < 1) {\n            return false;\n        }\n\n        // Check to see if there's grid confirmation text for this operation\n        var operation = _.findWhere(this.grid.attributes.operations, {\n            label: operation_name\n        });\n        if (operation && !confirmation_text) {\n            confirmation_text = operation.confirm || \"\";\n        }\n\n        // collect ids\n        var item_ids = [];\n        this.$el.find(\"input[name=id]:checked\").each(function() {\n            item_ids.push($(this).val());\n        });\n\n        // execute operation\n        var options = {\n            operation: operation_name,\n            id: item_ids,\n            confirmation_text: confirmation_text\n        };\n        if (operation.target == \"top\" || operation.target == \"center\") {\n            options = _.extend(options, {\n                href: operation.href,\n                target: operation.target\n            });\n        }\n        this.execute(options);\n        return true;\n    },\n\n    check_all_items: function() {\n        var check = this.$(\".grid-row-select-checkbox\");\n        var state = this.$(\"#check_all\").prop(\"checked\");\n        _.each(check, c => {\n            $(c).prop(\"checked\", state);\n        });\n        this.init_grid_elements();\n    },\n\n    // Go back to page one; this is useful when a filter is applied.\n    go_page_one: function() {\n        // Need to go back to page 1 if not showing all.\n        var cur_page = this.grid.get(\"cur_page\");\n        if (cur_page !== null && cur_page !== undefined && cur_page !== \"all\") {\n            this.grid.set(\"cur_page\", 1);\n        }\n    },\n\n    //\n    // execute operations and hyperlink requests\n    //\n    execute: function(options) {\n        // get url\n        var id = null;\n        var href = null;\n        var operation = null;\n        var confirmation_text = null;\n        var target = null;\n\n        // check for options\n        if (options) {\n            // get options\n            href = options.href;\n            operation = options.operation;\n            id = options.id;\n            confirmation_text = options.confirmation_text;\n            target = options.target;\n\n            // check if input contains the operation tag\n            if (href !== undefined && href.indexOf(\"operation=\") != -1) {\n                // Get operation, id in hyperlink's href.\n                var href_parts = href.split(\"?\");\n                if (href_parts.length > 1) {\n                    var href_parms_str = href_parts[1];\n                    var href_parms = href_parms_str.split(\"&\");\n                    for (var index = 0; index < href_parms.length; index++) {\n                        if (href_parms[index].indexOf(\"operation\") != -1) {\n                            // Found operation parm; get operation value.\n                            operation = href_parms[index].split(\"=\")[1];\n                            operation = operation.replace(/\\+/g, \" \");\n                        } else if (href_parms[index].indexOf(\"id\") != -1) {\n                            // Found id parm; get id value.\n                            id = href_parms[index].split(\"=\")[1];\n                        }\n                    }\n                }\n            }\n        }\n\n        // check for operation details\n        if (operation && id) {\n            // show confirmation box\n            if (\n                confirmation_text &&\n                confirmation_text !== \"\" &&\n                confirmation_text != \"None\" &&\n                confirmation_text != \"null\"\n            )\n                if (!confirm(confirmation_text)) return false;\n\n            // use small characters for operation?!\n            operation = operation.toLowerCase();\n\n            // Update grid.\n            this.grid.set({\n                operation: operation,\n                item_ids: id\n            });\n\n            // Do operation. If operation cannot be performed asynchronously, redirect to location.\n            if (target == \"top\") {\n                window.top.location = `${href}?${$.param(this.grid.get_url_data())}`;\n            } else if (target == \"center\") {\n                $(\"#galaxy_main\").attr(\"src\", `${href}?${$.param(this.grid.get_url_data())}`);\n            } else if (this.grid.can_async_op(operation) || this.dict_format) {\n                this.update_grid();\n            } else {\n                this.go_to(target, href);\n            }\n\n            // done\n            return false;\n        }\n\n        // refresh grid\n        if (href) {\n            this.go_to(target, href);\n            return false;\n        }\n\n        // refresh grid\n        if (this.grid.get(\"async\") || this.dict_format) {\n            this.update_grid();\n        } else {\n            this.go_to(target, href);\n        }\n\n        // done\n        return false;\n    },\n\n    // go to url\n    go_to: function(target, href) {\n        // get aysnc status\n        var async = this.grid.get(\"async\");\n        this.grid.set(\"async\", false);\n\n        // get slide status\n        var advanced_search = this.$el.find(\"#advanced-search\").is(\":visible\");\n        this.grid.set(\"advanced_search\", advanced_search);\n\n        // get default url\n        if (!href) {\n            href = `${this.grid.get(\"url_base\")}?${$.param(this.grid.get_url_data())}`;\n        }\n\n        // clear grid of transient request attributes.\n        this.grid.set({\n            operation: undefined,\n            item_ids: undefined,\n            async: async\n        });\n        switch (target) {\n            case \"center\":\n                $(\"#galaxy_main\").attr(\"src\", href);\n                break;\n            case \"top\":\n                window.top.location = href;\n                break;\n            default:\n                window.location = href;\n        }\n    },\n\n    // Update grid.\n    update_grid: function() {\n        // If there's an operation, do POST; otherwise, do GET.\n        var method = this.grid.get(\"operation\") ? \"POST\" : \"GET\";\n\n        // Show overlay to indicate loading and prevent user actions.\n        this.$el.find(\".loading-elt-overlay\").show();\n        var self = this;\n        $.ajax({\n            type: method,\n            url: self.grid.get(\"url_base\"),\n            data: self.grid.get_url_data(),\n            error: function() {\n                alert(\"Grid refresh failed\");\n            },\n            success: function(response_text) {\n                // backup\n                var embedded = self.grid.get(\"embedded\");\n                var insert = self.grid.get(\"insert\");\n                var advanced_search = self.$el.find(\"#advanced-search\").is(\":visible\");\n\n                // request new configuration\n                var json = self.dict_format ? response_text : $.parseJSON(response_text);\n\n                // update\n                json.embedded = embedded;\n                json.insert = insert;\n                json.advanced_search = advanced_search;\n\n                // Initialize new grid config\n                self.init_grid(json);\n\n                // Hide loading overlay.\n                self.$el.find(\".loading-elt-overlay\").hide();\n            },\n            complete: function() {\n                // Clear grid of transient request attributes.\n                self.grid.set({\n                    operation: undefined,\n                    item_ids: undefined\n                });\n            }\n        });\n    }\n});\n"]}