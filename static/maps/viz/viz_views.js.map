{"version":3,"sources":["viz/viz_views.js"],"names":["_","TrackHeaderView","Backbone","View","extend","className","initialize","model","config","get","on","update_name","render","$el","append","$","addClass","drag_handle_class","text","get_value","action_icons","render_action_icons","dblclick","e","stopPropagation","find","self","icons_div","hide","appendTo","each","action_icons_def","add_action_icon","icon_dict","name","title","css_class","on_click_fn","prepend","set_display_modes","display_modes","attr","tooltip","click","new_modes","init_mode","mode","mode_icon","track","mode_mapping","i","len","length","change_mode","make_popupmenu"],"mappings":"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","file":"../../scripts/viz/viz_views.js","sourcesContent":["import * as _ from \"libs/underscore\";\n/**\n * View for track/group header.\n */\nvar TrackHeaderView = Backbone.View.extend({\n    className: \"track-header\",\n\n    initialize: function() {\n        // Watch and update name changes.\n        this.model.config.get(\"name\").on(\"change:value\", this.update_name, this);\n        this.render();\n    },\n\n    render: function() {\n        this.$el.append($(\"<div/>\").addClass(this.model.drag_handle_class));\n        this.$el.append(\n            $(\"<div/>\")\n                .addClass(\"track-name\")\n                .text(this.model.config.get_value(\"name\"))\n        );\n\n        // Icons container.\n        this.action_icons = {};\n        this.render_action_icons();\n\n        // Suppress double clicks in header so that they do not impact viz under header.\n        this.$el.dblclick(e => {\n            e.stopPropagation();\n        });\n\n        // Needed for floating elts in header.\n        this.$el.append($(\"<div style='clear: both'/>\"));\n    },\n\n    update_name: function() {\n        this.$el.find(\".track-name\").text(this.model.config.get_value(\"name\"));\n    },\n\n    render_action_icons: function() {\n        var self = this;\n        this.icons_div = $(\"<div/>\")\n            .addClass(\"track-icons\")\n            .hide()\n            .appendTo(this.$el);\n        _.each(this.model.action_icons_def, icon_dict => {\n            self.add_action_icon(\n                icon_dict.name,\n                icon_dict.title,\n                icon_dict.css_class,\n                icon_dict.on_click_fn,\n                icon_dict.prepend,\n                icon_dict.hide\n            );\n        });\n\n        // Set up behavior for modes popup.\n        this.set_display_modes(this.model.display_modes);\n    },\n\n    /**\n     * Add an action icon to this object. Appends icon unless prepend flag is specified.\n     */\n    add_action_icon: function(name, title, css_class, on_click_fn, prepend, hide) {\n        var self = this;\n        this.action_icons[name] = $(\"<a/>\")\n            .attr(\"title\", title)\n            .addClass(\"icon-button\")\n            .addClass(css_class)\n            .tooltip()\n            .click(() => {\n                on_click_fn(self.model);\n            })\n            .appendTo(this.icons_div);\n        if (hide) {\n            this.action_icons[name].hide();\n        }\n    },\n\n    /**\n     * Set track's modes and update mode icon popup.\n     */\n    set_display_modes: function(new_modes, init_mode) {\n        if (!new_modes) {\n            return;\n        }\n\n        // HACK: move this out of view and into track.\n\n        // Set modes, init mode.\n        this.model.display_modes = new_modes;\n        this.model.mode = init_mode || this.model.config.get_value(\"mode\") || this.model.display_modes[0];\n\n        this.action_icons.mode_icon.attr(\"title\", `Set display mode (now: ${this.mode})`);\n\n        // Setup popup menu for changing modes.\n        var self = this;\n\n        var track = this.model;\n        var mode_mapping = {};\n        for (var i = 0, len = track.display_modes.length; i < len; i++) {\n            var mode = track.display_modes[i];\n            mode_mapping[mode] = (mode => () => {\n                track.change_mode(mode);\n                // HACK: the popup menu messes with the track's hover event, so manually show/hide\n                // icons div for now.\n                //self.icons_div.show();\n                //track.container_div.mouseleave(function() { track.icons_div.hide(); } );\n            })(mode);\n        }\n\n        make_popupmenu(this.action_icons.mode_icon, mode_mapping);\n    }\n});\n\nexport default {\n    TrackHeaderView: TrackHeaderView\n};\n"]}