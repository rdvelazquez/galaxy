{"version":3,"sources":["utils/natural-sort.js"],"names":["naturalSort","a","b","re","x","toString","toLowerCase","y","nC","String","fromCharCode","xN","replace","split","yN","xD","Date","getTime","yD","oFxNcL","oFyNcL","cLoc","numS","Math","max","length","parseFloat"],"mappings":";;;;;;AAAA;AACA,aAASA,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACvB;AACA,YAAIC,KAAK,eAAT;;AAEA,YAAIC,IAAIH,EAAEI,QAAF,GAAaC,WAAb,MAA8B,EAAtC;AACA,YAAIC,IAAIL,EAAEG,QAAF,GAAaC,WAAb,MAA8B,EAAtC;AACA,YAAIE,KAAKC,OAAOC,YAAP,CAAoB,CAApB,CAAT;AACA,YAAIC,KAAKP,EAAEQ,OAAF,CAAUT,EAAV,EAAiBK,EAAjB,UAAwBA,EAAxB,EAA8BK,KAA9B,CAAoCL,EAApC,CAAT;AACA,YAAIM,KAAKP,EAAEK,OAAF,CAAUT,EAAV,EAAiBK,EAAjB,UAAwBA,EAAxB,EAA8BK,KAA9B,CAAoCL,EAApC,CAAT;AACA,YAAIO,KAAK,IAAIC,IAAJ,CAASZ,CAAT,EAAYa,OAAZ,EAAT;AACA,YAAIC,KAAKH,KAAK,IAAIC,IAAJ,CAAST,CAAT,EAAYU,OAAZ,EAAL,GAA6B,IAAtC;AACA;AACA,YAAIC,EAAJ,EAAQ;AACJ,gBAAIH,KAAKG,EAAT,EAAa;AACT,uBAAO,CAAC,CAAR;AACH,aAFD,MAEO,IAAIH,KAAKG,EAAT,EAAa;AAChB,uBAAO,CAAP;AACH;AACJ;;AAED;AACA,YAAIC,MAAJ;;AAEA,YAAIC,MAAJ;AACA,aAAK,IAAIC,OAAO,CAAX,EAAcC,OAAOC,KAAKC,GAAL,CAASb,GAAGc,MAAZ,EAAoBX,GAAGW,MAAvB,CAA1B,EAA0DJ,OAAOC,IAAjE,EAAuED,MAAvE,EAA+E;AAC3EF,qBAASO,WAAWf,GAAGU,IAAH,CAAX,KAAwBV,GAAGU,IAAH,CAAjC;AACAD,qBAASM,WAAWZ,GAAGO,IAAH,CAAX,KAAwBP,GAAGO,IAAH,CAAjC;AACA,gBAAIF,SAASC,MAAb,EAAqB;AACjB,uBAAO,CAAC,CAAR;AACH,aAFD,MAEO,IAAID,SAASC,MAAb,EAAqB;AACxB,uBAAO,CAAP;AACH;AACJ;AACD,eAAO,CAAP;AACH;;sBAEcpB,W","file":"../../scripts/utils/natural-sort.js","sourcesContent":["// Alphanumeric/natural sort fn\nfunction naturalSort(a, b) {\n    // setup temp-scope variables for comparison evauluation\n    var re = /(-?[0-9\\.]+)/g;\n\n    var x = a.toString().toLowerCase() || \"\";\n    var y = b.toString().toLowerCase() || \"\";\n    var nC = String.fromCharCode(0);\n    var xN = x.replace(re, `${nC}$1${nC}`).split(nC);\n    var yN = y.replace(re, `${nC}$1${nC}`).split(nC);\n    var xD = new Date(x).getTime();\n    var yD = xD ? new Date(y).getTime() : null;\n    // natural sorting of dates\n    if (yD) {\n        if (xD < yD) {\n            return -1;\n        } else if (xD > yD) {\n            return 1;\n        }\n    }\n\n    // natural sorting through split numeric strings and default strings\n    var oFxNcL;\n\n    var oFyNcL;\n    for (var cLoc = 0, numS = Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {\n        oFxNcL = parseFloat(xN[cLoc]) || xN[cLoc];\n        oFyNcL = parseFloat(yN[cLoc]) || yN[cLoc];\n        if (oFxNcL < oFyNcL) {\n            return -1;\n        } else if (oFxNcL > oFyNcL) {\n            return 1;\n        }\n    }\n    return 0;\n}\n\nexport default naturalSort;\n"]}