{"version":3,"sources":["utils/query-string-parsing.js"],"names":["get","key","queryString","window","location","search","substr","keyRegex","RegExp","matches","match","length","undefined","_","map","decodeURIComponent","replace","parse","parsed","split","forEach","pair","pairString","decodeURI"],"mappings":";;;;;;AAAA;AACA,aAASA,GAAT,CAAaC,GAAb,EAAkBC,WAAlB,EAA+B;AAC3BA,sBAAcA,eAAeC,OAAOC,QAAP,CAAgBC,MAAhB,CAAuBC,MAAvB,CAA8B,CAA9B,CAA7B;AACA,YAAIC,WAAW,IAAIC,MAAJ,CAAcP,GAAd,iBAA+B,GAA/B,CAAf;AACA,YAAIQ,UAAUP,YAAYQ,KAAZ,CAAkBH,QAAlB,CAAd;AACA,YAAI,CAACE,OAAD,IAAY,CAACA,QAAQE,MAAzB,EAAiC;AAC7B,mBAAOC,SAAP;AACH;AACDH,kBAAUI,EAAEC,GAAF,CAAML,OAAN,EAAe;AAAA,mBAASM,mBAAmBL,MAAMJ,MAAN,CAAaL,IAAIU,MAAJ,GAAa,CAA1B,EAA6BK,OAA7B,CAAqC,KAArC,EAA4C,GAA5C,CAAnB,CAAT;AAAA,SAAf,CAAV;AACA,YAAIP,QAAQE,MAAR,KAAmB,CAAvB,EAA0B;AACtB,mBAAOF,QAAQ,CAAR,CAAP;AACH;AACD,eAAOA,OAAP;AACH;;AAED,aAASQ,KAAT,CAAef,WAAf,EAA4B;AACxB,YAAI,CAACA,WAAL,EAAkB;AACd,mBAAO,EAAP;AACH;AACD,YAAIgB,SAAS,EAAb;AACA,YAAIC,QAAQjB,YAAYiB,KAAZ,CAAkB,GAAlB,CAAZ;AACAA,cAAMC,OAAN,CAAc,sBAAc;AACxB,gBAAIC,OAAOC,WAAWH,KAAX,CAAiB,GAAjB,CAAX;AACAD,mBAAOG,KAAK,CAAL,CAAP,IAAkBE,UAAUF,KAAK,CAAL,CAAV,CAAlB;AACH,SAHD;AAIA,eAAOH,MAAP;AACH;;AAED;sBACe;AACXlB,aAAKA,GADM;AAEXiB,eAAOA;AAFI,K","file":"../../scripts/utils/query-string-parsing.js","sourcesContent":["// ============================================================================\nfunction get(key, queryString) {\n    queryString = queryString || window.location.search.substr(1);\n    var keyRegex = new RegExp(`${key}=([^&#$]+)`, \"g\");\n    var matches = queryString.match(keyRegex);\n    if (!matches || !matches.length) {\n        return undefined;\n    }\n    matches = _.map(matches, match => decodeURIComponent(match.substr(key.length + 1).replace(/\\+/g, \" \")));\n    if (matches.length === 1) {\n        return matches[0];\n    }\n    return matches;\n}\n\nfunction parse(queryString) {\n    if (!queryString) {\n        return {};\n    }\n    var parsed = {};\n    var split = queryString.split(\"&\");\n    split.forEach(pairString => {\n        var pair = pairString.split(\"=\");\n        parsed[pair[0]] = decodeURI(pair[1]);\n    });\n    return parsed;\n}\n\n// ============================================================================\nexport default {\n    get: get,\n    parse: parse\n};\n"]}